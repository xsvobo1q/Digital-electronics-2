
blink.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000000  00800100  00800100  00000290  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000023c  00000000  00000000  00000054  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .comment      00000030  00000000  00000000  00000290  2**0
                  CONTENTS, READONLY
  3 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000002c0  2**2
                  CONTENTS, READONLY
  4 .debug_aranges 00000020  00000000  00000000  00000300  2**0
                  CONTENTS, READONLY, DEBUGGING
  5 .debug_info   00000ac8  00000000  00000000  00000320  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_abbrev 0000068a  00000000  00000000  00000de8  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_line   00000419  00000000  00000000  00001472  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_frame  00000024  00000000  00000000  0000188c  2**2
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_str    000003c0  00000000  00000000  000018b0  2**0
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_loc    000004c8  00000000  00000000  00001c70  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_ranges 00000010  00000000  00000000  00002138  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 34 00 	jmp	0x68	; 0x68 <__ctors_end>
   4:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   8:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
   c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  10:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  14:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  18:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  1c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  20:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  24:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  28:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  2c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  30:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  34:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  38:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  3c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  40:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  44:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  48:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  4c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  50:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  54:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  58:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  5c:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  60:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>
  64:	0c 94 3e 00 	jmp	0x7c	; 0x7c <__bad_interrupt>

00000068 <__ctors_end>:
  68:	11 24       	eor	r1, r1
  6a:	1f be       	out	0x3f, r1	; 63
  6c:	cf ef       	ldi	r28, 0xFF	; 255
  6e:	d8 e0       	ldi	r29, 0x08	; 8
  70:	de bf       	out	0x3e, r29	; 62
  72:	cd bf       	out	0x3d, r28	; 61
  74:	0e 94 40 00 	call	0x80	; 0x80 <main>
  78:	0c 94 1c 01 	jmp	0x238	; 0x238 <_exit>

0000007c <__bad_interrupt>:
  7c:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000080 <main>:
int main(void)
{

    // Set pin as output in Data Direction Register
    // DDRB = DDRB or 0010 0000
    DDRB = DDRB | (1<<LED_GREEN);
  80:	25 9a       	sbi	0x04, 5	; 4

    // Set pin LOW in Data Register (LED off)
    // PORTB = PORTB and 1101 1111
    PORTB = PORTB & ~(1<<LED_GREEN);
  82:	2d 98       	cbi	0x05, 5	; 5

    // Infinite loop
    while (1)
    {
		// D
        PORTB = PORTB ^ (1<<LED_GREEN);
  84:	80 e2       	ldi	r24, 0x20	; 32
  86:	95 b1       	in	r25, 0x05	; 5
  88:	98 27       	eor	r25, r24
  8a:	95 b9       	out	0x05, r25	; 5
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
  8c:	2f ef       	ldi	r18, 0xFF	; 255
  8e:	3b e4       	ldi	r19, 0x4B	; 75
  90:	9d e1       	ldi	r25, 0x1D	; 29
  92:	21 50       	subi	r18, 0x01	; 1
  94:	30 40       	sbci	r19, 0x00	; 0
  96:	90 40       	sbci	r25, 0x00	; 0
  98:	e1 f7       	brne	.-8      	; 0x92 <main+0x12>
  9a:	00 c0       	rjmp	.+0      	; 0x9c <main+0x1c>
  9c:	00 00       	nop
		_delay_ms(DASH); // dash length is threefold as length of dot
		PORTB = PORTB ^ (1<<LED_GREEN);
  9e:	95 b1       	in	r25, 0x05	; 5
  a0:	98 27       	eor	r25, r24
  a2:	95 b9       	out	0x05, r25	; 5
  a4:	2f ef       	ldi	r18, 0xFF	; 255
  a6:	33 ec       	ldi	r19, 0xC3	; 195
  a8:	99 e0       	ldi	r25, 0x09	; 9
  aa:	21 50       	subi	r18, 0x01	; 1
  ac:	30 40       	sbci	r19, 0x00	; 0
  ae:	90 40       	sbci	r25, 0x00	; 0
  b0:	e1 f7       	brne	.-8      	; 0xaa <main+0x2a>
  b2:	00 c0       	rjmp	.+0      	; 0xb4 <main+0x34>
  b4:	00 00       	nop
		_delay_ms(MARK_PAUSE); // pause between marks is the same length as length of dot 
		PORTB = PORTB ^ (1<<LED_GREEN);
  b6:	95 b1       	in	r25, 0x05	; 5
  b8:	98 27       	eor	r25, r24
  ba:	95 b9       	out	0x05, r25	; 5
  bc:	2f ef       	ldi	r18, 0xFF	; 255
  be:	33 ec       	ldi	r19, 0xC3	; 195
  c0:	99 e0       	ldi	r25, 0x09	; 9
  c2:	21 50       	subi	r18, 0x01	; 1
  c4:	30 40       	sbci	r19, 0x00	; 0
  c6:	90 40       	sbci	r25, 0x00	; 0
  c8:	e1 f7       	brne	.-8      	; 0xc2 <main+0x42>
  ca:	00 c0       	rjmp	.+0      	; 0xcc <main+0x4c>
  cc:	00 00       	nop
		_delay_ms(DOT);
		PORTB = PORTB ^ (1<<LED_GREEN);
  ce:	95 b1       	in	r25, 0x05	; 5
  d0:	98 27       	eor	r25, r24
  d2:	95 b9       	out	0x05, r25	; 5
  d4:	2f ef       	ldi	r18, 0xFF	; 255
  d6:	33 ec       	ldi	r19, 0xC3	; 195
  d8:	99 e0       	ldi	r25, 0x09	; 9
  da:	21 50       	subi	r18, 0x01	; 1
  dc:	30 40       	sbci	r19, 0x00	; 0
  de:	90 40       	sbci	r25, 0x00	; 0
  e0:	e1 f7       	brne	.-8      	; 0xda <main+0x5a>
  e2:	00 c0       	rjmp	.+0      	; 0xe4 <main+0x64>
  e4:	00 00       	nop
		_delay_ms(MARK_PAUSE);
		PORTB = PORTB ^ (1<<LED_GREEN);
  e6:	95 b1       	in	r25, 0x05	; 5
  e8:	98 27       	eor	r25, r24
  ea:	95 b9       	out	0x05, r25	; 5
  ec:	2f ef       	ldi	r18, 0xFF	; 255
  ee:	33 ec       	ldi	r19, 0xC3	; 195
  f0:	99 e0       	ldi	r25, 0x09	; 9
  f2:	21 50       	subi	r18, 0x01	; 1
  f4:	30 40       	sbci	r19, 0x00	; 0
  f6:	90 40       	sbci	r25, 0x00	; 0
  f8:	e1 f7       	brne	.-8      	; 0xf2 <main+0x72>
  fa:	00 c0       	rjmp	.+0      	; 0xfc <main+0x7c>
  fc:	00 00       	nop
		_delay_ms(DOT);
		PORTB = PORTB ^ (1<<LED_GREEN);
  fe:	95 b1       	in	r25, 0x05	; 5
 100:	98 27       	eor	r25, r24
 102:	95 b9       	out	0x05, r25	; 5
 104:	2f ef       	ldi	r18, 0xFF	; 255
 106:	3b e4       	ldi	r19, 0x4B	; 75
 108:	9d e1       	ldi	r25, 0x1D	; 29
 10a:	21 50       	subi	r18, 0x01	; 1
 10c:	30 40       	sbci	r19, 0x00	; 0
 10e:	90 40       	sbci	r25, 0x00	; 0
 110:	e1 f7       	brne	.-8      	; 0x10a <main+0x8a>
 112:	00 c0       	rjmp	.+0      	; 0x114 <main+0x94>
 114:	00 00       	nop
		_delay_ms(LETTER_PAUSE); // pause between letters is threefold of dot length
		
		// E
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 116:	95 b1       	in	r25, 0x05	; 5
 118:	98 27       	eor	r25, r24
 11a:	95 b9       	out	0x05, r25	; 5
 11c:	2f ef       	ldi	r18, 0xFF	; 255
 11e:	33 ec       	ldi	r19, 0xC3	; 195
 120:	99 e0       	ldi	r25, 0x09	; 9
 122:	21 50       	subi	r18, 0x01	; 1
 124:	30 40       	sbci	r19, 0x00	; 0
 126:	90 40       	sbci	r25, 0x00	; 0
 128:	e1 f7       	brne	.-8      	; 0x122 <main+0xa2>
 12a:	00 c0       	rjmp	.+0      	; 0x12c <main+0xac>
 12c:	00 00       	nop
		_delay_ms(DOT);
		PORTB = PORTB ^ (1<<LED_GREEN);
 12e:	95 b1       	in	r25, 0x05	; 5
 130:	98 27       	eor	r25, r24
 132:	95 b9       	out	0x05, r25	; 5
 134:	2f ef       	ldi	r18, 0xFF	; 255
 136:	3b e4       	ldi	r19, 0x4B	; 75
 138:	9d e1       	ldi	r25, 0x1D	; 29
 13a:	21 50       	subi	r18, 0x01	; 1
 13c:	30 40       	sbci	r19, 0x00	; 0
 13e:	90 40       	sbci	r25, 0x00	; 0
 140:	e1 f7       	brne	.-8      	; 0x13a <main+0xba>
 142:	00 c0       	rjmp	.+0      	; 0x144 <main+0xc4>
 144:	00 00       	nop
		_delay_ms(LETTER_PAUSE);
		
		// 2
		
		PORTB = PORTB ^ (1<<LED_GREEN);
 146:	95 b1       	in	r25, 0x05	; 5
 148:	98 27       	eor	r25, r24
 14a:	95 b9       	out	0x05, r25	; 5
 14c:	2f ef       	ldi	r18, 0xFF	; 255
 14e:	33 ec       	ldi	r19, 0xC3	; 195
 150:	99 e0       	ldi	r25, 0x09	; 9
 152:	21 50       	subi	r18, 0x01	; 1
 154:	30 40       	sbci	r19, 0x00	; 0
 156:	90 40       	sbci	r25, 0x00	; 0
 158:	e1 f7       	brne	.-8      	; 0x152 <main+0xd2>
 15a:	00 c0       	rjmp	.+0      	; 0x15c <main+0xdc>
 15c:	00 00       	nop
		_delay_ms(DOT);
		PORTB = PORTB ^ (1<<LED_GREEN);
 15e:	95 b1       	in	r25, 0x05	; 5
 160:	98 27       	eor	r25, r24
 162:	95 b9       	out	0x05, r25	; 5
 164:	2f ef       	ldi	r18, 0xFF	; 255
 166:	33 ec       	ldi	r19, 0xC3	; 195
 168:	99 e0       	ldi	r25, 0x09	; 9
 16a:	21 50       	subi	r18, 0x01	; 1
 16c:	30 40       	sbci	r19, 0x00	; 0
 16e:	90 40       	sbci	r25, 0x00	; 0
 170:	e1 f7       	brne	.-8      	; 0x16a <main+0xea>
 172:	00 c0       	rjmp	.+0      	; 0x174 <main+0xf4>
 174:	00 00       	nop
		_delay_ms(MARK_PAUSE);
		PORTB = PORTB ^ (1<<LED_GREEN);
 176:	95 b1       	in	r25, 0x05	; 5
 178:	98 27       	eor	r25, r24
 17a:	95 b9       	out	0x05, r25	; 5
 17c:	2f ef       	ldi	r18, 0xFF	; 255
 17e:	33 ec       	ldi	r19, 0xC3	; 195
 180:	99 e0       	ldi	r25, 0x09	; 9
 182:	21 50       	subi	r18, 0x01	; 1
 184:	30 40       	sbci	r19, 0x00	; 0
 186:	90 40       	sbci	r25, 0x00	; 0
 188:	e1 f7       	brne	.-8      	; 0x182 <main+0x102>
 18a:	00 c0       	rjmp	.+0      	; 0x18c <main+0x10c>
 18c:	00 00       	nop
		_delay_ms(DOT);
		PORTB = PORTB ^ (1<<LED_GREEN);
 18e:	95 b1       	in	r25, 0x05	; 5
 190:	98 27       	eor	r25, r24
 192:	95 b9       	out	0x05, r25	; 5
 194:	2f ef       	ldi	r18, 0xFF	; 255
 196:	33 ec       	ldi	r19, 0xC3	; 195
 198:	99 e0       	ldi	r25, 0x09	; 9
 19a:	21 50       	subi	r18, 0x01	; 1
 19c:	30 40       	sbci	r19, 0x00	; 0
 19e:	90 40       	sbci	r25, 0x00	; 0
 1a0:	e1 f7       	brne	.-8      	; 0x19a <main+0x11a>
 1a2:	00 c0       	rjmp	.+0      	; 0x1a4 <main+0x124>
 1a4:	00 00       	nop
		_delay_ms(MARK_PAUSE);
		PORTB = PORTB ^ (1<<LED_GREEN);
 1a6:	95 b1       	in	r25, 0x05	; 5
 1a8:	98 27       	eor	r25, r24
 1aa:	95 b9       	out	0x05, r25	; 5
 1ac:	2f ef       	ldi	r18, 0xFF	; 255
 1ae:	3b e4       	ldi	r19, 0x4B	; 75
 1b0:	9d e1       	ldi	r25, 0x1D	; 29
 1b2:	21 50       	subi	r18, 0x01	; 1
 1b4:	30 40       	sbci	r19, 0x00	; 0
 1b6:	90 40       	sbci	r25, 0x00	; 0
 1b8:	e1 f7       	brne	.-8      	; 0x1b2 <main+0x132>
 1ba:	00 c0       	rjmp	.+0      	; 0x1bc <main+0x13c>
 1bc:	00 00       	nop
		_delay_ms(DASH);
		PORTB = PORTB ^ (1<<LED_GREEN);
 1be:	95 b1       	in	r25, 0x05	; 5
 1c0:	98 27       	eor	r25, r24
 1c2:	95 b9       	out	0x05, r25	; 5
 1c4:	2f ef       	ldi	r18, 0xFF	; 255
 1c6:	33 ec       	ldi	r19, 0xC3	; 195
 1c8:	99 e0       	ldi	r25, 0x09	; 9
 1ca:	21 50       	subi	r18, 0x01	; 1
 1cc:	30 40       	sbci	r19, 0x00	; 0
 1ce:	90 40       	sbci	r25, 0x00	; 0
 1d0:	e1 f7       	brne	.-8      	; 0x1ca <main+0x14a>
 1d2:	00 c0       	rjmp	.+0      	; 0x1d4 <main+0x154>
 1d4:	00 00       	nop
		_delay_ms(MARK_PAUSE);
		PORTB = PORTB ^ (1<<LED_GREEN);
 1d6:	95 b1       	in	r25, 0x05	; 5
 1d8:	98 27       	eor	r25, r24
 1da:	95 b9       	out	0x05, r25	; 5
 1dc:	2f ef       	ldi	r18, 0xFF	; 255
 1de:	3b e4       	ldi	r19, 0x4B	; 75
 1e0:	9d e1       	ldi	r25, 0x1D	; 29
 1e2:	21 50       	subi	r18, 0x01	; 1
 1e4:	30 40       	sbci	r19, 0x00	; 0
 1e6:	90 40       	sbci	r25, 0x00	; 0
 1e8:	e1 f7       	brne	.-8      	; 0x1e2 <main+0x162>
 1ea:	00 c0       	rjmp	.+0      	; 0x1ec <main+0x16c>
 1ec:	00 00       	nop
		_delay_ms(DASH);
		PORTB = PORTB ^ (1<<LED_GREEN);
 1ee:	95 b1       	in	r25, 0x05	; 5
 1f0:	98 27       	eor	r25, r24
 1f2:	95 b9       	out	0x05, r25	; 5
 1f4:	2f ef       	ldi	r18, 0xFF	; 255
 1f6:	33 ec       	ldi	r19, 0xC3	; 195
 1f8:	99 e0       	ldi	r25, 0x09	; 9
 1fa:	21 50       	subi	r18, 0x01	; 1
 1fc:	30 40       	sbci	r19, 0x00	; 0
 1fe:	90 40       	sbci	r25, 0x00	; 0
 200:	e1 f7       	brne	.-8      	; 0x1fa <main+0x17a>
 202:	00 c0       	rjmp	.+0      	; 0x204 <main+0x184>
 204:	00 00       	nop
		_delay_ms(MARK_PAUSE);
		PORTB = PORTB ^ (1<<LED_GREEN);
 206:	95 b1       	in	r25, 0x05	; 5
 208:	98 27       	eor	r25, r24
 20a:	95 b9       	out	0x05, r25	; 5
 20c:	2f ef       	ldi	r18, 0xFF	; 255
 20e:	3b e4       	ldi	r19, 0x4B	; 75
 210:	9d e1       	ldi	r25, 0x1D	; 29
 212:	21 50       	subi	r18, 0x01	; 1
 214:	30 40       	sbci	r19, 0x00	; 0
 216:	90 40       	sbci	r25, 0x00	; 0
 218:	e1 f7       	brne	.-8      	; 0x212 <main+0x192>
 21a:	00 c0       	rjmp	.+0      	; 0x21c <main+0x19c>
 21c:	00 00       	nop
		_delay_ms(DASH);
		PORTB = PORTB ^ (1<<LED_GREEN);
 21e:	95 b1       	in	r25, 0x05	; 5
 220:	98 27       	eor	r25, r24
 222:	95 b9       	out	0x05, r25	; 5
 224:	2f ef       	ldi	r18, 0xFF	; 255
 226:	3b e5       	ldi	r19, 0x5B	; 91
 228:	94 e4       	ldi	r25, 0x44	; 68
 22a:	21 50       	subi	r18, 0x01	; 1
 22c:	30 40       	sbci	r19, 0x00	; 0
 22e:	90 40       	sbci	r25, 0x00	; 0
 230:	e1 f7       	brne	.-8      	; 0x22a <main+0x1aa>
 232:	00 c0       	rjmp	.+0      	; 0x234 <main+0x1b4>
 234:	00 00       	nop
 236:	27 cf       	rjmp	.-434    	; 0x86 <main+0x6>

00000238 <_exit>:
 238:	f8 94       	cli

0000023a <__stop_program>:
 23a:	ff cf       	rjmp	.-2      	; 0x23a <__stop_program>
