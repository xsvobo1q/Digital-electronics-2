
ParkingAssistant_HC-SR04.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         0000007c  00800100  00001ffc  00002090  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         00001ffc  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  0080017c  0080017c  0000210c  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  0000210c  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  00002168  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000190  00000000  00000000  000021a8  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002157  00000000  00000000  00002338  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000cec  00000000  00000000  0000448f  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   0000113a  00000000  00000000  0000517b  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  000062b8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000007f6  00000000  00000000  00006718  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011fd  00000000  00000000  00006f0e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000170  00000000  00000000  0000810b  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 ff 01 	jmp	0x3fe	; 0x3fe <__vector_1>
       8:	0c 94 b7 01 	jmp	0x36e	; 0x36e <__vector_2>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 47 02 	jmp	0x48e	; 0x48e <__vector_13>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 01 08 	jmp	0x1002	; 0x1002 <__vector_18>
      4c:	0c 94 2f 08 	jmp	0x105e	; 0x105e <__vector_19>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ec ef       	ldi	r30, 0xFC	; 252
     17e:	ff e1       	ldi	r31, 0x1F	; 31
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	ac 37       	cpi	r26, 0x7C	; 124
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	ac e7       	ldi	r26, 0x7C	; 124
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	ac 3c       	cpi	r26, 0xCC	; 204
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 25 06 	call	0xc4a	; 0xc4a <main>
     1a0:	0c 94 fc 0f 	jmp	0x1ff8	; 0x1ff8 <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <GPIO_config_output>:
     1a8:	fc 01       	movw	r30, r24
     1aa:	40 81       	ld	r20, Z
     1ac:	21 e0       	ldi	r18, 0x01	; 1
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <GPIO_config_output+0xe>
     1b2:	22 0f       	add	r18, r18
     1b4:	33 1f       	adc	r19, r19
     1b6:	6a 95       	dec	r22
     1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <GPIO_config_output+0xa>
     1ba:	24 2b       	or	r18, r20
     1bc:	20 83       	st	Z, r18
     1be:	08 95       	ret

000001c0 <GPIO_config_input_nopull>:
     1c0:	fc 01       	movw	r30, r24
     1c2:	80 81       	ld	r24, Z
     1c4:	21 e0       	ldi	r18, 0x01	; 1
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	02 c0       	rjmp	.+4      	; 0x1ce <GPIO_config_input_nopull+0xe>
     1ca:	22 0f       	add	r18, r18
     1cc:	33 1f       	adc	r19, r19
     1ce:	6a 95       	dec	r22
     1d0:	e2 f7       	brpl	.-8      	; 0x1ca <GPIO_config_input_nopull+0xa>
     1d2:	20 95       	com	r18
     1d4:	82 23       	and	r24, r18
     1d6:	80 83       	st	Z, r24
     1d8:	80 81       	ld	r24, Z
     1da:	81 81       	ldd	r24, Z+1	; 0x01
     1dc:	28 23       	and	r18, r24
     1de:	21 83       	std	Z+1, r18	; 0x01
     1e0:	08 95       	ret

000001e2 <GPIO_write_low>:
     1e2:	fc 01       	movw	r30, r24
     1e4:	90 81       	ld	r25, Z
     1e6:	21 e0       	ldi	r18, 0x01	; 1
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <GPIO_write_low+0xe>
     1ec:	22 0f       	add	r18, r18
     1ee:	33 1f       	adc	r19, r19
     1f0:	6a 95       	dec	r22
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <GPIO_write_low+0xa>
     1f4:	20 95       	com	r18
     1f6:	29 23       	and	r18, r25
     1f8:	20 83       	st	Z, r18
     1fa:	08 95       	ret

000001fc <GPIO_write_high>:
     1fc:	fc 01       	movw	r30, r24
     1fe:	40 81       	ld	r20, Z
     200:	21 e0       	ldi	r18, 0x01	; 1
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	02 c0       	rjmp	.+4      	; 0x20a <GPIO_write_high+0xe>
     206:	22 0f       	add	r18, r18
     208:	33 1f       	adc	r19, r19
     20a:	6a 95       	dec	r22
     20c:	e2 f7       	brpl	.-8      	; 0x206 <GPIO_write_high+0xa>
     20e:	24 2b       	or	r18, r20
     210:	20 83       	st	Z, r18
     212:	08 95       	ret

00000214 <GPIO_toggle>:
     214:	fc 01       	movw	r30, r24
     216:	40 81       	ld	r20, Z
     218:	21 e0       	ldi	r18, 0x01	; 1
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	02 c0       	rjmp	.+4      	; 0x222 <GPIO_toggle+0xe>
     21e:	22 0f       	add	r18, r18
     220:	33 1f       	adc	r19, r19
     222:	6a 95       	dec	r22
     224:	e2 f7       	brpl	.-8      	; 0x21e <GPIO_toggle+0xa>
     226:	24 27       	eor	r18, r20
     228:	20 83       	st	Z, r18
     22a:	08 95       	ret

0000022c <GPIO_read>:
     22c:	fc 01       	movw	r30, r24
     22e:	80 81       	ld	r24, Z
     230:	90 e0       	ldi	r25, 0x00	; 0
     232:	02 c0       	rjmp	.+4      	; 0x238 <GPIO_read+0xc>
     234:	95 95       	asr	r25
     236:	87 95       	ror	r24
     238:	6a 95       	dec	r22
     23a:	e2 f7       	brpl	.-8      	; 0x234 <GPIO_read+0x8>
     23c:	81 70       	andi	r24, 0x01	; 1
     23e:	08 95       	ret

00000240 <toggle_e>:
     240:	29 9a       	sbi	0x05, 1	; 5
     242:	00 00       	nop
     244:	29 98       	cbi	0x05, 1	; 5
     246:	08 95       	ret

00000248 <lcd_write>:
     248:	cf 93       	push	r28
     24a:	c8 2f       	mov	r28, r24
     24c:	66 23       	and	r22, r22
     24e:	11 f0       	breq	.+4      	; 0x254 <lcd_write+0xc>
     250:	28 9a       	sbi	0x05, 0	; 5
     252:	01 c0       	rjmp	.+2      	; 0x256 <lcd_write+0xe>
     254:	28 98       	cbi	0x05, 0	; 5
     256:	54 9a       	sbi	0x0a, 4	; 10
     258:	55 9a       	sbi	0x0a, 5	; 10
     25a:	56 9a       	sbi	0x0a, 6	; 10
     25c:	57 9a       	sbi	0x0a, 7	; 10
     25e:	5f 98       	cbi	0x0b, 7	; 11
     260:	5e 98       	cbi	0x0b, 6	; 11
     262:	5d 98       	cbi	0x0b, 5	; 11
     264:	5c 98       	cbi	0x0b, 4	; 11
     266:	cc 23       	and	r28, r28
     268:	0c f4       	brge	.+2      	; 0x26c <lcd_write+0x24>
     26a:	5f 9a       	sbi	0x0b, 7	; 11
     26c:	c6 fd       	sbrc	r28, 6
     26e:	5e 9a       	sbi	0x0b, 6	; 11
     270:	c5 fd       	sbrc	r28, 5
     272:	5d 9a       	sbi	0x0b, 5	; 11
     274:	c4 fd       	sbrc	r28, 4
     276:	5c 9a       	sbi	0x0b, 4	; 11
     278:	0e 94 20 01 	call	0x240	; 0x240 <toggle_e>
     27c:	5f 98       	cbi	0x0b, 7	; 11
     27e:	5e 98       	cbi	0x0b, 6	; 11
     280:	5d 98       	cbi	0x0b, 5	; 11
     282:	5c 98       	cbi	0x0b, 4	; 11
     284:	c3 fd       	sbrc	r28, 3
     286:	5f 9a       	sbi	0x0b, 7	; 11
     288:	c2 fd       	sbrc	r28, 2
     28a:	5e 9a       	sbi	0x0b, 6	; 11
     28c:	c1 fd       	sbrc	r28, 1
     28e:	5d 9a       	sbi	0x0b, 5	; 11
     290:	c0 fd       	sbrc	r28, 0
     292:	5c 9a       	sbi	0x0b, 4	; 11
     294:	0e 94 20 01 	call	0x240	; 0x240 <toggle_e>
     298:	5c 9a       	sbi	0x0b, 4	; 11
     29a:	5d 9a       	sbi	0x0b, 5	; 11
     29c:	5e 9a       	sbi	0x0b, 6	; 11
     29e:	5f 9a       	sbi	0x0b, 7	; 11
     2a0:	8a ef       	ldi	r24, 0xFA	; 250
     2a2:	8a 95       	dec	r24
     2a4:	f1 f7       	brne	.-4      	; 0x2a2 <lcd_write+0x5a>
     2a6:	cf 91       	pop	r28
     2a8:	08 95       	ret

000002aa <lcd_command>:
     2aa:	60 e0       	ldi	r22, 0x00	; 0
     2ac:	0e 94 24 01 	call	0x248	; 0x248 <lcd_write>
     2b0:	08 95       	ret

000002b2 <lcd_gotoxy>:
     2b2:	61 11       	cpse	r22, r1
     2b4:	04 c0       	rjmp	.+8      	; 0x2be <lcd_gotoxy+0xc>
     2b6:	80 58       	subi	r24, 0x80	; 128
     2b8:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_command>
     2bc:	08 95       	ret
     2be:	80 54       	subi	r24, 0x40	; 64
     2c0:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_command>
     2c4:	08 95       	ret

000002c6 <lcd_clrscr>:
     2c6:	81 e0       	ldi	r24, 0x01	; 1
     2c8:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_command>
     2cc:	08 95       	ret

000002ce <lcd_putc>:
     2ce:	61 e0       	ldi	r22, 0x01	; 1
     2d0:	0e 94 24 01 	call	0x248	; 0x248 <lcd_write>
     2d4:	08 95       	ret

000002d6 <lcd_puts>:
     2d6:	cf 93       	push	r28
     2d8:	df 93       	push	r29
     2da:	ec 01       	movw	r28, r24
     2dc:	21 96       	adiw	r28, 0x01	; 1
     2de:	fc 01       	movw	r30, r24
     2e0:	80 81       	ld	r24, Z
     2e2:	88 23       	and	r24, r24
     2e4:	29 f0       	breq	.+10     	; 0x2f0 <lcd_puts+0x1a>
     2e6:	0e 94 67 01 	call	0x2ce	; 0x2ce <lcd_putc>
     2ea:	89 91       	ld	r24, Y+
     2ec:	81 11       	cpse	r24, r1
     2ee:	fb cf       	rjmp	.-10     	; 0x2e6 <lcd_puts+0x10>
     2f0:	df 91       	pop	r29
     2f2:	cf 91       	pop	r28
     2f4:	08 95       	ret

000002f6 <lcd_init>:
     2f6:	cf 93       	push	r28
     2f8:	c8 2f       	mov	r28, r24
     2fa:	20 9a       	sbi	0x04, 0	; 4
     2fc:	55 9a       	sbi	0x0a, 5	; 10
     2fe:	21 9a       	sbi	0x04, 1	; 4
     300:	54 9a       	sbi	0x0a, 4	; 10
     302:	55 9a       	sbi	0x0a, 5	; 10
     304:	56 9a       	sbi	0x0a, 6	; 10
     306:	57 9a       	sbi	0x0a, 7	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     308:	8f e9       	ldi	r24, 0x9F	; 159
     30a:	9f e0       	ldi	r25, 0x0F	; 15
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <lcd_init+0x16>
     310:	00 c0       	rjmp	.+0      	; 0x312 <lcd_init+0x1c>
     312:	00 00       	nop
     314:	5d 9a       	sbi	0x0b, 5	; 11
     316:	5c 9a       	sbi	0x0b, 4	; 11
     318:	0e 94 20 01 	call	0x240	; 0x240 <toggle_e>
     31c:	81 ee       	ldi	r24, 0xE1	; 225
     31e:	94 e0       	ldi	r25, 0x04	; 4
     320:	01 97       	sbiw	r24, 0x01	; 1
     322:	f1 f7       	brne	.-4      	; 0x320 <lcd_init+0x2a>
     324:	00 c0       	rjmp	.+0      	; 0x326 <lcd_init+0x30>
     326:	00 00       	nop
     328:	0e 94 20 01 	call	0x240	; 0x240 <toggle_e>
     32c:	95 e1       	ldi	r25, 0x15	; 21
     32e:	9a 95       	dec	r25
     330:	f1 f7       	brne	.-4      	; 0x32e <lcd_init+0x38>
     332:	00 00       	nop
     334:	0e 94 20 01 	call	0x240	; 0x240 <toggle_e>
     338:	85 e1       	ldi	r24, 0x15	; 21
     33a:	8a 95       	dec	r24
     33c:	f1 f7       	brne	.-4      	; 0x33a <lcd_init+0x44>
     33e:	00 00       	nop
     340:	5c 98       	cbi	0x0b, 4	; 11
     342:	0e 94 20 01 	call	0x240	; 0x240 <toggle_e>
     346:	95 e1       	ldi	r25, 0x15	; 21
     348:	9a 95       	dec	r25
     34a:	f1 f7       	brne	.-4      	; 0x348 <lcd_init+0x52>
     34c:	00 00       	nop
     34e:	88 e2       	ldi	r24, 0x28	; 40
     350:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_command>
     354:	88 e0       	ldi	r24, 0x08	; 8
     356:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_command>
     35a:	0e 94 63 01 	call	0x2c6	; 0x2c6 <lcd_clrscr>
     35e:	86 e0       	ldi	r24, 0x06	; 6
     360:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_command>
     364:	8c 2f       	mov	r24, r28
     366:	0e 94 55 01 	call	0x2aa	; 0x2aa <lcd_command>
     36a:	cf 91       	pop	r28
     36c:	08 95       	ret

0000036e <__vector_2>:
		}
		
    }
}

ISR(INT1_vect){
     36e:	1f 92       	push	r1
     370:	0f 92       	push	r0
     372:	0f b6       	in	r0, 0x3f	; 63
     374:	0f 92       	push	r0
     376:	11 24       	eor	r1, r1
     378:	2f 93       	push	r18
     37a:	3f 93       	push	r19
     37c:	4f 93       	push	r20
     37e:	5f 93       	push	r21
     380:	6f 93       	push	r22
     382:	7f 93       	push	r23
     384:	8f 93       	push	r24
     386:	9f 93       	push	r25
     388:	af 93       	push	r26
     38a:	bf 93       	push	r27
     38c:	ef 93       	push	r30
     38e:	ff 93       	push	r31
	
	while(GPIO_read(&PIND, sensEchoFront)){
     390:	16 c0       	rjmp	.+44     	; 0x3be <__vector_2+0x50>
		distanceFront++;
     392:	60 91 80 01 	lds	r22, 0x0180	; 0x800180 <distanceFront>
     396:	70 91 81 01 	lds	r23, 0x0181	; 0x800181 <distanceFront+0x1>
     39a:	80 91 82 01 	lds	r24, 0x0182	; 0x800182 <distanceFront+0x2>
     39e:	90 91 83 01 	lds	r25, 0x0183	; 0x800183 <distanceFront+0x3>
     3a2:	20 e0       	ldi	r18, 0x00	; 0
     3a4:	30 e0       	ldi	r19, 0x00	; 0
     3a6:	40 e8       	ldi	r20, 0x80	; 128
     3a8:	5f e3       	ldi	r21, 0x3F	; 63
     3aa:	0e 94 97 08 	call	0x112e	; 0x112e <__addsf3>
     3ae:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <distanceFront>
     3b2:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <distanceFront+0x1>
     3b6:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <distanceFront+0x2>
     3ba:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <distanceFront+0x3>
    }
}

ISR(INT1_vect){
	
	while(GPIO_read(&PIND, sensEchoFront)){
     3be:	63 e0       	ldi	r22, 0x03	; 3
     3c0:	89 e2       	ldi	r24, 0x29	; 41
     3c2:	90 e0       	ldi	r25, 0x00	; 0
     3c4:	0e 94 16 01 	call	0x22c	; 0x22c <GPIO_read>
     3c8:	81 11       	cpse	r24, r1
     3ca:	e3 cf       	rjmp	.-58     	; 0x392 <__vector_2+0x24>
		distanceFront++;
	}
	averaging++;
     3cc:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <averaging>
     3d0:	8f 5f       	subi	r24, 0xFF	; 255
     3d2:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <averaging>
	trigEnable = 1;
     3d6:	81 e0       	ldi	r24, 0x01	; 1
     3d8:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <trigEnable>

}
     3dc:	ff 91       	pop	r31
     3de:	ef 91       	pop	r30
     3e0:	bf 91       	pop	r27
     3e2:	af 91       	pop	r26
     3e4:	9f 91       	pop	r25
     3e6:	8f 91       	pop	r24
     3e8:	7f 91       	pop	r23
     3ea:	6f 91       	pop	r22
     3ec:	5f 91       	pop	r21
     3ee:	4f 91       	pop	r20
     3f0:	3f 91       	pop	r19
     3f2:	2f 91       	pop	r18
     3f4:	0f 90       	pop	r0
     3f6:	0f be       	out	0x3f, r0	; 63
     3f8:	0f 90       	pop	r0
     3fa:	1f 90       	pop	r1
     3fc:	18 95       	reti

000003fe <__vector_1>:

ISR(INT0_vect){
     3fe:	1f 92       	push	r1
     400:	0f 92       	push	r0
     402:	0f b6       	in	r0, 0x3f	; 63
     404:	0f 92       	push	r0
     406:	11 24       	eor	r1, r1
     408:	2f 93       	push	r18
     40a:	3f 93       	push	r19
     40c:	4f 93       	push	r20
     40e:	5f 93       	push	r21
     410:	6f 93       	push	r22
     412:	7f 93       	push	r23
     414:	8f 93       	push	r24
     416:	9f 93       	push	r25
     418:	af 93       	push	r26
     41a:	bf 93       	push	r27
     41c:	ef 93       	push	r30
     41e:	ff 93       	push	r31
	
	while(GPIO_read(&PIND, sensEchoRear)){
     420:	16 c0       	rjmp	.+44     	; 0x44e <__LOCK_REGION_LENGTH__+0x4e>
		distanceRear++;
     422:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end>
     426:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x1>
     42a:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end+0x2>
     42e:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x3>
     432:	20 e0       	ldi	r18, 0x00	; 0
     434:	30 e0       	ldi	r19, 0x00	; 0
     436:	40 e8       	ldi	r20, 0x80	; 128
     438:	5f e3       	ldi	r21, 0x3F	; 63
     43a:	0e 94 97 08 	call	0x112e	; 0x112e <__addsf3>
     43e:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <__data_end>
     442:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <__data_end+0x1>
     446:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <__data_end+0x2>
     44a:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <__data_end+0x3>

}

ISR(INT0_vect){
	
	while(GPIO_read(&PIND, sensEchoRear)){
     44e:	62 e0       	ldi	r22, 0x02	; 2
     450:	89 e2       	ldi	r24, 0x29	; 41
     452:	90 e0       	ldi	r25, 0x00	; 0
     454:	0e 94 16 01 	call	0x22c	; 0x22c <GPIO_read>
     458:	81 11       	cpse	r24, r1
     45a:	e3 cf       	rjmp	.-58     	; 0x422 <__LOCK_REGION_LENGTH__+0x22>
		distanceRear++;
	}
	averaging++;
     45c:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <averaging>
     460:	8f 5f       	subi	r24, 0xFF	; 255
     462:	80 93 84 01 	sts	0x0184, r24	; 0x800184 <averaging>
	trigEnable = 1;
     466:	81 e0       	ldi	r24, 0x01	; 1
     468:	80 93 01 01 	sts	0x0101, r24	; 0x800101 <trigEnable>

}
     46c:	ff 91       	pop	r31
     46e:	ef 91       	pop	r30
     470:	bf 91       	pop	r27
     472:	af 91       	pop	r26
     474:	9f 91       	pop	r25
     476:	8f 91       	pop	r24
     478:	7f 91       	pop	r23
     47a:	6f 91       	pop	r22
     47c:	5f 91       	pop	r21
     47e:	4f 91       	pop	r20
     480:	3f 91       	pop	r19
     482:	2f 91       	pop	r18
     484:	0f 90       	pop	r0
     486:	0f be       	out	0x3f, r0	; 63
     488:	0f 90       	pop	r0
     48a:	1f 90       	pop	r1
     48c:	18 95       	reti

0000048e <__vector_13>:

ISR(TIMER1_OVF_vect){
     48e:	1f 92       	push	r1
     490:	0f 92       	push	r0
     492:	0f b6       	in	r0, 0x3f	; 63
     494:	0f 92       	push	r0
     496:	11 24       	eor	r1, r1
     498:	2f 93       	push	r18
     49a:	3f 93       	push	r19
     49c:	4f 93       	push	r20
     49e:	5f 93       	push	r21
     4a0:	6f 93       	push	r22
     4a2:	7f 93       	push	r23
     4a4:	8f 93       	push	r24
     4a6:	9f 93       	push	r25
     4a8:	af 93       	push	r26
     4aa:	bf 93       	push	r27
     4ac:	ef 93       	push	r30
     4ae:	ff 93       	push	r31
	GPIO_toggle(&PORTB, buzzer);
     4b0:	64 e0       	ldi	r22, 0x04	; 4
     4b2:	85 e2       	ldi	r24, 0x25	; 37
     4b4:	90 e0       	ldi	r25, 0x00	; 0
     4b6:	0e 94 0a 01 	call	0x214	; 0x214 <GPIO_toggle>
	TCNT1 = beepTiming;
     4ba:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <beepTiming>
     4be:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <beepTiming+0x1>
     4c2:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     4c6:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
}
     4ca:	ff 91       	pop	r31
     4cc:	ef 91       	pop	r30
     4ce:	bf 91       	pop	r27
     4d0:	af 91       	pop	r26
     4d2:	9f 91       	pop	r25
     4d4:	8f 91       	pop	r24
     4d6:	7f 91       	pop	r23
     4d8:	6f 91       	pop	r22
     4da:	5f 91       	pop	r21
     4dc:	4f 91       	pop	r20
     4de:	3f 91       	pop	r19
     4e0:	2f 91       	pop	r18
     4e2:	0f 90       	pop	r0
     4e4:	0f be       	out	0x3f, r0	; 63
     4e6:	0f 90       	pop	r0
     4e8:	1f 90       	pop	r1
     4ea:	18 95       	reti

000004ec <displayValues>:

int displayValues(float distanceRear, float distanceFront){
     4ec:	4f 92       	push	r4
     4ee:	5f 92       	push	r5
     4f0:	6f 92       	push	r6
     4f2:	7f 92       	push	r7
     4f4:	8f 92       	push	r8
     4f6:	9f 92       	push	r9
     4f8:	af 92       	push	r10
     4fa:	bf 92       	push	r11
     4fc:	cf 92       	push	r12
     4fe:	df 92       	push	r13
     500:	ef 92       	push	r14
     502:	ff 92       	push	r15
     504:	0f 93       	push	r16
     506:	1f 93       	push	r17
     508:	cf 93       	push	r28
     50a:	df 93       	push	r29
     50c:	cd b7       	in	r28, 0x3d	; 61
     50e:	de b7       	in	r29, 0x3e	; 62
     510:	c4 56       	subi	r28, 0x64	; 100
     512:	d1 09       	sbc	r29, r1
     514:	0f b6       	in	r0, 0x3f	; 63
     516:	f8 94       	cli
     518:	de bf       	out	0x3e, r29	; 62
     51a:	0f be       	out	0x3f, r0	; 63
     51c:	cd bf       	out	0x3d, r28	; 61
     51e:	29 01       	movw	r4, r18
     520:	3a 01       	movw	r6, r20
	
	char uartString[50];
	char dispString[50];
	float dist = 0;	

	distanceRear = distanceRear*0.15925;
     522:	2f e6       	ldi	r18, 0x6F	; 111
     524:	32 e1       	ldi	r19, 0x12	; 18
     526:	43 e2       	ldi	r20, 0x23	; 35
     528:	5e e3       	ldi	r21, 0x3E	; 62
     52a:	0e 94 31 0a 	call	0x1462	; 0x1462 <__mulsf3>
     52e:	c6 2e       	mov	r12, r22
     530:	d7 2e       	mov	r13, r23
     532:	98 2e       	mov	r9, r24
     534:	89 2e       	mov	r8, r25
	distanceFront = distanceFront*0.053476;
     536:	26 ea       	ldi	r18, 0xA6	; 166
     538:	39 e0       	ldi	r19, 0x09	; 9
     53a:	4b e5       	ldi	r20, 0x5B	; 91
     53c:	5d e3       	ldi	r21, 0x3D	; 61
     53e:	c3 01       	movw	r24, r6
     540:	b2 01       	movw	r22, r4
     542:	0e 94 31 0a 	call	0x1462	; 0x1462 <__mulsf3>
     546:	e6 2e       	mov	r14, r22
     548:	f7 2e       	mov	r15, r23
     54a:	08 2f       	mov	r16, r24
     54c:	19 2f       	mov	r17, r25
	
	if (distanceRear < distanceFront)
     54e:	76 2f       	mov	r23, r22
     550:	27 2f       	mov	r18, r23
     552:	3f 2d       	mov	r19, r15
     554:	40 2f       	mov	r20, r16
     556:	51 2f       	mov	r21, r17
     558:	6c 2d       	mov	r22, r12
     55a:	7d 2d       	mov	r23, r13
     55c:	89 2d       	mov	r24, r9
     55e:	98 2d       	mov	r25, r8
     560:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     564:	88 23       	and	r24, r24
     566:	2c f0       	brlt	.+10     	; 0x572 <displayValues+0x86>
	{
		dist = distanceRear;
	} 
	else
	{
		dist = distanceFront;
     568:	7e 2c       	mov	r7, r14
     56a:	6f 2c       	mov	r6, r15
     56c:	50 2e       	mov	r5, r16
     56e:	41 2e       	mov	r4, r17
     570:	04 c0       	rjmp	.+8      	; 0x57a <displayValues+0x8e>
	distanceRear = distanceRear*0.15925;
	distanceFront = distanceFront*0.053476;
	
	if (distanceRear < distanceFront)
	{
		dist = distanceRear;
     572:	7c 2c       	mov	r7, r12
     574:	6d 2c       	mov	r6, r13
     576:	59 2c       	mov	r5, r9
     578:	48 2c       	mov	r4, r8
	else
	{
		dist = distanceFront;
	}
	
	if ((distanceFront < 7) | (distanceRear < 7))
     57a:	20 e0       	ldi	r18, 0x00	; 0
     57c:	30 e0       	ldi	r19, 0x00	; 0
     57e:	40 ee       	ldi	r20, 0xE0	; 224
     580:	50 e4       	ldi	r21, 0x40	; 64
     582:	6e 2d       	mov	r22, r14
     584:	7f 2d       	mov	r23, r15
     586:	80 2f       	mov	r24, r16
     588:	91 2f       	mov	r25, r17
     58a:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     58e:	88 23       	and	r24, r24
     590:	64 f0       	brlt	.+24     	; 0x5aa <displayValues+0xbe>
     592:	20 e0       	ldi	r18, 0x00	; 0
     594:	30 e0       	ldi	r19, 0x00	; 0
     596:	40 ee       	ldi	r20, 0xE0	; 224
     598:	50 e4       	ldi	r21, 0x40	; 64
     59a:	6c 2d       	mov	r22, r12
     59c:	7d 2d       	mov	r23, r13
     59e:	89 2d       	mov	r24, r9
     5a0:	98 2d       	mov	r25, r8
     5a2:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     5a6:	88 23       	and	r24, r24
     5a8:	5c f4       	brge	.+22     	; 0x5c0 <displayValues+0xd4>
	{
		GPIO_write_high(&PORTB, buzzer);
     5aa:	64 e0       	ldi	r22, 0x04	; 4
     5ac:	85 e2       	ldi	r24, 0x25	; 37
     5ae:	90 e0       	ldi	r25, 0x00	; 0
     5b0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
		TIM1_overflow_interrupt_disable();
     5b4:	ef e6       	ldi	r30, 0x6F	; 111
     5b6:	f0 e0       	ldi	r31, 0x00	; 0
     5b8:	80 81       	ld	r24, Z
     5ba:	8e 7f       	andi	r24, 0xFE	; 254
     5bc:	80 83       	st	Z, r24
     5be:	32 c0       	rjmp	.+100    	; 0x624 <displayValues+0x138>
	} 
	else if((distanceFront > 40) & (distanceRear > 40))
     5c0:	bb 24       	eor	r11, r11
     5c2:	b3 94       	inc	r11
     5c4:	20 e0       	ldi	r18, 0x00	; 0
     5c6:	30 e0       	ldi	r19, 0x00	; 0
     5c8:	40 e2       	ldi	r20, 0x20	; 32
     5ca:	52 e4       	ldi	r21, 0x42	; 66
     5cc:	6e 2d       	mov	r22, r14
     5ce:	7f 2d       	mov	r23, r15
     5d0:	80 2f       	mov	r24, r16
     5d2:	91 2f       	mov	r25, r17
     5d4:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     5d8:	18 16       	cp	r1, r24
     5da:	0c f0       	brlt	.+2      	; 0x5de <displayValues+0xf2>
     5dc:	b1 2c       	mov	r11, r1
     5de:	bb 20       	and	r11, r11
     5e0:	e1 f0       	breq	.+56     	; 0x61a <displayValues+0x12e>
     5e2:	bb 24       	eor	r11, r11
     5e4:	b3 94       	inc	r11
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	40 e2       	ldi	r20, 0x20	; 32
     5ec:	52 e4       	ldi	r21, 0x42	; 66
     5ee:	6c 2d       	mov	r22, r12
     5f0:	7d 2d       	mov	r23, r13
     5f2:	89 2d       	mov	r24, r9
     5f4:	98 2d       	mov	r25, r8
     5f6:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     5fa:	18 16       	cp	r1, r24
     5fc:	0c f0       	brlt	.+2      	; 0x600 <displayValues+0x114>
     5fe:	b1 2c       	mov	r11, r1
     600:	bb 20       	and	r11, r11
     602:	59 f0       	breq	.+22     	; 0x61a <displayValues+0x12e>
	{
		GPIO_write_low(&PORTB, buzzer);
     604:	64 e0       	ldi	r22, 0x04	; 4
     606:	85 e2       	ldi	r24, 0x25	; 37
     608:	90 e0       	ldi	r25, 0x00	; 0
     60a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
		TIM1_overflow_interrupt_disable();
     60e:	ef e6       	ldi	r30, 0x6F	; 111
     610:	f0 e0       	ldi	r31, 0x00	; 0
     612:	80 81       	ld	r24, Z
     614:	8e 7f       	andi	r24, 0xFE	; 254
     616:	80 83       	st	Z, r24
     618:	05 c0       	rjmp	.+10     	; 0x624 <displayValues+0x138>
	}else{
		TIM1_overflow_interrupt_enable();
     61a:	ef e6       	ldi	r30, 0x6F	; 111
     61c:	f0 e0       	ldi	r31, 0x00	; 0
     61e:	80 81       	ld	r24, Z
     620:	81 60       	ori	r24, 0x01	; 1
     622:	80 83       	st	Z, r24
	}

	sprintf(uartString,"Front: %0.2lf  ||  Rear: %0.2lf \r\n",distanceFront, distanceRear);
     624:	8f 92       	push	r8
     626:	9f 92       	push	r9
     628:	df 92       	push	r13
     62a:	cf 92       	push	r12
     62c:	1f 93       	push	r17
     62e:	0f 93       	push	r16
     630:	ff 92       	push	r15
     632:	ef 92       	push	r14
     634:	84 e1       	ldi	r24, 0x14	; 20
     636:	91 e0       	ldi	r25, 0x01	; 1
     638:	9f 93       	push	r25
     63a:	8f 93       	push	r24
     63c:	ce 01       	movw	r24, r28
     63e:	01 96       	adiw	r24, 0x01	; 1
     640:	5c 01       	movw	r10, r24
     642:	9f 93       	push	r25
     644:	8f 93       	push	r24
     646:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <sprintf>
	uart_puts(uartString);
     64a:	c5 01       	movw	r24, r10
     64c:	0e 94 87 08 	call	0x110e	; 0x110e <uart_puts>
	
	sprintf(dispString,"Front: %0.2f cm",distanceFront);
     650:	1f 93       	push	r17
     652:	0f 93       	push	r16
     654:	ff 92       	push	r15
     656:	ef 92       	push	r14
     658:	87 e3       	ldi	r24, 0x37	; 55
     65a:	91 e0       	ldi	r25, 0x01	; 1
     65c:	9f 93       	push	r25
     65e:	8f 93       	push	r24
     660:	5e 01       	movw	r10, r28
     662:	93 e3       	ldi	r25, 0x33	; 51
     664:	a9 0e       	add	r10, r25
     666:	b1 1c       	adc	r11, r1
     668:	bf 92       	push	r11
     66a:	af 92       	push	r10
     66c:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <sprintf>
	lcd_gotoxy(1, 0);
     670:	60 e0       	ldi	r22, 0x00	; 0
     672:	81 e0       	ldi	r24, 0x01	; 1
     674:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_gotoxy>
	lcd_puts("                ");
     678:	87 e4       	ldi	r24, 0x47	; 71
     67a:	91 e0       	ldi	r25, 0x01	; 1
     67c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_puts>
	lcd_gotoxy(1, 0);
     680:	60 e0       	ldi	r22, 0x00	; 0
     682:	81 e0       	ldi	r24, 0x01	; 1
     684:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_gotoxy>
	lcd_puts(dispString);
     688:	c5 01       	movw	r24, r10
     68a:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_puts>
	
	sprintf(dispString,"Rear: %0.2f cm",distanceRear);
     68e:	8f 92       	push	r8
     690:	9f 92       	push	r9
     692:	df 92       	push	r13
     694:	cf 92       	push	r12
     696:	88 e5       	ldi	r24, 0x58	; 88
     698:	91 e0       	ldi	r25, 0x01	; 1
     69a:	9f 93       	push	r25
     69c:	8f 93       	push	r24
     69e:	bf 92       	push	r11
     6a0:	af 92       	push	r10
     6a2:	0e 94 7c 0f 	call	0x1ef8	; 0x1ef8 <sprintf>
	lcd_gotoxy(1, 1);
     6a6:	61 e0       	ldi	r22, 0x01	; 1
     6a8:	81 e0       	ldi	r24, 0x01	; 1
     6aa:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_gotoxy>
	lcd_puts("                ");
     6ae:	87 e4       	ldi	r24, 0x47	; 71
     6b0:	91 e0       	ldi	r25, 0x01	; 1
     6b2:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_puts>
	lcd_gotoxy(1, 1);
     6b6:	61 e0       	ldi	r22, 0x01	; 1
     6b8:	81 e0       	ldi	r24, 0x01	; 1
     6ba:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_gotoxy>
	lcd_puts(dispString);
     6be:	c5 01       	movw	r24, r10
     6c0:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_puts>
	
	if (distanceFront < 7)
     6c4:	0f b6       	in	r0, 0x3f	; 63
     6c6:	f8 94       	cli
     6c8:	de bf       	out	0x3e, r29	; 62
     6ca:	0f be       	out	0x3f, r0	; 63
     6cc:	cd bf       	out	0x3d, r28	; 61
     6ce:	20 e0       	ldi	r18, 0x00	; 0
     6d0:	30 e0       	ldi	r19, 0x00	; 0
     6d2:	40 ee       	ldi	r20, 0xE0	; 224
     6d4:	50 e4       	ldi	r21, 0x40	; 64
     6d6:	6e 2d       	mov	r22, r14
     6d8:	7f 2d       	mov	r23, r15
     6da:	80 2f       	mov	r24, r16
     6dc:	91 2f       	mov	r25, r17
     6de:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     6e2:	88 23       	and	r24, r24
     6e4:	24 f4       	brge	.+8      	; 0x6ee <displayValues+0x202>
	{
		DIODE_update_shift_regs_FRONT(7);
     6e6:	87 e0       	ldi	r24, 0x07	; 7
     6e8:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
     6ec:	e7 c0       	rjmp	.+462    	; 0x8bc <displayValues+0x3d0>
	} else if((distanceFront > 7) & (distanceFront < 10))
     6ee:	bb 24       	eor	r11, r11
     6f0:	b3 94       	inc	r11
     6f2:	20 e0       	ldi	r18, 0x00	; 0
     6f4:	30 e0       	ldi	r19, 0x00	; 0
     6f6:	40 ee       	ldi	r20, 0xE0	; 224
     6f8:	50 e4       	ldi	r21, 0x40	; 64
     6fa:	6e 2d       	mov	r22, r14
     6fc:	7f 2d       	mov	r23, r15
     6fe:	80 2f       	mov	r24, r16
     700:	91 2f       	mov	r25, r17
     702:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     706:	18 16       	cp	r1, r24
     708:	0c f0       	brlt	.+2      	; 0x70c <displayValues+0x220>
     70a:	b1 2c       	mov	r11, r1
     70c:	bb 20       	and	r11, r11
     70e:	81 f0       	breq	.+32     	; 0x730 <displayValues+0x244>
     710:	20 e0       	ldi	r18, 0x00	; 0
     712:	30 e0       	ldi	r19, 0x00	; 0
     714:	40 e2       	ldi	r20, 0x20	; 32
     716:	51 e4       	ldi	r21, 0x41	; 65
     718:	6e 2d       	mov	r22, r14
     71a:	7f 2d       	mov	r23, r15
     71c:	80 2f       	mov	r24, r16
     71e:	91 2f       	mov	r25, r17
     720:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     724:	88 23       	and	r24, r24
     726:	24 f4       	brge	.+8      	; 0x730 <displayValues+0x244>
	{
		DIODE_update_shift_regs_FRONT(6);
     728:	86 e0       	ldi	r24, 0x06	; 6
     72a:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
     72e:	c6 c0       	rjmp	.+396    	; 0x8bc <displayValues+0x3d0>
	} else if((distanceFront > 10) & (distanceFront < 15))
     730:	bb 24       	eor	r11, r11
     732:	b3 94       	inc	r11
     734:	20 e0       	ldi	r18, 0x00	; 0
     736:	30 e0       	ldi	r19, 0x00	; 0
     738:	40 e2       	ldi	r20, 0x20	; 32
     73a:	51 e4       	ldi	r21, 0x41	; 65
     73c:	6e 2d       	mov	r22, r14
     73e:	7f 2d       	mov	r23, r15
     740:	80 2f       	mov	r24, r16
     742:	91 2f       	mov	r25, r17
     744:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     748:	18 16       	cp	r1, r24
     74a:	0c f0       	brlt	.+2      	; 0x74e <displayValues+0x262>
     74c:	b1 2c       	mov	r11, r1
     74e:	bb 20       	and	r11, r11
     750:	81 f0       	breq	.+32     	; 0x772 <displayValues+0x286>
     752:	20 e0       	ldi	r18, 0x00	; 0
     754:	30 e0       	ldi	r19, 0x00	; 0
     756:	40 e7       	ldi	r20, 0x70	; 112
     758:	51 e4       	ldi	r21, 0x41	; 65
     75a:	6e 2d       	mov	r22, r14
     75c:	7f 2d       	mov	r23, r15
     75e:	80 2f       	mov	r24, r16
     760:	91 2f       	mov	r25, r17
     762:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     766:	88 23       	and	r24, r24
     768:	24 f4       	brge	.+8      	; 0x772 <displayValues+0x286>
	{
		DIODE_update_shift_regs_FRONT(5);
     76a:	85 e0       	ldi	r24, 0x05	; 5
     76c:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
     770:	a5 c0       	rjmp	.+330    	; 0x8bc <displayValues+0x3d0>
	} else if((distanceFront > 15) & (distanceFront < 20))
     772:	bb 24       	eor	r11, r11
     774:	b3 94       	inc	r11
     776:	20 e0       	ldi	r18, 0x00	; 0
     778:	30 e0       	ldi	r19, 0x00	; 0
     77a:	40 e7       	ldi	r20, 0x70	; 112
     77c:	51 e4       	ldi	r21, 0x41	; 65
     77e:	6e 2d       	mov	r22, r14
     780:	7f 2d       	mov	r23, r15
     782:	80 2f       	mov	r24, r16
     784:	91 2f       	mov	r25, r17
     786:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     78a:	18 16       	cp	r1, r24
     78c:	0c f0       	brlt	.+2      	; 0x790 <displayValues+0x2a4>
     78e:	b1 2c       	mov	r11, r1
     790:	bb 20       	and	r11, r11
     792:	b1 f0       	breq	.+44     	; 0x7c0 <displayValues+0x2d4>
     794:	20 e0       	ldi	r18, 0x00	; 0
     796:	30 e0       	ldi	r19, 0x00	; 0
     798:	40 ea       	ldi	r20, 0xA0	; 160
     79a:	51 e4       	ldi	r21, 0x41	; 65
     79c:	6e 2d       	mov	r22, r14
     79e:	7f 2d       	mov	r23, r15
     7a0:	80 2f       	mov	r24, r16
     7a2:	91 2f       	mov	r25, r17
     7a4:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     7a8:	88 23       	and	r24, r24
     7aa:	54 f4       	brge	.+20     	; 0x7c0 <displayValues+0x2d4>
	{
		DIODE_update_shift_regs_FRONT(4);
     7ac:	84 e0       	ldi	r24, 0x04	; 4
     7ae:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
		beepTiming = 52000;
     7b2:	80 e2       	ldi	r24, 0x20	; 32
     7b4:	9b ec       	ldi	r25, 0xCB	; 203
     7b6:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     7ba:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     7be:	7e c0       	rjmp	.+252    	; 0x8bc <displayValues+0x3d0>
	} else if((distanceFront > 20) & (distanceFront < 25))
     7c0:	bb 24       	eor	r11, r11
     7c2:	b3 94       	inc	r11
     7c4:	20 e0       	ldi	r18, 0x00	; 0
     7c6:	30 e0       	ldi	r19, 0x00	; 0
     7c8:	40 ea       	ldi	r20, 0xA0	; 160
     7ca:	51 e4       	ldi	r21, 0x41	; 65
     7cc:	6e 2d       	mov	r22, r14
     7ce:	7f 2d       	mov	r23, r15
     7d0:	80 2f       	mov	r24, r16
     7d2:	91 2f       	mov	r25, r17
     7d4:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     7d8:	18 16       	cp	r1, r24
     7da:	0c f0       	brlt	.+2      	; 0x7de <displayValues+0x2f2>
     7dc:	b1 2c       	mov	r11, r1
     7de:	bb 20       	and	r11, r11
     7e0:	b1 f0       	breq	.+44     	; 0x80e <displayValues+0x322>
     7e2:	20 e0       	ldi	r18, 0x00	; 0
     7e4:	30 e0       	ldi	r19, 0x00	; 0
     7e6:	48 ec       	ldi	r20, 0xC8	; 200
     7e8:	51 e4       	ldi	r21, 0x41	; 65
     7ea:	6e 2d       	mov	r22, r14
     7ec:	7f 2d       	mov	r23, r15
     7ee:	80 2f       	mov	r24, r16
     7f0:	91 2f       	mov	r25, r17
     7f2:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     7f6:	88 23       	and	r24, r24
     7f8:	54 f4       	brge	.+20     	; 0x80e <displayValues+0x322>
	{
		DIODE_update_shift_regs_FRONT(3);
     7fa:	83 e0       	ldi	r24, 0x03	; 3
     7fc:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
		beepTiming = 46000;
     800:	80 eb       	ldi	r24, 0xB0	; 176
     802:	93 eb       	ldi	r25, 0xB3	; 179
     804:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     808:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     80c:	57 c0       	rjmp	.+174    	; 0x8bc <displayValues+0x3d0>
	} else if((distanceFront > 25) & (distanceFront < 30))
     80e:	bb 24       	eor	r11, r11
     810:	b3 94       	inc	r11
     812:	20 e0       	ldi	r18, 0x00	; 0
     814:	30 e0       	ldi	r19, 0x00	; 0
     816:	48 ec       	ldi	r20, 0xC8	; 200
     818:	51 e4       	ldi	r21, 0x41	; 65
     81a:	6e 2d       	mov	r22, r14
     81c:	7f 2d       	mov	r23, r15
     81e:	80 2f       	mov	r24, r16
     820:	91 2f       	mov	r25, r17
     822:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     826:	18 16       	cp	r1, r24
     828:	0c f0       	brlt	.+2      	; 0x82c <displayValues+0x340>
     82a:	b1 2c       	mov	r11, r1
     82c:	bb 20       	and	r11, r11
     82e:	b1 f0       	breq	.+44     	; 0x85c <displayValues+0x370>
     830:	20 e0       	ldi	r18, 0x00	; 0
     832:	30 e0       	ldi	r19, 0x00	; 0
     834:	40 ef       	ldi	r20, 0xF0	; 240
     836:	51 e4       	ldi	r21, 0x41	; 65
     838:	6e 2d       	mov	r22, r14
     83a:	7f 2d       	mov	r23, r15
     83c:	80 2f       	mov	r24, r16
     83e:	91 2f       	mov	r25, r17
     840:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     844:	88 23       	and	r24, r24
     846:	54 f4       	brge	.+20     	; 0x85c <displayValues+0x370>
	{
		DIODE_update_shift_regs_FRONT(2);
     848:	82 e0       	ldi	r24, 0x02	; 2
     84a:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
		beepTiming = 40000;
     84e:	80 e4       	ldi	r24, 0x40	; 64
     850:	9c e9       	ldi	r25, 0x9C	; 156
     852:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     856:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     85a:	30 c0       	rjmp	.+96     	; 0x8bc <displayValues+0x3d0>
	} else if((distanceFront > 30) & (distanceFront < 35))	
     85c:	bb 24       	eor	r11, r11
     85e:	b3 94       	inc	r11
     860:	20 e0       	ldi	r18, 0x00	; 0
     862:	30 e0       	ldi	r19, 0x00	; 0
     864:	40 ef       	ldi	r20, 0xF0	; 240
     866:	51 e4       	ldi	r21, 0x41	; 65
     868:	6e 2d       	mov	r22, r14
     86a:	7f 2d       	mov	r23, r15
     86c:	80 2f       	mov	r24, r16
     86e:	91 2f       	mov	r25, r17
     870:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     874:	18 16       	cp	r1, r24
     876:	0c f0       	brlt	.+2      	; 0x87a <displayValues+0x38e>
     878:	b1 2c       	mov	r11, r1
     87a:	bb 20       	and	r11, r11
     87c:	b1 f0       	breq	.+44     	; 0x8aa <displayValues+0x3be>
     87e:	20 e0       	ldi	r18, 0x00	; 0
     880:	30 e0       	ldi	r19, 0x00	; 0
     882:	4c e0       	ldi	r20, 0x0C	; 12
     884:	52 e4       	ldi	r21, 0x42	; 66
     886:	6e 2d       	mov	r22, r14
     888:	7f 2d       	mov	r23, r15
     88a:	80 2f       	mov	r24, r16
     88c:	91 2f       	mov	r25, r17
     88e:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     892:	88 23       	and	r24, r24
     894:	54 f4       	brge	.+20     	; 0x8aa <displayValues+0x3be>
	{
		DIODE_update_shift_regs_FRONT(1);
     896:	81 e0       	ldi	r24, 0x01	; 1
     898:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
		beepTiming = 34000;
     89c:	80 ed       	ldi	r24, 0xD0	; 208
     89e:	94 e8       	ldi	r25, 0x84	; 132
     8a0:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     8a4:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     8a8:	09 c0       	rjmp	.+18     	; 0x8bc <displayValues+0x3d0>
	} else
	{
		DIODE_update_shift_regs_FRONT(0);
     8aa:	80 e0       	ldi	r24, 0x00	; 0
     8ac:	0e 94 6f 07 	call	0xede	; 0xede <DIODE_update_shift_regs_FRONT>
		beepTiming = 28000;
     8b0:	80 e6       	ldi	r24, 0x60	; 96
     8b2:	9d e6       	ldi	r25, 0x6D	; 109
     8b4:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     8b8:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
	}
	
	
	if (distanceRear < 5)
     8bc:	20 e0       	ldi	r18, 0x00	; 0
     8be:	30 e0       	ldi	r19, 0x00	; 0
     8c0:	40 ea       	ldi	r20, 0xA0	; 160
     8c2:	50 e4       	ldi	r21, 0x40	; 64
     8c4:	6c 2d       	mov	r22, r12
     8c6:	7d 2d       	mov	r23, r13
     8c8:	89 2d       	mov	r24, r9
     8ca:	98 2d       	mov	r25, r8
     8cc:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     8d0:	88 23       	and	r24, r24
     8d2:	24 f4       	brge	.+8      	; 0x8dc <displayValues+0x3f0>
	{
		DIODE_update_shift_regs_REAR(7);
     8d4:	87 e0       	ldi	r24, 0x07	; 7
     8d6:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
     8da:	c3 c0       	rjmp	.+390    	; 0xa62 <__stack+0x163>
	} else if((distanceRear > 5) & (distanceRear < 10))
     8dc:	11 e0       	ldi	r17, 0x01	; 1
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	40 ea       	ldi	r20, 0xA0	; 160
     8e4:	50 e4       	ldi	r21, 0x40	; 64
     8e6:	6c 2d       	mov	r22, r12
     8e8:	7d 2d       	mov	r23, r13
     8ea:	89 2d       	mov	r24, r9
     8ec:	98 2d       	mov	r25, r8
     8ee:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     8f2:	18 16       	cp	r1, r24
     8f4:	0c f0       	brlt	.+2      	; 0x8f8 <displayValues+0x40c>
     8f6:	10 e0       	ldi	r17, 0x00	; 0
     8f8:	11 23       	and	r17, r17
     8fa:	81 f0       	breq	.+32     	; 0x91c <__stack+0x1d>
     8fc:	20 e0       	ldi	r18, 0x00	; 0
     8fe:	30 e0       	ldi	r19, 0x00	; 0
     900:	40 e2       	ldi	r20, 0x20	; 32
     902:	51 e4       	ldi	r21, 0x41	; 65
     904:	6c 2d       	mov	r22, r12
     906:	7d 2d       	mov	r23, r13
     908:	89 2d       	mov	r24, r9
     90a:	98 2d       	mov	r25, r8
     90c:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     910:	88 23       	and	r24, r24
     912:	24 f4       	brge	.+8      	; 0x91c <__stack+0x1d>
	{
		DIODE_update_shift_regs_REAR(6);
     914:	86 e0       	ldi	r24, 0x06	; 6
     916:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
     91a:	a3 c0       	rjmp	.+326    	; 0xa62 <__stack+0x163>
	} else if((distanceRear > 10) & (distanceRear < 15))
     91c:	11 e0       	ldi	r17, 0x01	; 1
     91e:	20 e0       	ldi	r18, 0x00	; 0
     920:	30 e0       	ldi	r19, 0x00	; 0
     922:	40 e2       	ldi	r20, 0x20	; 32
     924:	51 e4       	ldi	r21, 0x41	; 65
     926:	6c 2d       	mov	r22, r12
     928:	7d 2d       	mov	r23, r13
     92a:	89 2d       	mov	r24, r9
     92c:	98 2d       	mov	r25, r8
     92e:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     932:	18 16       	cp	r1, r24
     934:	0c f0       	brlt	.+2      	; 0x938 <__stack+0x39>
     936:	10 e0       	ldi	r17, 0x00	; 0
     938:	11 23       	and	r17, r17
     93a:	81 f0       	breq	.+32     	; 0x95c <__stack+0x5d>
     93c:	20 e0       	ldi	r18, 0x00	; 0
     93e:	30 e0       	ldi	r19, 0x00	; 0
     940:	40 e7       	ldi	r20, 0x70	; 112
     942:	51 e4       	ldi	r21, 0x41	; 65
     944:	6c 2d       	mov	r22, r12
     946:	7d 2d       	mov	r23, r13
     948:	89 2d       	mov	r24, r9
     94a:	98 2d       	mov	r25, r8
     94c:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     950:	88 23       	and	r24, r24
     952:	24 f4       	brge	.+8      	; 0x95c <__stack+0x5d>
	{
		DIODE_update_shift_regs_REAR(5);
     954:	85 e0       	ldi	r24, 0x05	; 5
     956:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
     95a:	83 c0       	rjmp	.+262    	; 0xa62 <__stack+0x163>
	} else if((distanceRear > 15) & (distanceRear < 20))
     95c:	11 e0       	ldi	r17, 0x01	; 1
     95e:	20 e0       	ldi	r18, 0x00	; 0
     960:	30 e0       	ldi	r19, 0x00	; 0
     962:	40 e7       	ldi	r20, 0x70	; 112
     964:	51 e4       	ldi	r21, 0x41	; 65
     966:	6c 2d       	mov	r22, r12
     968:	7d 2d       	mov	r23, r13
     96a:	89 2d       	mov	r24, r9
     96c:	98 2d       	mov	r25, r8
     96e:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     972:	18 16       	cp	r1, r24
     974:	0c f0       	brlt	.+2      	; 0x978 <__stack+0x79>
     976:	10 e0       	ldi	r17, 0x00	; 0
     978:	11 23       	and	r17, r17
     97a:	81 f0       	breq	.+32     	; 0x99c <__stack+0x9d>
     97c:	20 e0       	ldi	r18, 0x00	; 0
     97e:	30 e0       	ldi	r19, 0x00	; 0
     980:	40 ea       	ldi	r20, 0xA0	; 160
     982:	51 e4       	ldi	r21, 0x41	; 65
     984:	6c 2d       	mov	r22, r12
     986:	7d 2d       	mov	r23, r13
     988:	89 2d       	mov	r24, r9
     98a:	98 2d       	mov	r25, r8
     98c:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     990:	88 23       	and	r24, r24
     992:	24 f4       	brge	.+8      	; 0x99c <__stack+0x9d>
	{
		DIODE_update_shift_regs_REAR(4);
     994:	84 e0       	ldi	r24, 0x04	; 4
     996:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
     99a:	63 c0       	rjmp	.+198    	; 0xa62 <__stack+0x163>
	} else if((distanceRear > 20) & (distanceRear < 25))
     99c:	11 e0       	ldi	r17, 0x01	; 1
     99e:	20 e0       	ldi	r18, 0x00	; 0
     9a0:	30 e0       	ldi	r19, 0x00	; 0
     9a2:	40 ea       	ldi	r20, 0xA0	; 160
     9a4:	51 e4       	ldi	r21, 0x41	; 65
     9a6:	6c 2d       	mov	r22, r12
     9a8:	7d 2d       	mov	r23, r13
     9aa:	89 2d       	mov	r24, r9
     9ac:	98 2d       	mov	r25, r8
     9ae:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     9b2:	18 16       	cp	r1, r24
     9b4:	0c f0       	brlt	.+2      	; 0x9b8 <__stack+0xb9>
     9b6:	10 e0       	ldi	r17, 0x00	; 0
     9b8:	11 23       	and	r17, r17
     9ba:	81 f0       	breq	.+32     	; 0x9dc <__stack+0xdd>
     9bc:	20 e0       	ldi	r18, 0x00	; 0
     9be:	30 e0       	ldi	r19, 0x00	; 0
     9c0:	48 ec       	ldi	r20, 0xC8	; 200
     9c2:	51 e4       	ldi	r21, 0x41	; 65
     9c4:	6c 2d       	mov	r22, r12
     9c6:	7d 2d       	mov	r23, r13
     9c8:	89 2d       	mov	r24, r9
     9ca:	98 2d       	mov	r25, r8
     9cc:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     9d0:	88 23       	and	r24, r24
     9d2:	24 f4       	brge	.+8      	; 0x9dc <__stack+0xdd>
	{
		DIODE_update_shift_regs_REAR(3);
     9d4:	83 e0       	ldi	r24, 0x03	; 3
     9d6:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
     9da:	43 c0       	rjmp	.+134    	; 0xa62 <__stack+0x163>
	} else if((distanceRear > 25) & (distanceRear < 30))
     9dc:	11 e0       	ldi	r17, 0x01	; 1
     9de:	20 e0       	ldi	r18, 0x00	; 0
     9e0:	30 e0       	ldi	r19, 0x00	; 0
     9e2:	48 ec       	ldi	r20, 0xC8	; 200
     9e4:	51 e4       	ldi	r21, 0x41	; 65
     9e6:	6c 2d       	mov	r22, r12
     9e8:	7d 2d       	mov	r23, r13
     9ea:	89 2d       	mov	r24, r9
     9ec:	98 2d       	mov	r25, r8
     9ee:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     9f2:	18 16       	cp	r1, r24
     9f4:	0c f0       	brlt	.+2      	; 0x9f8 <__stack+0xf9>
     9f6:	10 e0       	ldi	r17, 0x00	; 0
     9f8:	11 23       	and	r17, r17
     9fa:	81 f0       	breq	.+32     	; 0xa1c <__stack+0x11d>
     9fc:	20 e0       	ldi	r18, 0x00	; 0
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	40 ef       	ldi	r20, 0xF0	; 240
     a02:	51 e4       	ldi	r21, 0x41	; 65
     a04:	6c 2d       	mov	r22, r12
     a06:	7d 2d       	mov	r23, r13
     a08:	89 2d       	mov	r24, r9
     a0a:	98 2d       	mov	r25, r8
     a0c:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     a10:	88 23       	and	r24, r24
     a12:	24 f4       	brge	.+8      	; 0xa1c <__stack+0x11d>
	{
		DIODE_update_shift_regs_REAR(2);
     a14:	82 e0       	ldi	r24, 0x02	; 2
     a16:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
     a1a:	23 c0       	rjmp	.+70     	; 0xa62 <__stack+0x163>
	} else if((distanceRear > 30) & (distanceRear < 35))
     a1c:	11 e0       	ldi	r17, 0x01	; 1
     a1e:	20 e0       	ldi	r18, 0x00	; 0
     a20:	30 e0       	ldi	r19, 0x00	; 0
     a22:	40 ef       	ldi	r20, 0xF0	; 240
     a24:	51 e4       	ldi	r21, 0x41	; 65
     a26:	6c 2d       	mov	r22, r12
     a28:	7d 2d       	mov	r23, r13
     a2a:	89 2d       	mov	r24, r9
     a2c:	98 2d       	mov	r25, r8
     a2e:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     a32:	18 16       	cp	r1, r24
     a34:	0c f0       	brlt	.+2      	; 0xa38 <__stack+0x139>
     a36:	10 e0       	ldi	r17, 0x00	; 0
     a38:	11 23       	and	r17, r17
     a3a:	81 f0       	breq	.+32     	; 0xa5c <__stack+0x15d>
     a3c:	20 e0       	ldi	r18, 0x00	; 0
     a3e:	30 e0       	ldi	r19, 0x00	; 0
     a40:	4c e0       	ldi	r20, 0x0C	; 12
     a42:	52 e4       	ldi	r21, 0x42	; 66
     a44:	6c 2d       	mov	r22, r12
     a46:	7d 2d       	mov	r23, r13
     a48:	89 2d       	mov	r24, r9
     a4a:	98 2d       	mov	r25, r8
     a4c:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     a50:	88 23       	and	r24, r24
     a52:	24 f4       	brge	.+8      	; 0xa5c <__stack+0x15d>
	{
		DIODE_update_shift_regs_REAR(1);
     a54:	81 e0       	ldi	r24, 0x01	; 1
     a56:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
     a5a:	03 c0       	rjmp	.+6      	; 0xa62 <__stack+0x163>
	} else 
	{
		DIODE_update_shift_regs_REAR(0);
     a5c:	80 e0       	ldi	r24, 0x00	; 0
     a5e:	0e 94 b8 07 	call	0xf70	; 0xf70 <DIODE_update_shift_regs_REAR>
	}
	
	if ((dist > 7) & (dist < 10))
     a62:	11 e0       	ldi	r17, 0x01	; 1
     a64:	20 e0       	ldi	r18, 0x00	; 0
     a66:	30 e0       	ldi	r19, 0x00	; 0
     a68:	40 ee       	ldi	r20, 0xE0	; 224
     a6a:	50 e4       	ldi	r21, 0x40	; 64
     a6c:	67 2d       	mov	r22, r7
     a6e:	76 2d       	mov	r23, r6
     a70:	85 2d       	mov	r24, r5
     a72:	94 2d       	mov	r25, r4
     a74:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     a78:	18 16       	cp	r1, r24
     a7a:	0c f0       	brlt	.+2      	; 0xa7e <__stack+0x17f>
     a7c:	10 e0       	ldi	r17, 0x00	; 0
     a7e:	11 23       	and	r17, r17
     a80:	99 f0       	breq	.+38     	; 0xaa8 <__stack+0x1a9>
     a82:	20 e0       	ldi	r18, 0x00	; 0
     a84:	30 e0       	ldi	r19, 0x00	; 0
     a86:	40 e2       	ldi	r20, 0x20	; 32
     a88:	51 e4       	ldi	r21, 0x41	; 65
     a8a:	67 2d       	mov	r22, r7
     a8c:	76 2d       	mov	r23, r6
     a8e:	85 2d       	mov	r24, r5
     a90:	94 2d       	mov	r25, r4
     a92:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     a96:	88 23       	and	r24, r24
     a98:	3c f4       	brge	.+14     	; 0xaa8 <__stack+0x1a9>
	{
		beepTiming = 62000;
     a9a:	80 e3       	ldi	r24, 0x30	; 48
     a9c:	92 ef       	ldi	r25, 0xF2	; 242
     a9e:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     aa2:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     aa6:	b5 c0       	rjmp	.+362    	; 0xc12 <__stack+0x313>
	}else if ((dist > 10) & (dist < 15))
     aa8:	11 e0       	ldi	r17, 0x01	; 1
     aaa:	20 e0       	ldi	r18, 0x00	; 0
     aac:	30 e0       	ldi	r19, 0x00	; 0
     aae:	40 e2       	ldi	r20, 0x20	; 32
     ab0:	51 e4       	ldi	r21, 0x41	; 65
     ab2:	67 2d       	mov	r22, r7
     ab4:	76 2d       	mov	r23, r6
     ab6:	85 2d       	mov	r24, r5
     ab8:	94 2d       	mov	r25, r4
     aba:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     abe:	18 16       	cp	r1, r24
     ac0:	0c f0       	brlt	.+2      	; 0xac4 <__stack+0x1c5>
     ac2:	10 e0       	ldi	r17, 0x00	; 0
     ac4:	11 23       	and	r17, r17
     ac6:	99 f0       	breq	.+38     	; 0xaee <__stack+0x1ef>
     ac8:	20 e0       	ldi	r18, 0x00	; 0
     aca:	30 e0       	ldi	r19, 0x00	; 0
     acc:	40 e7       	ldi	r20, 0x70	; 112
     ace:	51 e4       	ldi	r21, 0x41	; 65
     ad0:	67 2d       	mov	r22, r7
     ad2:	76 2d       	mov	r23, r6
     ad4:	85 2d       	mov	r24, r5
     ad6:	94 2d       	mov	r25, r4
     ad8:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     adc:	88 23       	and	r24, r24
     ade:	3c f4       	brge	.+14     	; 0xaee <__stack+0x1ef>
	{
		beepTiming = 58000;
     ae0:	80 e9       	ldi	r24, 0x90	; 144
     ae2:	92 ee       	ldi	r25, 0xE2	; 226
     ae4:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     ae8:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     aec:	92 c0       	rjmp	.+292    	; 0xc12 <__stack+0x313>
	}else if ((dist > 15) & (dist < 20))
     aee:	11 e0       	ldi	r17, 0x01	; 1
     af0:	20 e0       	ldi	r18, 0x00	; 0
     af2:	30 e0       	ldi	r19, 0x00	; 0
     af4:	40 e7       	ldi	r20, 0x70	; 112
     af6:	51 e4       	ldi	r21, 0x41	; 65
     af8:	67 2d       	mov	r22, r7
     afa:	76 2d       	mov	r23, r6
     afc:	85 2d       	mov	r24, r5
     afe:	94 2d       	mov	r25, r4
     b00:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     b04:	18 16       	cp	r1, r24
     b06:	0c f0       	brlt	.+2      	; 0xb0a <__stack+0x20b>
     b08:	10 e0       	ldi	r17, 0x00	; 0
     b0a:	11 23       	and	r17, r17
     b0c:	99 f0       	breq	.+38     	; 0xb34 <__stack+0x235>
     b0e:	20 e0       	ldi	r18, 0x00	; 0
     b10:	30 e0       	ldi	r19, 0x00	; 0
     b12:	40 ea       	ldi	r20, 0xA0	; 160
     b14:	51 e4       	ldi	r21, 0x41	; 65
     b16:	67 2d       	mov	r22, r7
     b18:	76 2d       	mov	r23, r6
     b1a:	85 2d       	mov	r24, r5
     b1c:	94 2d       	mov	r25, r4
     b1e:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     b22:	88 23       	and	r24, r24
     b24:	3c f4       	brge	.+14     	; 0xb34 <__stack+0x235>
	{
		beepTiming = 52000;
     b26:	80 e2       	ldi	r24, 0x20	; 32
     b28:	9b ec       	ldi	r25, 0xCB	; 203
     b2a:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     b2e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     b32:	6f c0       	rjmp	.+222    	; 0xc12 <__stack+0x313>
	}else if ((dist > 20) & (dist < 25))
     b34:	11 e0       	ldi	r17, 0x01	; 1
     b36:	20 e0       	ldi	r18, 0x00	; 0
     b38:	30 e0       	ldi	r19, 0x00	; 0
     b3a:	40 ea       	ldi	r20, 0xA0	; 160
     b3c:	51 e4       	ldi	r21, 0x41	; 65
     b3e:	67 2d       	mov	r22, r7
     b40:	76 2d       	mov	r23, r6
     b42:	85 2d       	mov	r24, r5
     b44:	94 2d       	mov	r25, r4
     b46:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     b4a:	18 16       	cp	r1, r24
     b4c:	0c f0       	brlt	.+2      	; 0xb50 <__stack+0x251>
     b4e:	10 e0       	ldi	r17, 0x00	; 0
     b50:	11 23       	and	r17, r17
     b52:	99 f0       	breq	.+38     	; 0xb7a <__stack+0x27b>
     b54:	20 e0       	ldi	r18, 0x00	; 0
     b56:	30 e0       	ldi	r19, 0x00	; 0
     b58:	48 ec       	ldi	r20, 0xC8	; 200
     b5a:	51 e4       	ldi	r21, 0x41	; 65
     b5c:	67 2d       	mov	r22, r7
     b5e:	76 2d       	mov	r23, r6
     b60:	85 2d       	mov	r24, r5
     b62:	94 2d       	mov	r25, r4
     b64:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     b68:	88 23       	and	r24, r24
     b6a:	3c f4       	brge	.+14     	; 0xb7a <__stack+0x27b>
	{
		beepTiming = 46000;
     b6c:	80 eb       	ldi	r24, 0xB0	; 176
     b6e:	93 eb       	ldi	r25, 0xB3	; 179
     b70:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     b74:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     b78:	4c c0       	rjmp	.+152    	; 0xc12 <__stack+0x313>
	}else if ((dist > 25) & (dist < 30))
     b7a:	11 e0       	ldi	r17, 0x01	; 1
     b7c:	20 e0       	ldi	r18, 0x00	; 0
     b7e:	30 e0       	ldi	r19, 0x00	; 0
     b80:	48 ec       	ldi	r20, 0xC8	; 200
     b82:	51 e4       	ldi	r21, 0x41	; 65
     b84:	67 2d       	mov	r22, r7
     b86:	76 2d       	mov	r23, r6
     b88:	85 2d       	mov	r24, r5
     b8a:	94 2d       	mov	r25, r4
     b8c:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     b90:	18 16       	cp	r1, r24
     b92:	0c f0       	brlt	.+2      	; 0xb96 <__stack+0x297>
     b94:	10 e0       	ldi	r17, 0x00	; 0
     b96:	11 23       	and	r17, r17
     b98:	99 f0       	breq	.+38     	; 0xbc0 <__stack+0x2c1>
     b9a:	20 e0       	ldi	r18, 0x00	; 0
     b9c:	30 e0       	ldi	r19, 0x00	; 0
     b9e:	40 ef       	ldi	r20, 0xF0	; 240
     ba0:	51 e4       	ldi	r21, 0x41	; 65
     ba2:	67 2d       	mov	r22, r7
     ba4:	76 2d       	mov	r23, r6
     ba6:	85 2d       	mov	r24, r5
     ba8:	94 2d       	mov	r25, r4
     baa:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     bae:	88 23       	and	r24, r24
     bb0:	3c f4       	brge	.+14     	; 0xbc0 <__stack+0x2c1>
	{
		beepTiming = 40000;
     bb2:	80 e4       	ldi	r24, 0x40	; 64
     bb4:	9c e9       	ldi	r25, 0x9C	; 156
     bb6:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     bba:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     bbe:	29 c0       	rjmp	.+82     	; 0xc12 <__stack+0x313>
	}else if ((dist > 30) & (dist < 35))
     bc0:	11 e0       	ldi	r17, 0x01	; 1
     bc2:	20 e0       	ldi	r18, 0x00	; 0
     bc4:	30 e0       	ldi	r19, 0x00	; 0
     bc6:	40 ef       	ldi	r20, 0xF0	; 240
     bc8:	51 e4       	ldi	r21, 0x41	; 65
     bca:	67 2d       	mov	r22, r7
     bcc:	76 2d       	mov	r23, r6
     bce:	85 2d       	mov	r24, r5
     bd0:	94 2d       	mov	r25, r4
     bd2:	0e 94 2c 0a 	call	0x1458	; 0x1458 <__gesf2>
     bd6:	18 16       	cp	r1, r24
     bd8:	0c f0       	brlt	.+2      	; 0xbdc <__stack+0x2dd>
     bda:	10 e0       	ldi	r17, 0x00	; 0
     bdc:	11 23       	and	r17, r17
     bde:	99 f0       	breq	.+38     	; 0xc06 <__stack+0x307>
     be0:	20 e0       	ldi	r18, 0x00	; 0
     be2:	30 e0       	ldi	r19, 0x00	; 0
     be4:	4c e0       	ldi	r20, 0x0C	; 12
     be6:	52 e4       	ldi	r21, 0x42	; 66
     be8:	67 2d       	mov	r22, r7
     bea:	76 2d       	mov	r23, r6
     bec:	85 2d       	mov	r24, r5
     bee:	94 2d       	mov	r25, r4
     bf0:	0e 94 03 09 	call	0x1206	; 0x1206 <__cmpsf2>
     bf4:	88 23       	and	r24, r24
     bf6:	3c f4       	brge	.+14     	; 0xc06 <__stack+0x307>
	{
		beepTiming = 34000;
     bf8:	80 ed       	ldi	r24, 0xD0	; 208
     bfa:	94 e8       	ldi	r25, 0x84	; 132
     bfc:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     c00:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
     c04:	06 c0       	rjmp	.+12     	; 0xc12 <__stack+0x313>
	}else
	{
		beepTiming = 28000;
     c06:	80 e6       	ldi	r24, 0x60	; 96
     c08:	9d e6       	ldi	r25, 0x6D	; 109
     c0a:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     c0e:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
	}

	return beepTiming;
     c12:	80 91 85 01 	lds	r24, 0x0185	; 0x800185 <beepTiming>
     c16:	90 91 86 01 	lds	r25, 0x0186	; 0x800186 <beepTiming+0x1>
	
     c1a:	cc 59       	subi	r28, 0x9C	; 156
     c1c:	df 4f       	sbci	r29, 0xFF	; 255
     c1e:	0f b6       	in	r0, 0x3f	; 63
     c20:	f8 94       	cli
     c22:	de bf       	out	0x3e, r29	; 62
     c24:	0f be       	out	0x3f, r0	; 63
     c26:	cd bf       	out	0x3d, r28	; 61
     c28:	df 91       	pop	r29
     c2a:	cf 91       	pop	r28
     c2c:	1f 91       	pop	r17
     c2e:	0f 91       	pop	r16
     c30:	ff 90       	pop	r15
     c32:	ef 90       	pop	r14
     c34:	df 90       	pop	r13
     c36:	cf 90       	pop	r12
     c38:	bf 90       	pop	r11
     c3a:	af 90       	pop	r10
     c3c:	9f 90       	pop	r9
     c3e:	8f 90       	pop	r8
     c40:	7f 90       	pop	r7
     c42:	6f 90       	pop	r6
     c44:	5f 90       	pop	r5
     c46:	4f 90       	pop	r4
     c48:	08 95       	ret

00000c4a <main>:

int displayValues(float distance, float distanceFront);

int main(void)
{
	lcd_init(LCD_DISP_ON);
     c4a:	8c e0       	ldi	r24, 0x0C	; 12
     c4c:	0e 94 7b 01 	call	0x2f6	; 0x2f6 <lcd_init>
	lcd_gotoxy(5, 0);
     c50:	60 e0       	ldi	r22, 0x00	; 0
     c52:	85 e0       	ldi	r24, 0x05	; 5
     c54:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_gotoxy>
	lcd_puts("Rid at");
     c58:	87 e6       	ldi	r24, 0x67	; 103
     c5a:	91 e0       	ldi	r25, 0x01	; 1
     c5c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_puts>
	lcd_gotoxy(2, 1);
     c60:	61 e0       	ldi	r22, 0x01	; 1
     c62:	82 e0       	ldi	r24, 0x02	; 2
     c64:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_gotoxy>
	lcd_puts("jedes lip...");
     c68:	8e e6       	ldi	r24, 0x6E	; 110
     c6a:	91 e0       	ldi	r25, 0x01	; 1
     c6c:	0e 94 6b 01 	call	0x2d6	; 0x2d6 <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     c70:	2f ef       	ldi	r18, 0xFF	; 255
     c72:	83 ed       	ldi	r24, 0xD3	; 211
     c74:	90 e3       	ldi	r25, 0x30	; 48
     c76:	21 50       	subi	r18, 0x01	; 1
     c78:	80 40       	sbci	r24, 0x00	; 0
     c7a:	90 40       	sbci	r25, 0x00	; 0
     c7c:	e1 f7       	brne	.-8      	; 0xc76 <main+0x2c>
     c7e:	00 c0       	rjmp	.+0      	; 0xc80 <main+0x36>
     c80:	00 00       	nop
	_delay_ms(1000);

	DIODE_init();
     c82:	0e 94 55 07 	call	0xeaa	; 0xeaa <DIODE_init>
	
	uart_init(UART_BAUD_SELECT(9600, F_CPU));
     c86:	87 e6       	ldi	r24, 0x67	; 103
     c88:	90 e0       	ldi	r25, 0x00	; 0
     c8a:	0e 94 59 08 	call	0x10b2	; 0x10b2 <uart_init>
	
	GPIO_config_input_nopull(&DDRD, sensEchoFront);
     c8e:	63 e0       	ldi	r22, 0x03	; 3
     c90:	8a e2       	ldi	r24, 0x2A	; 42
     c92:	90 e0       	ldi	r25, 0x00	; 0
     c94:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <GPIO_config_input_nopull>
	GPIO_config_input_nopull(&DDRD, sensEchoRear);
     c98:	62 e0       	ldi	r22, 0x02	; 2
     c9a:	8a e2       	ldi	r24, 0x2A	; 42
     c9c:	90 e0       	ldi	r25, 0x00	; 0
     c9e:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <GPIO_config_input_nopull>
	
	GPIO_config_output(&DDRB, sensTrigFront);
     ca2:	62 e0       	ldi	r22, 0x02	; 2
     ca4:	84 e2       	ldi	r24, 0x24	; 36
     ca6:	90 e0       	ldi	r25, 0x00	; 0
     ca8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRB, sensTrigRear);
     cac:	63 e0       	ldi	r22, 0x03	; 3
     cae:	84 e2       	ldi	r24, 0x24	; 36
     cb0:	90 e0       	ldi	r25, 0x00	; 0
     cb2:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	
	GPIO_write_low(&PORTB, sensTrigFront);
     cb6:	62 e0       	ldi	r22, 0x02	; 2
     cb8:	85 e2       	ldi	r24, 0x25	; 37
     cba:	90 e0       	ldi	r25, 0x00	; 0
     cbc:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTB, sensTrigRear);
     cc0:	63 e0       	ldi	r22, 0x03	; 3
     cc2:	85 e2       	ldi	r24, 0x25	; 37
     cc4:	90 e0       	ldi	r25, 0x00	; 0
     cc6:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	
	GPIO_config_output(&DDRB, buzzer);
     cca:	64 e0       	ldi	r22, 0x04	; 4
     ccc:	84 e2       	ldi	r24, 0x24	; 36
     cce:	90 e0       	ldi	r25, 0x00	; 0
     cd0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_write_low(&PORTB, buzzer);
     cd4:	64 e0       	ldi	r22, 0x04	; 4
     cd6:	85 e2       	ldi	r24, 0x25	; 37
     cd8:	90 e0       	ldi	r25, 0x00	; 0
     cda:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	
	TIM1_overflow_1s();
     cde:	e1 e8       	ldi	r30, 0x81	; 129
     ce0:	f0 e0       	ldi	r31, 0x00	; 0
     ce2:	80 81       	ld	r24, Z
     ce4:	8c 7f       	andi	r24, 0xFC	; 252
     ce6:	80 83       	st	Z, r24
     ce8:	80 81       	ld	r24, Z
     cea:	84 60       	ori	r24, 0x04	; 4
     cec:	80 83       	st	Z, r24
	TIM1_overflow_interrupt_enable();
     cee:	ef e6       	ldi	r30, 0x6F	; 111
     cf0:	f0 e0       	ldi	r31, 0x00	; 0
     cf2:	80 81       	ld	r24, Z
     cf4:	81 60       	ori	r24, 0x01	; 1
     cf6:	80 83       	st	Z, r24
	
	EICRA |= ((1<<ISC11) | (1<<ISC10));
     cf8:	e9 e6       	ldi	r30, 0x69	; 105
     cfa:	f0 e0       	ldi	r31, 0x00	; 0
     cfc:	80 81       	ld	r24, Z
     cfe:	8c 60       	ori	r24, 0x0C	; 12
     d00:	80 83       	st	Z, r24
	EIMSK |= (1<<INT1);
     d02:	e9 9a       	sbi	0x1d, 1	; 29
	
	EICRA |= ((1<<ISC01) | (1<<ISC00));
     d04:	80 81       	ld	r24, Z
     d06:	83 60       	ori	r24, 0x03	; 3
     d08:	80 83       	st	Z, r24
	EIMSK |= (1<<INT0);
     d0a:	e8 9a       	sbi	0x1d, 0	; 29
	
	sei();
     d0c:	78 94       	sei
	
    /* Replace with your application code */
    while (1) 
    {
		if ((mux == 1) & (trigEnable == 1))
     d0e:	c1 e0       	ldi	r28, 0x01	; 1
     d10:	d0 e0       	ldi	r29, 0x00	; 0
     d12:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <trigEnable>
     d16:	8c 2f       	mov	r24, r28
     d18:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     d1c:	91 30       	cpi	r25, 0x01	; 1
     d1e:	09 f0       	breq	.+2      	; 0xd22 <main+0xd8>
     d20:	8d 2f       	mov	r24, r29
     d22:	88 23       	and	r24, r24
     d24:	09 f4       	brne	.+2      	; 0xd28 <main+0xde>
     d26:	44 c0       	rjmp	.+136    	; 0xdb0 <main+0x166>
     d28:	8c 2f       	mov	r24, r28
     d2a:	21 30       	cpi	r18, 0x01	; 1
     d2c:	09 f0       	breq	.+2      	; 0xd30 <main+0xe6>
     d2e:	8d 2f       	mov	r24, r29
     d30:	88 23       	and	r24, r24
     d32:	f1 f1       	breq	.+124    	; 0xdb0 <main+0x166>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d34:	87 ec       	ldi	r24, 0xC7	; 199
     d36:	90 e0       	ldi	r25, 0x00	; 0
     d38:	01 97       	sbiw	r24, 0x01	; 1
     d3a:	f1 f7       	brne	.-4      	; 0xd38 <main+0xee>
     d3c:	00 c0       	rjmp	.+0      	; 0xd3e <main+0xf4>
     d3e:	00 00       	nop
		{
			_delay_us(50);
			GPIO_write_high(&PORTB, sensTrigFront);
     d40:	62 e0       	ldi	r22, 0x02	; 2
     d42:	85 e2       	ldi	r24, 0x25	; 37
     d44:	90 e0       	ldi	r25, 0x00	; 0
     d46:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     d4a:	95 e3       	ldi	r25, 0x35	; 53
     d4c:	9a 95       	dec	r25
     d4e:	f1 f7       	brne	.-4      	; 0xd4c <main+0x102>
     d50:	00 00       	nop
			_delay_us(10);
			GPIO_write_low(&PORTB, sensTrigFront);
     d52:	62 e0       	ldi	r22, 0x02	; 2
     d54:	85 e2       	ldi	r24, 0x25	; 37
     d56:	90 e0       	ldi	r25, 0x00	; 0
     d58:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
			trigEnable = 0;
     d5c:	d0 93 01 01 	sts	0x0101, r29	; 0x800101 <trigEnable>
 			if (averaging == 4)
     d60:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <averaging>
     d64:	84 30       	cpi	r24, 0x04	; 4
     d66:	21 f5       	brne	.+72     	; 0xdb0 <main+0x166>
 			{
				distanceFront = distanceFront/averaging;
     d68:	c0 90 80 01 	lds	r12, 0x0180	; 0x800180 <distanceFront>
     d6c:	d0 90 81 01 	lds	r13, 0x0181	; 0x800181 <distanceFront+0x1>
     d70:	e0 90 82 01 	lds	r14, 0x0182	; 0x800182 <distanceFront+0x2>
     d74:	f0 90 83 01 	lds	r15, 0x0183	; 0x800183 <distanceFront+0x3>
     d78:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <averaging>
     d7c:	70 e0       	ldi	r23, 0x00	; 0
     d7e:	80 e0       	ldi	r24, 0x00	; 0
     d80:	90 e0       	ldi	r25, 0x00	; 0
     d82:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__floatsisf>
     d86:	9b 01       	movw	r18, r22
     d88:	ac 01       	movw	r20, r24
     d8a:	c7 01       	movw	r24, r14
     d8c:	b6 01       	movw	r22, r12
     d8e:	0e 94 08 09 	call	0x1210	; 0x1210 <__divsf3>
     d92:	60 93 80 01 	sts	0x0180, r22	; 0x800180 <distanceFront>
     d96:	70 93 81 01 	sts	0x0181, r23	; 0x800181 <distanceFront+0x1>
     d9a:	80 93 82 01 	sts	0x0182, r24	; 0x800182 <distanceFront+0x2>
     d9e:	90 93 83 01 	sts	0x0183, r25	; 0x800183 <distanceFront+0x3>
	 			averaging = 0;
     da2:	d0 93 84 01 	sts	0x0184, r29	; 0x800184 <averaging>
	 			mux++;
     da6:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     daa:	8f 5f       	subi	r24, 0xFF	; 255
     dac:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
 			}
			
		}
		if ((mux == 2) & (trigEnable == 1))
     db0:	20 91 01 01 	lds	r18, 0x0101	; 0x800101 <trigEnable>
     db4:	8c 2f       	mov	r24, r28
     db6:	90 91 00 01 	lds	r25, 0x0100	; 0x800100 <__data_start>
     dba:	92 30       	cpi	r25, 0x02	; 2
     dbc:	09 f0       	breq	.+2      	; 0xdc0 <main+0x176>
     dbe:	8d 2f       	mov	r24, r29
     dc0:	88 23       	and	r24, r24
     dc2:	09 f4       	brne	.+2      	; 0xdc6 <main+0x17c>
     dc4:	44 c0       	rjmp	.+136    	; 0xe4e <main+0x204>
     dc6:	8c 2f       	mov	r24, r28
     dc8:	21 30       	cpi	r18, 0x01	; 1
     dca:	09 f0       	breq	.+2      	; 0xdce <main+0x184>
     dcc:	8d 2f       	mov	r24, r29
     dce:	88 23       	and	r24, r24
     dd0:	f1 f1       	breq	.+124    	; 0xe4e <main+0x204>
     dd2:	87 ec       	ldi	r24, 0xC7	; 199
     dd4:	90 e0       	ldi	r25, 0x00	; 0
     dd6:	01 97       	sbiw	r24, 0x01	; 1
     dd8:	f1 f7       	brne	.-4      	; 0xdd6 <main+0x18c>
     dda:	00 c0       	rjmp	.+0      	; 0xddc <main+0x192>
     ddc:	00 00       	nop
		{
			_delay_us(50);
			GPIO_write_high(&PORTB, sensTrigRear);
     dde:	63 e0       	ldi	r22, 0x03	; 3
     de0:	85 e2       	ldi	r24, 0x25	; 37
     de2:	90 e0       	ldi	r25, 0x00	; 0
     de4:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     de8:	95 e3       	ldi	r25, 0x35	; 53
     dea:	9a 95       	dec	r25
     dec:	f1 f7       	brne	.-4      	; 0xdea <main+0x1a0>
     dee:	00 00       	nop
			_delay_us(10);
			GPIO_write_low(&PORTB, sensTrigRear);
     df0:	63 e0       	ldi	r22, 0x03	; 3
     df2:	85 e2       	ldi	r24, 0x25	; 37
     df4:	90 e0       	ldi	r25, 0x00	; 0
     df6:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
			trigEnable = 0;	
     dfa:	d0 93 01 01 	sts	0x0101, r29	; 0x800101 <trigEnable>
			if (averaging == 4){
     dfe:	80 91 84 01 	lds	r24, 0x0184	; 0x800184 <averaging>
     e02:	84 30       	cpi	r24, 0x04	; 4
     e04:	21 f5       	brne	.+72     	; 0xe4e <main+0x204>
				distanceRear = distanceRear/averaging;
     e06:	c0 90 7c 01 	lds	r12, 0x017C	; 0x80017c <__data_end>
     e0a:	d0 90 7d 01 	lds	r13, 0x017D	; 0x80017d <__data_end+0x1>
     e0e:	e0 90 7e 01 	lds	r14, 0x017E	; 0x80017e <__data_end+0x2>
     e12:	f0 90 7f 01 	lds	r15, 0x017F	; 0x80017f <__data_end+0x3>
     e16:	60 91 84 01 	lds	r22, 0x0184	; 0x800184 <averaging>
     e1a:	70 e0       	ldi	r23, 0x00	; 0
     e1c:	80 e0       	ldi	r24, 0x00	; 0
     e1e:	90 e0       	ldi	r25, 0x00	; 0
     e20:	0e 94 7c 09 	call	0x12f8	; 0x12f8 <__floatsisf>
     e24:	9b 01       	movw	r18, r22
     e26:	ac 01       	movw	r20, r24
     e28:	c7 01       	movw	r24, r14
     e2a:	b6 01       	movw	r22, r12
     e2c:	0e 94 08 09 	call	0x1210	; 0x1210 <__divsf3>
     e30:	60 93 7c 01 	sts	0x017C, r22	; 0x80017c <__data_end>
     e34:	70 93 7d 01 	sts	0x017D, r23	; 0x80017d <__data_end+0x1>
     e38:	80 93 7e 01 	sts	0x017E, r24	; 0x80017e <__data_end+0x2>
     e3c:	90 93 7f 01 	sts	0x017F, r25	; 0x80017f <__data_end+0x3>
				averaging = 0;	
     e40:	d0 93 84 01 	sts	0x0184, r29	; 0x800184 <averaging>
				mux++;		
     e44:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e48:	8f 5f       	subi	r24, 0xFF	; 255
     e4a:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
			}
		}
		if (mux == 3)
     e4e:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     e52:	83 30       	cpi	r24, 0x03	; 3
     e54:	09 f0       	breq	.+2      	; 0xe58 <main+0x20e>
     e56:	5d cf       	rjmp	.-326    	; 0xd12 <main+0xc8>
		{
			beepTiming = displayValues(distanceRear, distanceFront);
     e58:	20 91 80 01 	lds	r18, 0x0180	; 0x800180 <distanceFront>
     e5c:	30 91 81 01 	lds	r19, 0x0181	; 0x800181 <distanceFront+0x1>
     e60:	40 91 82 01 	lds	r20, 0x0182	; 0x800182 <distanceFront+0x2>
     e64:	50 91 83 01 	lds	r21, 0x0183	; 0x800183 <distanceFront+0x3>
     e68:	60 91 7c 01 	lds	r22, 0x017C	; 0x80017c <__data_end>
     e6c:	70 91 7d 01 	lds	r23, 0x017D	; 0x80017d <__data_end+0x1>
     e70:	80 91 7e 01 	lds	r24, 0x017E	; 0x80017e <__data_end+0x2>
     e74:	90 91 7f 01 	lds	r25, 0x017F	; 0x80017f <__data_end+0x3>
     e78:	0e 94 76 02 	call	0x4ec	; 0x4ec <displayValues>
     e7c:	90 93 86 01 	sts	0x0186, r25	; 0x800186 <beepTiming+0x1>
     e80:	80 93 85 01 	sts	0x0185, r24	; 0x800185 <beepTiming>
			distanceFront = 0;
     e84:	10 92 80 01 	sts	0x0180, r1	; 0x800180 <distanceFront>
     e88:	10 92 81 01 	sts	0x0181, r1	; 0x800181 <distanceFront+0x1>
     e8c:	10 92 82 01 	sts	0x0182, r1	; 0x800182 <distanceFront+0x2>
     e90:	10 92 83 01 	sts	0x0183, r1	; 0x800183 <distanceFront+0x3>
			distanceRear = 0;
     e94:	10 92 7c 01 	sts	0x017C, r1	; 0x80017c <__data_end>
     e98:	10 92 7d 01 	sts	0x017D, r1	; 0x80017d <__data_end+0x1>
     e9c:	10 92 7e 01 	sts	0x017E, r1	; 0x80017e <__data_end+0x2>
     ea0:	10 92 7f 01 	sts	0x017F, r1	; 0x80017f <__data_end+0x3>
			mux = 1;
     ea4:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     ea8:	34 cf       	rjmp	.-408    	; 0xd12 <main+0xc8>

00000eaa <DIODE_init>:

/* Function definitions ----------------------------------------------*/
void DIODE_init(void)
{
	/* Configuration of SSD signals */
	GPIO_config_output(&DDRC, DATA_INPUT_REAR);
     eaa:	63 e0       	ldi	r22, 0x03	; 3
     eac:	87 e2       	ldi	r24, 0x27	; 39
     eae:	90 e0       	ldi	r25, 0x00	; 0
     eb0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, DATA_INPUT_FRONT);
     eb4:	60 e0       	ldi	r22, 0x00	; 0
     eb6:	87 e2       	ldi	r24, 0x27	; 39
     eb8:	90 e0       	ldi	r25, 0x00	; 0
     eba:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, SEGMENT_CLK);
     ebe:	62 e0       	ldi	r22, 0x02	; 2
     ec0:	87 e2       	ldi	r24, 0x27	; 39
     ec2:	90 e0       	ldi	r25, 0x00	; 0
     ec4:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, SEGMENT_LATCH);
     ec8:	61 e0       	ldi	r22, 0x01	; 1
     eca:	87 e2       	ldi	r24, 0x27	; 39
     ecc:	90 e0       	ldi	r25, 0x00	; 0
     ece:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, SEGMENT_LATCH2);
     ed2:	64 e0       	ldi	r22, 0x04	; 4
     ed4:	87 e2       	ldi	r24, 0x27	; 39
     ed6:	90 e0       	ldi	r25, 0x00	; 0
     ed8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
     edc:	08 95       	ret

00000ede <DIODE_update_shift_regs_FRONT>:

}

/*--------------------------------------------------------------------*/
void DIODE_update_shift_regs_FRONT(uint8_t number)
{
     ede:	cf 93       	push	r28
     ee0:	df 93       	push	r29
	uint8_t bit_number;
	number = diode_number[number];
     ee2:	e8 2f       	mov	r30, r24
     ee4:	f0 e0       	ldi	r31, 0x00	; 0
     ee6:	e5 5f       	subi	r30, 0xF5	; 245
     ee8:	fe 4f       	sbci	r31, 0xFE	; 254
     eea:	d0 81       	ld	r29, Z
/*	row = diode_row[row];*/
	
	// 
	GPIO_write_low(&PORTC,DATA_INPUT_FRONT);
     eec:	60 e0       	ldi	r22, 0x00	; 0
     eee:	88 e2       	ldi	r24, 0x28	; 40
     ef0:	90 e0       	ldi	r25, 0x00	; 0
     ef2:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_CLK);
     ef6:	62 e0       	ldi	r22, 0x02	; 2
     ef8:	88 e2       	ldi	r24, 0x28	; 40
     efa:	90 e0       	ldi	r25, 0x00	; 0
     efc:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_LATCH);	
     f00:	61 e0       	ldi	r22, 0x01	; 1
     f02:	88 e2       	ldi	r24, 0x28	; 40
     f04:	90 e0       	ldi	r25, 0x00	; 0
     f06:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
     f0a:	85 e0       	ldi	r24, 0x05	; 5
     f0c:	8a 95       	dec	r24
     f0e:	f1 f7       	brne	.-4      	; 0xf0c <DIODE_update_shift_regs_FRONT+0x2e>
     f10:	00 00       	nop
     f12:	c8 e0       	ldi	r28, 0x08	; 8
	

	for (bit_number = 0; bit_number < 8; bit_number++)
	{
		// Output DATA value (bit 0 of "segments")
		if ((number & 1) == 0)
     f14:	d0 fd       	sbrc	r29, 0
     f16:	06 c0       	rjmp	.+12     	; 0xf24 <DIODE_update_shift_regs_FRONT+0x46>
		{
			GPIO_write_low(&PORTC,DATA_INPUT_FRONT);
     f18:	60 e0       	ldi	r22, 0x00	; 0
     f1a:	88 e2       	ldi	r24, 0x28	; 40
     f1c:	90 e0       	ldi	r25, 0x00	; 0
     f1e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
     f22:	05 c0       	rjmp	.+10     	; 0xf2e <DIODE_update_shift_regs_FRONT+0x50>
		}
		else
		{
			GPIO_write_high(&PORTC, DATA_INPUT_FRONT);
     f24:	60 e0       	ldi	r22, 0x00	; 0
     f26:	88 e2       	ldi	r24, 0x28	; 40
     f28:	90 e0       	ldi	r25, 0x00	; 0
     f2a:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     f2e:	85 e0       	ldi	r24, 0x05	; 5
     f30:	8a 95       	dec	r24
     f32:	f1 f7       	brne	.-4      	; 0xf30 <DIODE_update_shift_regs_FRONT+0x52>
     f34:	00 00       	nop
		}

 		// Wait 1 us
 		_delay_us(1);
 		// Pull CLK high
 		GPIO_write_high(&PORTC,SEGMENT_CLK);
     f36:	62 e0       	ldi	r22, 0x02	; 2
     f38:	88 e2       	ldi	r24, 0x28	; 40
     f3a:	90 e0       	ldi	r25, 0x00	; 0
     f3c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     f40:	85 e0       	ldi	r24, 0x05	; 5
     f42:	8a 95       	dec	r24
     f44:	f1 f7       	brne	.-4      	; 0xf42 <DIODE_update_shift_regs_FRONT+0x64>
     f46:	00 00       	nop
 		// Wait 1 us
 		_delay_us(1);
 		// Pull CLK low
 		GPIO_write_low(&PORTC,SEGMENT_CLK);
     f48:	62 e0       	ldi	r22, 0x02	; 2
     f4a:	88 e2       	ldi	r24, 0x28	; 40
     f4c:	90 e0       	ldi	r25, 0x00	; 0
     f4e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
		 		
		number = number >> 1;
     f52:	d6 95       	lsr	r29
     f54:	c1 50       	subi	r28, 0x01	; 1
	GPIO_write_low(&PORTC, SEGMENT_LATCH);	
	// Wait 1 us
	_delay_us(1);
	

	for (bit_number = 0; bit_number < 8; bit_number++)
     f56:	f1 f6       	brne	.-68     	; 0xf14 <DIODE_update_shift_regs_FRONT+0x36>
// 
// 
// 		}

// 	// Pull LATCH high
 	GPIO_write_high(&PORTC,SEGMENT_LATCH);
     f58:	61 e0       	ldi	r22, 0x01	; 1
     f5a:	88 e2       	ldi	r24, 0x28	; 40
     f5c:	90 e0       	ldi	r25, 0x00	; 0
     f5e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     f62:	85 e0       	ldi	r24, 0x05	; 5
     f64:	8a 95       	dec	r24
     f66:	f1 f7       	brne	.-4      	; 0xf64 <DIODE_update_shift_regs_FRONT+0x86>
     f68:	00 00       	nop

	// Wait 1 us
	_delay_us(1);

}
     f6a:	df 91       	pop	r29
     f6c:	cf 91       	pop	r28
     f6e:	08 95       	ret

00000f70 <DIODE_update_shift_regs_REAR>:

/*--------------------------------------------------------------------*/
void DIODE_update_shift_regs_REAR(uint8_t number1)
{
     f70:	cf 93       	push	r28
     f72:	df 93       	push	r29
	uint8_t bit_number;
	number1 = diode_number1[number1];
     f74:	e8 2f       	mov	r30, r24
     f76:	f0 e0       	ldi	r31, 0x00	; 0
     f78:	ee 5f       	subi	r30, 0xFE	; 254
     f7a:	fe 4f       	sbci	r31, 0xFE	; 254
     f7c:	d0 81       	ld	r29, Z
	/*	row = diode_row[row];*/
	
	//
	GPIO_write_low(&PORTC,DATA_INPUT_REAR);
     f7e:	63 e0       	ldi	r22, 0x03	; 3
     f80:	88 e2       	ldi	r24, 0x28	; 40
     f82:	90 e0       	ldi	r25, 0x00	; 0
     f84:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_CLK);
     f88:	62 e0       	ldi	r22, 0x02	; 2
     f8a:	88 e2       	ldi	r24, 0x28	; 40
     f8c:	90 e0       	ldi	r25, 0x00	; 0
     f8e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_LATCH2);
     f92:	64 e0       	ldi	r22, 0x04	; 4
     f94:	88 e2       	ldi	r24, 0x28	; 40
     f96:	90 e0       	ldi	r25, 0x00	; 0
     f98:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
     f9c:	85 e0       	ldi	r24, 0x05	; 5
     f9e:	8a 95       	dec	r24
     fa0:	f1 f7       	brne	.-4      	; 0xf9e <DIODE_update_shift_regs_REAR+0x2e>
     fa2:	00 00       	nop
     fa4:	c8 e0       	ldi	r28, 0x08	; 8
	

	for (bit_number = 0; bit_number < 8; bit_number++)
	{
		// Output DATA value (bit 0 of "segments")
		if ((number1 & 1) == 0)
     fa6:	d0 fd       	sbrc	r29, 0
     fa8:	06 c0       	rjmp	.+12     	; 0xfb6 <DIODE_update_shift_regs_REAR+0x46>
		{
			GPIO_write_low(&PORTC,DATA_INPUT_REAR);
     faa:	63 e0       	ldi	r22, 0x03	; 3
     fac:	88 e2       	ldi	r24, 0x28	; 40
     fae:	90 e0       	ldi	r25, 0x00	; 0
     fb0:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
     fb4:	05 c0       	rjmp	.+10     	; 0xfc0 <DIODE_update_shift_regs_REAR+0x50>
		}
		else
		{
			GPIO_write_high(&PORTC, DATA_INPUT_REAR);
     fb6:	63 e0       	ldi	r22, 0x03	; 3
     fb8:	88 e2       	ldi	r24, 0x28	; 40
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     fc0:	85 e0       	ldi	r24, 0x05	; 5
     fc2:	8a 95       	dec	r24
     fc4:	f1 f7       	brne	.-4      	; 0xfc2 <DIODE_update_shift_regs_REAR+0x52>
     fc6:	00 00       	nop
		}

		// Wait 1 us
		_delay_us(1);
		// Pull CLK high
		GPIO_write_high(&PORTC,SEGMENT_CLK);
     fc8:	62 e0       	ldi	r22, 0x02	; 2
     fca:	88 e2       	ldi	r24, 0x28	; 40
     fcc:	90 e0       	ldi	r25, 0x00	; 0
     fce:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     fd2:	85 e0       	ldi	r24, 0x05	; 5
     fd4:	8a 95       	dec	r24
     fd6:	f1 f7       	brne	.-4      	; 0xfd4 <DIODE_update_shift_regs_REAR+0x64>
     fd8:	00 00       	nop
		// Wait 1 us
		_delay_us(1);
		// Pull CLK low
		GPIO_write_low(&PORTC,SEGMENT_CLK);
     fda:	62 e0       	ldi	r22, 0x02	; 2
     fdc:	88 e2       	ldi	r24, 0x28	; 40
     fde:	90 e0       	ldi	r25, 0x00	; 0
     fe0:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
		
		number1 = number1 >> 1;
     fe4:	d6 95       	lsr	r29
     fe6:	c1 50       	subi	r28, 0x01	; 1
	GPIO_write_low(&PORTC, SEGMENT_LATCH2);
	// Wait 1 us
	_delay_us(1);
	

	for (bit_number = 0; bit_number < 8; bit_number++)
     fe8:	f1 f6       	brne	.-68     	; 0xfa6 <DIODE_update_shift_regs_REAR+0x36>
		
	}
	
	
	// 	// Pull LATCH high
	GPIO_write_high(&PORTC,SEGMENT_LATCH2);
     fea:	64 e0       	ldi	r22, 0x04	; 4
     fec:	88 e2       	ldi	r24, 0x28	; 40
     fee:	90 e0       	ldi	r25, 0x00	; 0
     ff0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     ff4:	85 e0       	ldi	r24, 0x05	; 5
     ff6:	8a 95       	dec	r24
     ff8:	f1 f7       	brne	.-4      	; 0xff6 <DIODE_update_shift_regs_REAR+0x86>
     ffa:	00 00       	nop

	// Wait 1 us
	_delay_us(1);

}
     ffc:	df 91       	pop	r29
     ffe:	cf 91       	pop	r28
    1000:	08 95       	ret

00001002 <__vector_18>:
    1002:	1f 92       	push	r1
    1004:	0f 92       	push	r0
    1006:	0f b6       	in	r0, 0x3f	; 63
    1008:	0f 92       	push	r0
    100a:	11 24       	eor	r1, r1
    100c:	2f 93       	push	r18
    100e:	8f 93       	push	r24
    1010:	9f 93       	push	r25
    1012:	ef 93       	push	r30
    1014:	ff 93       	push	r31
    1016:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    101a:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    101e:	8c 71       	andi	r24, 0x1C	; 28
    1020:	e0 91 89 01 	lds	r30, 0x0189	; 0x800189 <UART_RxHead>
    1024:	ef 5f       	subi	r30, 0xFF	; 255
    1026:	ef 71       	andi	r30, 0x1F	; 31
    1028:	90 91 88 01 	lds	r25, 0x0188	; 0x800188 <UART_RxTail>
    102c:	e9 17       	cp	r30, r25
    102e:	39 f0       	breq	.+14     	; 0x103e <__vector_18+0x3c>
    1030:	e0 93 89 01 	sts	0x0189, r30	; 0x800189 <UART_RxHead>
    1034:	f0 e0       	ldi	r31, 0x00	; 0
    1036:	e4 57       	subi	r30, 0x74	; 116
    1038:	fe 4f       	sbci	r31, 0xFE	; 254
    103a:	20 83       	st	Z, r18
    103c:	01 c0       	rjmp	.+2      	; 0x1040 <__vector_18+0x3e>
    103e:	82 e0       	ldi	r24, 0x02	; 2
    1040:	90 91 87 01 	lds	r25, 0x0187	; 0x800187 <UART_LastRxError>
    1044:	89 2b       	or	r24, r25
    1046:	80 93 87 01 	sts	0x0187, r24	; 0x800187 <UART_LastRxError>
    104a:	ff 91       	pop	r31
    104c:	ef 91       	pop	r30
    104e:	9f 91       	pop	r25
    1050:	8f 91       	pop	r24
    1052:	2f 91       	pop	r18
    1054:	0f 90       	pop	r0
    1056:	0f be       	out	0x3f, r0	; 63
    1058:	0f 90       	pop	r0
    105a:	1f 90       	pop	r1
    105c:	18 95       	reti

0000105e <__vector_19>:
    105e:	1f 92       	push	r1
    1060:	0f 92       	push	r0
    1062:	0f b6       	in	r0, 0x3f	; 63
    1064:	0f 92       	push	r0
    1066:	11 24       	eor	r1, r1
    1068:	8f 93       	push	r24
    106a:	9f 93       	push	r25
    106c:	ef 93       	push	r30
    106e:	ff 93       	push	r31
    1070:	90 91 8b 01 	lds	r25, 0x018B	; 0x80018b <UART_TxHead>
    1074:	80 91 8a 01 	lds	r24, 0x018A	; 0x80018a <UART_TxTail>
    1078:	98 17       	cp	r25, r24
    107a:	69 f0       	breq	.+26     	; 0x1096 <__vector_19+0x38>
    107c:	e0 91 8a 01 	lds	r30, 0x018A	; 0x80018a <UART_TxTail>
    1080:	ef 5f       	subi	r30, 0xFF	; 255
    1082:	ef 71       	andi	r30, 0x1F	; 31
    1084:	e0 93 8a 01 	sts	0x018A, r30	; 0x80018a <UART_TxTail>
    1088:	f0 e0       	ldi	r31, 0x00	; 0
    108a:	e4 55       	subi	r30, 0x54	; 84
    108c:	fe 4f       	sbci	r31, 0xFE	; 254
    108e:	80 81       	ld	r24, Z
    1090:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1094:	05 c0       	rjmp	.+10     	; 0x10a0 <__vector_19+0x42>
    1096:	e1 ec       	ldi	r30, 0xC1	; 193
    1098:	f0 e0       	ldi	r31, 0x00	; 0
    109a:	80 81       	ld	r24, Z
    109c:	8f 7d       	andi	r24, 0xDF	; 223
    109e:	80 83       	st	Z, r24
    10a0:	ff 91       	pop	r31
    10a2:	ef 91       	pop	r30
    10a4:	9f 91       	pop	r25
    10a6:	8f 91       	pop	r24
    10a8:	0f 90       	pop	r0
    10aa:	0f be       	out	0x3f, r0	; 63
    10ac:	0f 90       	pop	r0
    10ae:	1f 90       	pop	r1
    10b0:	18 95       	reti

000010b2 <uart_init>:
    10b2:	10 92 8b 01 	sts	0x018B, r1	; 0x80018b <UART_TxHead>
    10b6:	10 92 8a 01 	sts	0x018A, r1	; 0x80018a <UART_TxTail>
    10ba:	10 92 89 01 	sts	0x0189, r1	; 0x800189 <UART_RxHead>
    10be:	10 92 88 01 	sts	0x0188, r1	; 0x800188 <UART_RxTail>
    10c2:	99 23       	and	r25, r25
    10c4:	1c f4       	brge	.+6      	; 0x10cc <uart_init+0x1a>
    10c6:	22 e0       	ldi	r18, 0x02	; 2
    10c8:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    10cc:	90 78       	andi	r25, 0x80	; 128
    10ce:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    10d2:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    10d6:	88 e9       	ldi	r24, 0x98	; 152
    10d8:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    10dc:	86 e0       	ldi	r24, 0x06	; 6
    10de:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
    10e2:	08 95       	ret

000010e4 <uart_putc>:
    10e4:	20 91 8b 01 	lds	r18, 0x018B	; 0x80018b <UART_TxHead>
    10e8:	2f 5f       	subi	r18, 0xFF	; 255
    10ea:	2f 71       	andi	r18, 0x1F	; 31
    10ec:	90 91 8a 01 	lds	r25, 0x018A	; 0x80018a <UART_TxTail>
    10f0:	29 17       	cp	r18, r25
    10f2:	e1 f3       	breq	.-8      	; 0x10ec <uart_putc+0x8>
    10f4:	e2 2f       	mov	r30, r18
    10f6:	f0 e0       	ldi	r31, 0x00	; 0
    10f8:	e4 55       	subi	r30, 0x54	; 84
    10fa:	fe 4f       	sbci	r31, 0xFE	; 254
    10fc:	80 83       	st	Z, r24
    10fe:	20 93 8b 01 	sts	0x018B, r18	; 0x80018b <UART_TxHead>
    1102:	e1 ec       	ldi	r30, 0xC1	; 193
    1104:	f0 e0       	ldi	r31, 0x00	; 0
    1106:	80 81       	ld	r24, Z
    1108:	80 62       	ori	r24, 0x20	; 32
    110a:	80 83       	st	Z, r24
    110c:	08 95       	ret

0000110e <uart_puts>:
    110e:	cf 93       	push	r28
    1110:	df 93       	push	r29
    1112:	ec 01       	movw	r28, r24
    1114:	88 81       	ld	r24, Y
    1116:	88 23       	and	r24, r24
    1118:	31 f0       	breq	.+12     	; 0x1126 <uart_puts+0x18>
    111a:	21 96       	adiw	r28, 0x01	; 1
    111c:	0e 94 72 08 	call	0x10e4	; 0x10e4 <uart_putc>
    1120:	89 91       	ld	r24, Y+
    1122:	81 11       	cpse	r24, r1
    1124:	fb cf       	rjmp	.-10     	; 0x111c <uart_puts+0xe>
    1126:	df 91       	pop	r29
    1128:	cf 91       	pop	r28
    112a:	08 95       	ret

0000112c <__subsf3>:
    112c:	50 58       	subi	r21, 0x80	; 128

0000112e <__addsf3>:
    112e:	bb 27       	eor	r27, r27
    1130:	aa 27       	eor	r26, r26
    1132:	0e 94 ae 08 	call	0x115c	; 0x115c <__addsf3x>
    1136:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__fp_round>
    113a:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__fp_pscA>
    113e:	38 f0       	brcs	.+14     	; 0x114e <__addsf3+0x20>
    1140:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__fp_pscB>
    1144:	20 f0       	brcs	.+8      	; 0x114e <__addsf3+0x20>
    1146:	39 f4       	brne	.+14     	; 0x1156 <__addsf3+0x28>
    1148:	9f 3f       	cpi	r25, 0xFF	; 255
    114a:	19 f4       	brne	.+6      	; 0x1152 <__addsf3+0x24>
    114c:	26 f4       	brtc	.+8      	; 0x1156 <__addsf3+0x28>
    114e:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__fp_nan>
    1152:	0e f4       	brtc	.+2      	; 0x1156 <__addsf3+0x28>
    1154:	e0 95       	com	r30
    1156:	e7 fb       	bst	r30, 7
    1158:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_inf>

0000115c <__addsf3x>:
    115c:	e9 2f       	mov	r30, r25
    115e:	0e 94 03 0a 	call	0x1406	; 0x1406 <__fp_split3>
    1162:	58 f3       	brcs	.-42     	; 0x113a <__addsf3+0xc>
    1164:	ba 17       	cp	r27, r26
    1166:	62 07       	cpc	r22, r18
    1168:	73 07       	cpc	r23, r19
    116a:	84 07       	cpc	r24, r20
    116c:	95 07       	cpc	r25, r21
    116e:	20 f0       	brcs	.+8      	; 0x1178 <__addsf3x+0x1c>
    1170:	79 f4       	brne	.+30     	; 0x1190 <__addsf3x+0x34>
    1172:	a6 f5       	brtc	.+104    	; 0x11dc <__addsf3x+0x80>
    1174:	0c 94 25 0a 	jmp	0x144a	; 0x144a <__fp_zero>
    1178:	0e f4       	brtc	.+2      	; 0x117c <__addsf3x+0x20>
    117a:	e0 95       	com	r30
    117c:	0b 2e       	mov	r0, r27
    117e:	ba 2f       	mov	r27, r26
    1180:	a0 2d       	mov	r26, r0
    1182:	0b 01       	movw	r0, r22
    1184:	b9 01       	movw	r22, r18
    1186:	90 01       	movw	r18, r0
    1188:	0c 01       	movw	r0, r24
    118a:	ca 01       	movw	r24, r20
    118c:	a0 01       	movw	r20, r0
    118e:	11 24       	eor	r1, r1
    1190:	ff 27       	eor	r31, r31
    1192:	59 1b       	sub	r21, r25
    1194:	99 f0       	breq	.+38     	; 0x11bc <__addsf3x+0x60>
    1196:	59 3f       	cpi	r21, 0xF9	; 249
    1198:	50 f4       	brcc	.+20     	; 0x11ae <__addsf3x+0x52>
    119a:	50 3e       	cpi	r21, 0xE0	; 224
    119c:	68 f1       	brcs	.+90     	; 0x11f8 <__addsf3x+0x9c>
    119e:	1a 16       	cp	r1, r26
    11a0:	f0 40       	sbci	r31, 0x00	; 0
    11a2:	a2 2f       	mov	r26, r18
    11a4:	23 2f       	mov	r18, r19
    11a6:	34 2f       	mov	r19, r20
    11a8:	44 27       	eor	r20, r20
    11aa:	58 5f       	subi	r21, 0xF8	; 248
    11ac:	f3 cf       	rjmp	.-26     	; 0x1194 <__addsf3x+0x38>
    11ae:	46 95       	lsr	r20
    11b0:	37 95       	ror	r19
    11b2:	27 95       	ror	r18
    11b4:	a7 95       	ror	r26
    11b6:	f0 40       	sbci	r31, 0x00	; 0
    11b8:	53 95       	inc	r21
    11ba:	c9 f7       	brne	.-14     	; 0x11ae <__addsf3x+0x52>
    11bc:	7e f4       	brtc	.+30     	; 0x11dc <__addsf3x+0x80>
    11be:	1f 16       	cp	r1, r31
    11c0:	ba 0b       	sbc	r27, r26
    11c2:	62 0b       	sbc	r22, r18
    11c4:	73 0b       	sbc	r23, r19
    11c6:	84 0b       	sbc	r24, r20
    11c8:	ba f0       	brmi	.+46     	; 0x11f8 <__addsf3x+0x9c>
    11ca:	91 50       	subi	r25, 0x01	; 1
    11cc:	a1 f0       	breq	.+40     	; 0x11f6 <__addsf3x+0x9a>
    11ce:	ff 0f       	add	r31, r31
    11d0:	bb 1f       	adc	r27, r27
    11d2:	66 1f       	adc	r22, r22
    11d4:	77 1f       	adc	r23, r23
    11d6:	88 1f       	adc	r24, r24
    11d8:	c2 f7       	brpl	.-16     	; 0x11ca <__addsf3x+0x6e>
    11da:	0e c0       	rjmp	.+28     	; 0x11f8 <__addsf3x+0x9c>
    11dc:	ba 0f       	add	r27, r26
    11de:	62 1f       	adc	r22, r18
    11e0:	73 1f       	adc	r23, r19
    11e2:	84 1f       	adc	r24, r20
    11e4:	48 f4       	brcc	.+18     	; 0x11f8 <__addsf3x+0x9c>
    11e6:	87 95       	ror	r24
    11e8:	77 95       	ror	r23
    11ea:	67 95       	ror	r22
    11ec:	b7 95       	ror	r27
    11ee:	f7 95       	ror	r31
    11f0:	9e 3f       	cpi	r25, 0xFE	; 254
    11f2:	08 f0       	brcs	.+2      	; 0x11f6 <__addsf3x+0x9a>
    11f4:	b0 cf       	rjmp	.-160    	; 0x1156 <__addsf3+0x28>
    11f6:	93 95       	inc	r25
    11f8:	88 0f       	add	r24, r24
    11fa:	08 f0       	brcs	.+2      	; 0x11fe <__addsf3x+0xa2>
    11fc:	99 27       	eor	r25, r25
    11fe:	ee 0f       	add	r30, r30
    1200:	97 95       	ror	r25
    1202:	87 95       	ror	r24
    1204:	08 95       	ret

00001206 <__cmpsf2>:
    1206:	0e 94 b7 09 	call	0x136e	; 0x136e <__fp_cmp>
    120a:	08 f4       	brcc	.+2      	; 0x120e <__cmpsf2+0x8>
    120c:	81 e0       	ldi	r24, 0x01	; 1
    120e:	08 95       	ret

00001210 <__divsf3>:
    1210:	0e 94 1c 09 	call	0x1238	; 0x1238 <__divsf3x>
    1214:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__fp_round>
    1218:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__fp_pscB>
    121c:	58 f0       	brcs	.+22     	; 0x1234 <__divsf3+0x24>
    121e:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__fp_pscA>
    1222:	40 f0       	brcs	.+16     	; 0x1234 <__divsf3+0x24>
    1224:	29 f4       	brne	.+10     	; 0x1230 <__divsf3+0x20>
    1226:	5f 3f       	cpi	r21, 0xFF	; 255
    1228:	29 f0       	breq	.+10     	; 0x1234 <__divsf3+0x24>
    122a:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_inf>
    122e:	51 11       	cpse	r21, r1
    1230:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__fp_szero>
    1234:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__fp_nan>

00001238 <__divsf3x>:
    1238:	0e 94 03 0a 	call	0x1406	; 0x1406 <__fp_split3>
    123c:	68 f3       	brcs	.-38     	; 0x1218 <__divsf3+0x8>

0000123e <__divsf3_pse>:
    123e:	99 23       	and	r25, r25
    1240:	b1 f3       	breq	.-20     	; 0x122e <__divsf3+0x1e>
    1242:	55 23       	and	r21, r21
    1244:	91 f3       	breq	.-28     	; 0x122a <__divsf3+0x1a>
    1246:	95 1b       	sub	r25, r21
    1248:	55 0b       	sbc	r21, r21
    124a:	bb 27       	eor	r27, r27
    124c:	aa 27       	eor	r26, r26
    124e:	62 17       	cp	r22, r18
    1250:	73 07       	cpc	r23, r19
    1252:	84 07       	cpc	r24, r20
    1254:	38 f0       	brcs	.+14     	; 0x1264 <__divsf3_pse+0x26>
    1256:	9f 5f       	subi	r25, 0xFF	; 255
    1258:	5f 4f       	sbci	r21, 0xFF	; 255
    125a:	22 0f       	add	r18, r18
    125c:	33 1f       	adc	r19, r19
    125e:	44 1f       	adc	r20, r20
    1260:	aa 1f       	adc	r26, r26
    1262:	a9 f3       	breq	.-22     	; 0x124e <__divsf3_pse+0x10>
    1264:	35 d0       	rcall	.+106    	; 0x12d0 <__divsf3_pse+0x92>
    1266:	0e 2e       	mov	r0, r30
    1268:	3a f0       	brmi	.+14     	; 0x1278 <__divsf3_pse+0x3a>
    126a:	e0 e8       	ldi	r30, 0x80	; 128
    126c:	32 d0       	rcall	.+100    	; 0x12d2 <__divsf3_pse+0x94>
    126e:	91 50       	subi	r25, 0x01	; 1
    1270:	50 40       	sbci	r21, 0x00	; 0
    1272:	e6 95       	lsr	r30
    1274:	00 1c       	adc	r0, r0
    1276:	ca f7       	brpl	.-14     	; 0x126a <__divsf3_pse+0x2c>
    1278:	2b d0       	rcall	.+86     	; 0x12d0 <__divsf3_pse+0x92>
    127a:	fe 2f       	mov	r31, r30
    127c:	29 d0       	rcall	.+82     	; 0x12d0 <__divsf3_pse+0x92>
    127e:	66 0f       	add	r22, r22
    1280:	77 1f       	adc	r23, r23
    1282:	88 1f       	adc	r24, r24
    1284:	bb 1f       	adc	r27, r27
    1286:	26 17       	cp	r18, r22
    1288:	37 07       	cpc	r19, r23
    128a:	48 07       	cpc	r20, r24
    128c:	ab 07       	cpc	r26, r27
    128e:	b0 e8       	ldi	r27, 0x80	; 128
    1290:	09 f0       	breq	.+2      	; 0x1294 <__divsf3_pse+0x56>
    1292:	bb 0b       	sbc	r27, r27
    1294:	80 2d       	mov	r24, r0
    1296:	bf 01       	movw	r22, r30
    1298:	ff 27       	eor	r31, r31
    129a:	93 58       	subi	r25, 0x83	; 131
    129c:	5f 4f       	sbci	r21, 0xFF	; 255
    129e:	3a f0       	brmi	.+14     	; 0x12ae <__divsf3_pse+0x70>
    12a0:	9e 3f       	cpi	r25, 0xFE	; 254
    12a2:	51 05       	cpc	r21, r1
    12a4:	78 f0       	brcs	.+30     	; 0x12c4 <__divsf3_pse+0x86>
    12a6:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_inf>
    12aa:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__fp_szero>
    12ae:	5f 3f       	cpi	r21, 0xFF	; 255
    12b0:	e4 f3       	brlt	.-8      	; 0x12aa <__divsf3_pse+0x6c>
    12b2:	98 3e       	cpi	r25, 0xE8	; 232
    12b4:	d4 f3       	brlt	.-12     	; 0x12aa <__divsf3_pse+0x6c>
    12b6:	86 95       	lsr	r24
    12b8:	77 95       	ror	r23
    12ba:	67 95       	ror	r22
    12bc:	b7 95       	ror	r27
    12be:	f7 95       	ror	r31
    12c0:	9f 5f       	subi	r25, 0xFF	; 255
    12c2:	c9 f7       	brne	.-14     	; 0x12b6 <__divsf3_pse+0x78>
    12c4:	88 0f       	add	r24, r24
    12c6:	91 1d       	adc	r25, r1
    12c8:	96 95       	lsr	r25
    12ca:	87 95       	ror	r24
    12cc:	97 f9       	bld	r25, 7
    12ce:	08 95       	ret
    12d0:	e1 e0       	ldi	r30, 0x01	; 1
    12d2:	66 0f       	add	r22, r22
    12d4:	77 1f       	adc	r23, r23
    12d6:	88 1f       	adc	r24, r24
    12d8:	bb 1f       	adc	r27, r27
    12da:	62 17       	cp	r22, r18
    12dc:	73 07       	cpc	r23, r19
    12de:	84 07       	cpc	r24, r20
    12e0:	ba 07       	cpc	r27, r26
    12e2:	20 f0       	brcs	.+8      	; 0x12ec <__divsf3_pse+0xae>
    12e4:	62 1b       	sub	r22, r18
    12e6:	73 0b       	sbc	r23, r19
    12e8:	84 0b       	sbc	r24, r20
    12ea:	ba 0b       	sbc	r27, r26
    12ec:	ee 1f       	adc	r30, r30
    12ee:	88 f7       	brcc	.-30     	; 0x12d2 <__divsf3_pse+0x94>
    12f0:	e0 95       	com	r30
    12f2:	08 95       	ret

000012f4 <__floatunsisf>:
    12f4:	e8 94       	clt
    12f6:	09 c0       	rjmp	.+18     	; 0x130a <__floatsisf+0x12>

000012f8 <__floatsisf>:
    12f8:	97 fb       	bst	r25, 7
    12fa:	3e f4       	brtc	.+14     	; 0x130a <__floatsisf+0x12>
    12fc:	90 95       	com	r25
    12fe:	80 95       	com	r24
    1300:	70 95       	com	r23
    1302:	61 95       	neg	r22
    1304:	7f 4f       	sbci	r23, 0xFF	; 255
    1306:	8f 4f       	sbci	r24, 0xFF	; 255
    1308:	9f 4f       	sbci	r25, 0xFF	; 255
    130a:	99 23       	and	r25, r25
    130c:	a9 f0       	breq	.+42     	; 0x1338 <__floatsisf+0x40>
    130e:	f9 2f       	mov	r31, r25
    1310:	96 e9       	ldi	r25, 0x96	; 150
    1312:	bb 27       	eor	r27, r27
    1314:	93 95       	inc	r25
    1316:	f6 95       	lsr	r31
    1318:	87 95       	ror	r24
    131a:	77 95       	ror	r23
    131c:	67 95       	ror	r22
    131e:	b7 95       	ror	r27
    1320:	f1 11       	cpse	r31, r1
    1322:	f8 cf       	rjmp	.-16     	; 0x1314 <__floatsisf+0x1c>
    1324:	fa f4       	brpl	.+62     	; 0x1364 <__floatsisf+0x6c>
    1326:	bb 0f       	add	r27, r27
    1328:	11 f4       	brne	.+4      	; 0x132e <__floatsisf+0x36>
    132a:	60 ff       	sbrs	r22, 0
    132c:	1b c0       	rjmp	.+54     	; 0x1364 <__floatsisf+0x6c>
    132e:	6f 5f       	subi	r22, 0xFF	; 255
    1330:	7f 4f       	sbci	r23, 0xFF	; 255
    1332:	8f 4f       	sbci	r24, 0xFF	; 255
    1334:	9f 4f       	sbci	r25, 0xFF	; 255
    1336:	16 c0       	rjmp	.+44     	; 0x1364 <__floatsisf+0x6c>
    1338:	88 23       	and	r24, r24
    133a:	11 f0       	breq	.+4      	; 0x1340 <__floatsisf+0x48>
    133c:	96 e9       	ldi	r25, 0x96	; 150
    133e:	11 c0       	rjmp	.+34     	; 0x1362 <__floatsisf+0x6a>
    1340:	77 23       	and	r23, r23
    1342:	21 f0       	breq	.+8      	; 0x134c <__floatsisf+0x54>
    1344:	9e e8       	ldi	r25, 0x8E	; 142
    1346:	87 2f       	mov	r24, r23
    1348:	76 2f       	mov	r23, r22
    134a:	05 c0       	rjmp	.+10     	; 0x1356 <__floatsisf+0x5e>
    134c:	66 23       	and	r22, r22
    134e:	71 f0       	breq	.+28     	; 0x136c <__floatsisf+0x74>
    1350:	96 e8       	ldi	r25, 0x86	; 134
    1352:	86 2f       	mov	r24, r22
    1354:	70 e0       	ldi	r23, 0x00	; 0
    1356:	60 e0       	ldi	r22, 0x00	; 0
    1358:	2a f0       	brmi	.+10     	; 0x1364 <__floatsisf+0x6c>
    135a:	9a 95       	dec	r25
    135c:	66 0f       	add	r22, r22
    135e:	77 1f       	adc	r23, r23
    1360:	88 1f       	adc	r24, r24
    1362:	da f7       	brpl	.-10     	; 0x135a <__floatsisf+0x62>
    1364:	88 0f       	add	r24, r24
    1366:	96 95       	lsr	r25
    1368:	87 95       	ror	r24
    136a:	97 f9       	bld	r25, 7
    136c:	08 95       	ret

0000136e <__fp_cmp>:
    136e:	99 0f       	add	r25, r25
    1370:	00 08       	sbc	r0, r0
    1372:	55 0f       	add	r21, r21
    1374:	aa 0b       	sbc	r26, r26
    1376:	e0 e8       	ldi	r30, 0x80	; 128
    1378:	fe ef       	ldi	r31, 0xFE	; 254
    137a:	16 16       	cp	r1, r22
    137c:	17 06       	cpc	r1, r23
    137e:	e8 07       	cpc	r30, r24
    1380:	f9 07       	cpc	r31, r25
    1382:	c0 f0       	brcs	.+48     	; 0x13b4 <__fp_cmp+0x46>
    1384:	12 16       	cp	r1, r18
    1386:	13 06       	cpc	r1, r19
    1388:	e4 07       	cpc	r30, r20
    138a:	f5 07       	cpc	r31, r21
    138c:	98 f0       	brcs	.+38     	; 0x13b4 <__fp_cmp+0x46>
    138e:	62 1b       	sub	r22, r18
    1390:	73 0b       	sbc	r23, r19
    1392:	84 0b       	sbc	r24, r20
    1394:	95 0b       	sbc	r25, r21
    1396:	39 f4       	brne	.+14     	; 0x13a6 <__fp_cmp+0x38>
    1398:	0a 26       	eor	r0, r26
    139a:	61 f0       	breq	.+24     	; 0x13b4 <__fp_cmp+0x46>
    139c:	23 2b       	or	r18, r19
    139e:	24 2b       	or	r18, r20
    13a0:	25 2b       	or	r18, r21
    13a2:	21 f4       	brne	.+8      	; 0x13ac <__fp_cmp+0x3e>
    13a4:	08 95       	ret
    13a6:	0a 26       	eor	r0, r26
    13a8:	09 f4       	brne	.+2      	; 0x13ac <__fp_cmp+0x3e>
    13aa:	a1 40       	sbci	r26, 0x01	; 1
    13ac:	a6 95       	lsr	r26
    13ae:	8f ef       	ldi	r24, 0xFF	; 255
    13b0:	81 1d       	adc	r24, r1
    13b2:	81 1d       	adc	r24, r1
    13b4:	08 95       	ret

000013b6 <__fp_inf>:
    13b6:	97 f9       	bld	r25, 7
    13b8:	9f 67       	ori	r25, 0x7F	; 127
    13ba:	80 e8       	ldi	r24, 0x80	; 128
    13bc:	70 e0       	ldi	r23, 0x00	; 0
    13be:	60 e0       	ldi	r22, 0x00	; 0
    13c0:	08 95       	ret

000013c2 <__fp_nan>:
    13c2:	9f ef       	ldi	r25, 0xFF	; 255
    13c4:	80 ec       	ldi	r24, 0xC0	; 192
    13c6:	08 95       	ret

000013c8 <__fp_pscA>:
    13c8:	00 24       	eor	r0, r0
    13ca:	0a 94       	dec	r0
    13cc:	16 16       	cp	r1, r22
    13ce:	17 06       	cpc	r1, r23
    13d0:	18 06       	cpc	r1, r24
    13d2:	09 06       	cpc	r0, r25
    13d4:	08 95       	ret

000013d6 <__fp_pscB>:
    13d6:	00 24       	eor	r0, r0
    13d8:	0a 94       	dec	r0
    13da:	12 16       	cp	r1, r18
    13dc:	13 06       	cpc	r1, r19
    13de:	14 06       	cpc	r1, r20
    13e0:	05 06       	cpc	r0, r21
    13e2:	08 95       	ret

000013e4 <__fp_round>:
    13e4:	09 2e       	mov	r0, r25
    13e6:	03 94       	inc	r0
    13e8:	00 0c       	add	r0, r0
    13ea:	11 f4       	brne	.+4      	; 0x13f0 <__fp_round+0xc>
    13ec:	88 23       	and	r24, r24
    13ee:	52 f0       	brmi	.+20     	; 0x1404 <__fp_round+0x20>
    13f0:	bb 0f       	add	r27, r27
    13f2:	40 f4       	brcc	.+16     	; 0x1404 <__fp_round+0x20>
    13f4:	bf 2b       	or	r27, r31
    13f6:	11 f4       	brne	.+4      	; 0x13fc <__fp_round+0x18>
    13f8:	60 ff       	sbrs	r22, 0
    13fa:	04 c0       	rjmp	.+8      	; 0x1404 <__fp_round+0x20>
    13fc:	6f 5f       	subi	r22, 0xFF	; 255
    13fe:	7f 4f       	sbci	r23, 0xFF	; 255
    1400:	8f 4f       	sbci	r24, 0xFF	; 255
    1402:	9f 4f       	sbci	r25, 0xFF	; 255
    1404:	08 95       	ret

00001406 <__fp_split3>:
    1406:	57 fd       	sbrc	r21, 7
    1408:	90 58       	subi	r25, 0x80	; 128
    140a:	44 0f       	add	r20, r20
    140c:	55 1f       	adc	r21, r21
    140e:	59 f0       	breq	.+22     	; 0x1426 <__fp_splitA+0x10>
    1410:	5f 3f       	cpi	r21, 0xFF	; 255
    1412:	71 f0       	breq	.+28     	; 0x1430 <__fp_splitA+0x1a>
    1414:	47 95       	ror	r20

00001416 <__fp_splitA>:
    1416:	88 0f       	add	r24, r24
    1418:	97 fb       	bst	r25, 7
    141a:	99 1f       	adc	r25, r25
    141c:	61 f0       	breq	.+24     	; 0x1436 <__fp_splitA+0x20>
    141e:	9f 3f       	cpi	r25, 0xFF	; 255
    1420:	79 f0       	breq	.+30     	; 0x1440 <__fp_splitA+0x2a>
    1422:	87 95       	ror	r24
    1424:	08 95       	ret
    1426:	12 16       	cp	r1, r18
    1428:	13 06       	cpc	r1, r19
    142a:	14 06       	cpc	r1, r20
    142c:	55 1f       	adc	r21, r21
    142e:	f2 cf       	rjmp	.-28     	; 0x1414 <__fp_split3+0xe>
    1430:	46 95       	lsr	r20
    1432:	f1 df       	rcall	.-30     	; 0x1416 <__fp_splitA>
    1434:	08 c0       	rjmp	.+16     	; 0x1446 <__fp_splitA+0x30>
    1436:	16 16       	cp	r1, r22
    1438:	17 06       	cpc	r1, r23
    143a:	18 06       	cpc	r1, r24
    143c:	99 1f       	adc	r25, r25
    143e:	f1 cf       	rjmp	.-30     	; 0x1422 <__fp_splitA+0xc>
    1440:	86 95       	lsr	r24
    1442:	71 05       	cpc	r23, r1
    1444:	61 05       	cpc	r22, r1
    1446:	08 94       	sec
    1448:	08 95       	ret

0000144a <__fp_zero>:
    144a:	e8 94       	clt

0000144c <__fp_szero>:
    144c:	bb 27       	eor	r27, r27
    144e:	66 27       	eor	r22, r22
    1450:	77 27       	eor	r23, r23
    1452:	cb 01       	movw	r24, r22
    1454:	97 f9       	bld	r25, 7
    1456:	08 95       	ret

00001458 <__gesf2>:
    1458:	0e 94 b7 09 	call	0x136e	; 0x136e <__fp_cmp>
    145c:	08 f4       	brcc	.+2      	; 0x1460 <__gesf2+0x8>
    145e:	8f ef       	ldi	r24, 0xFF	; 255
    1460:	08 95       	ret

00001462 <__mulsf3>:
    1462:	0e 94 44 0a 	call	0x1488	; 0x1488 <__mulsf3x>
    1466:	0c 94 f2 09 	jmp	0x13e4	; 0x13e4 <__fp_round>
    146a:	0e 94 e4 09 	call	0x13c8	; 0x13c8 <__fp_pscA>
    146e:	38 f0       	brcs	.+14     	; 0x147e <__mulsf3+0x1c>
    1470:	0e 94 eb 09 	call	0x13d6	; 0x13d6 <__fp_pscB>
    1474:	20 f0       	brcs	.+8      	; 0x147e <__mulsf3+0x1c>
    1476:	95 23       	and	r25, r21
    1478:	11 f0       	breq	.+4      	; 0x147e <__mulsf3+0x1c>
    147a:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_inf>
    147e:	0c 94 e1 09 	jmp	0x13c2	; 0x13c2 <__fp_nan>
    1482:	11 24       	eor	r1, r1
    1484:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__fp_szero>

00001488 <__mulsf3x>:
    1488:	0e 94 03 0a 	call	0x1406	; 0x1406 <__fp_split3>
    148c:	70 f3       	brcs	.-36     	; 0x146a <__mulsf3+0x8>

0000148e <__mulsf3_pse>:
    148e:	95 9f       	mul	r25, r21
    1490:	c1 f3       	breq	.-16     	; 0x1482 <__mulsf3+0x20>
    1492:	95 0f       	add	r25, r21
    1494:	50 e0       	ldi	r21, 0x00	; 0
    1496:	55 1f       	adc	r21, r21
    1498:	62 9f       	mul	r22, r18
    149a:	f0 01       	movw	r30, r0
    149c:	72 9f       	mul	r23, r18
    149e:	bb 27       	eor	r27, r27
    14a0:	f0 0d       	add	r31, r0
    14a2:	b1 1d       	adc	r27, r1
    14a4:	63 9f       	mul	r22, r19
    14a6:	aa 27       	eor	r26, r26
    14a8:	f0 0d       	add	r31, r0
    14aa:	b1 1d       	adc	r27, r1
    14ac:	aa 1f       	adc	r26, r26
    14ae:	64 9f       	mul	r22, r20
    14b0:	66 27       	eor	r22, r22
    14b2:	b0 0d       	add	r27, r0
    14b4:	a1 1d       	adc	r26, r1
    14b6:	66 1f       	adc	r22, r22
    14b8:	82 9f       	mul	r24, r18
    14ba:	22 27       	eor	r18, r18
    14bc:	b0 0d       	add	r27, r0
    14be:	a1 1d       	adc	r26, r1
    14c0:	62 1f       	adc	r22, r18
    14c2:	73 9f       	mul	r23, r19
    14c4:	b0 0d       	add	r27, r0
    14c6:	a1 1d       	adc	r26, r1
    14c8:	62 1f       	adc	r22, r18
    14ca:	83 9f       	mul	r24, r19
    14cc:	a0 0d       	add	r26, r0
    14ce:	61 1d       	adc	r22, r1
    14d0:	22 1f       	adc	r18, r18
    14d2:	74 9f       	mul	r23, r20
    14d4:	33 27       	eor	r19, r19
    14d6:	a0 0d       	add	r26, r0
    14d8:	61 1d       	adc	r22, r1
    14da:	23 1f       	adc	r18, r19
    14dc:	84 9f       	mul	r24, r20
    14de:	60 0d       	add	r22, r0
    14e0:	21 1d       	adc	r18, r1
    14e2:	82 2f       	mov	r24, r18
    14e4:	76 2f       	mov	r23, r22
    14e6:	6a 2f       	mov	r22, r26
    14e8:	11 24       	eor	r1, r1
    14ea:	9f 57       	subi	r25, 0x7F	; 127
    14ec:	50 40       	sbci	r21, 0x00	; 0
    14ee:	9a f0       	brmi	.+38     	; 0x1516 <__mulsf3_pse+0x88>
    14f0:	f1 f0       	breq	.+60     	; 0x152e <__mulsf3_pse+0xa0>
    14f2:	88 23       	and	r24, r24
    14f4:	4a f0       	brmi	.+18     	; 0x1508 <__mulsf3_pse+0x7a>
    14f6:	ee 0f       	add	r30, r30
    14f8:	ff 1f       	adc	r31, r31
    14fa:	bb 1f       	adc	r27, r27
    14fc:	66 1f       	adc	r22, r22
    14fe:	77 1f       	adc	r23, r23
    1500:	88 1f       	adc	r24, r24
    1502:	91 50       	subi	r25, 0x01	; 1
    1504:	50 40       	sbci	r21, 0x00	; 0
    1506:	a9 f7       	brne	.-22     	; 0x14f2 <__mulsf3_pse+0x64>
    1508:	9e 3f       	cpi	r25, 0xFE	; 254
    150a:	51 05       	cpc	r21, r1
    150c:	80 f0       	brcs	.+32     	; 0x152e <__mulsf3_pse+0xa0>
    150e:	0c 94 db 09 	jmp	0x13b6	; 0x13b6 <__fp_inf>
    1512:	0c 94 26 0a 	jmp	0x144c	; 0x144c <__fp_szero>
    1516:	5f 3f       	cpi	r21, 0xFF	; 255
    1518:	e4 f3       	brlt	.-8      	; 0x1512 <__mulsf3_pse+0x84>
    151a:	98 3e       	cpi	r25, 0xE8	; 232
    151c:	d4 f3       	brlt	.-12     	; 0x1512 <__mulsf3_pse+0x84>
    151e:	86 95       	lsr	r24
    1520:	77 95       	ror	r23
    1522:	67 95       	ror	r22
    1524:	b7 95       	ror	r27
    1526:	f7 95       	ror	r31
    1528:	e7 95       	ror	r30
    152a:	9f 5f       	subi	r25, 0xFF	; 255
    152c:	c1 f7       	brne	.-16     	; 0x151e <__mulsf3_pse+0x90>
    152e:	fe 2b       	or	r31, r30
    1530:	88 0f       	add	r24, r24
    1532:	91 1d       	adc	r25, r1
    1534:	96 95       	lsr	r25
    1536:	87 95       	ror	r24
    1538:	97 f9       	bld	r25, 7
    153a:	08 95       	ret

0000153c <vfprintf>:
    153c:	a0 e1       	ldi	r26, 0x10	; 16
    153e:	b0 e0       	ldi	r27, 0x00	; 0
    1540:	e4 ea       	ldi	r30, 0xA4	; 164
    1542:	fa e0       	ldi	r31, 0x0A	; 10
    1544:	0c 94 1b 0e 	jmp	0x1c36	; 0x1c36 <__prologue_saves__>
    1548:	7c 01       	movw	r14, r24
    154a:	1b 01       	movw	r2, r22
    154c:	6a 01       	movw	r12, r20
    154e:	fc 01       	movw	r30, r24
    1550:	17 82       	std	Z+7, r1	; 0x07
    1552:	16 82       	std	Z+6, r1	; 0x06
    1554:	83 81       	ldd	r24, Z+3	; 0x03
    1556:	81 ff       	sbrs	r24, 1
    1558:	44 c3       	rjmp	.+1672   	; 0x1be2 <vfprintf+0x6a6>
    155a:	9e 01       	movw	r18, r28
    155c:	2f 5f       	subi	r18, 0xFF	; 255
    155e:	3f 4f       	sbci	r19, 0xFF	; 255
    1560:	39 01       	movw	r6, r18
    1562:	f7 01       	movw	r30, r14
    1564:	93 81       	ldd	r25, Z+3	; 0x03
    1566:	f1 01       	movw	r30, r2
    1568:	93 fd       	sbrc	r25, 3
    156a:	85 91       	lpm	r24, Z+
    156c:	93 ff       	sbrs	r25, 3
    156e:	81 91       	ld	r24, Z+
    1570:	1f 01       	movw	r2, r30
    1572:	88 23       	and	r24, r24
    1574:	09 f4       	brne	.+2      	; 0x1578 <vfprintf+0x3c>
    1576:	31 c3       	rjmp	.+1634   	; 0x1bda <vfprintf+0x69e>
    1578:	85 32       	cpi	r24, 0x25	; 37
    157a:	39 f4       	brne	.+14     	; 0x158a <vfprintf+0x4e>
    157c:	93 fd       	sbrc	r25, 3
    157e:	85 91       	lpm	r24, Z+
    1580:	93 ff       	sbrs	r25, 3
    1582:	81 91       	ld	r24, Z+
    1584:	1f 01       	movw	r2, r30
    1586:	85 32       	cpi	r24, 0x25	; 37
    1588:	39 f4       	brne	.+14     	; 0x1598 <vfprintf+0x5c>
    158a:	b7 01       	movw	r22, r14
    158c:	90 e0       	ldi	r25, 0x00	; 0
    158e:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1592:	56 01       	movw	r10, r12
    1594:	65 01       	movw	r12, r10
    1596:	e5 cf       	rjmp	.-54     	; 0x1562 <vfprintf+0x26>
    1598:	10 e0       	ldi	r17, 0x00	; 0
    159a:	51 2c       	mov	r5, r1
    159c:	91 2c       	mov	r9, r1
    159e:	ff e1       	ldi	r31, 0x1F	; 31
    15a0:	f9 15       	cp	r31, r9
    15a2:	d8 f0       	brcs	.+54     	; 0x15da <vfprintf+0x9e>
    15a4:	8b 32       	cpi	r24, 0x2B	; 43
    15a6:	79 f0       	breq	.+30     	; 0x15c6 <vfprintf+0x8a>
    15a8:	38 f4       	brcc	.+14     	; 0x15b8 <vfprintf+0x7c>
    15aa:	80 32       	cpi	r24, 0x20	; 32
    15ac:	79 f0       	breq	.+30     	; 0x15cc <vfprintf+0x90>
    15ae:	83 32       	cpi	r24, 0x23	; 35
    15b0:	a1 f4       	brne	.+40     	; 0x15da <vfprintf+0x9e>
    15b2:	f9 2d       	mov	r31, r9
    15b4:	f0 61       	ori	r31, 0x10	; 16
    15b6:	2e c0       	rjmp	.+92     	; 0x1614 <vfprintf+0xd8>
    15b8:	8d 32       	cpi	r24, 0x2D	; 45
    15ba:	61 f0       	breq	.+24     	; 0x15d4 <vfprintf+0x98>
    15bc:	80 33       	cpi	r24, 0x30	; 48
    15be:	69 f4       	brne	.+26     	; 0x15da <vfprintf+0x9e>
    15c0:	29 2d       	mov	r18, r9
    15c2:	21 60       	ori	r18, 0x01	; 1
    15c4:	2d c0       	rjmp	.+90     	; 0x1620 <vfprintf+0xe4>
    15c6:	39 2d       	mov	r19, r9
    15c8:	32 60       	ori	r19, 0x02	; 2
    15ca:	93 2e       	mov	r9, r19
    15cc:	89 2d       	mov	r24, r9
    15ce:	84 60       	ori	r24, 0x04	; 4
    15d0:	98 2e       	mov	r9, r24
    15d2:	2a c0       	rjmp	.+84     	; 0x1628 <vfprintf+0xec>
    15d4:	e9 2d       	mov	r30, r9
    15d6:	e8 60       	ori	r30, 0x08	; 8
    15d8:	15 c0       	rjmp	.+42     	; 0x1604 <vfprintf+0xc8>
    15da:	97 fc       	sbrc	r9, 7
    15dc:	2d c0       	rjmp	.+90     	; 0x1638 <vfprintf+0xfc>
    15de:	20 ed       	ldi	r18, 0xD0	; 208
    15e0:	28 0f       	add	r18, r24
    15e2:	2a 30       	cpi	r18, 0x0A	; 10
    15e4:	88 f4       	brcc	.+34     	; 0x1608 <vfprintf+0xcc>
    15e6:	96 fe       	sbrs	r9, 6
    15e8:	06 c0       	rjmp	.+12     	; 0x15f6 <vfprintf+0xba>
    15ea:	3a e0       	ldi	r19, 0x0A	; 10
    15ec:	13 9f       	mul	r17, r19
    15ee:	20 0d       	add	r18, r0
    15f0:	11 24       	eor	r1, r1
    15f2:	12 2f       	mov	r17, r18
    15f4:	19 c0       	rjmp	.+50     	; 0x1628 <vfprintf+0xec>
    15f6:	8a e0       	ldi	r24, 0x0A	; 10
    15f8:	58 9e       	mul	r5, r24
    15fa:	20 0d       	add	r18, r0
    15fc:	11 24       	eor	r1, r1
    15fe:	52 2e       	mov	r5, r18
    1600:	e9 2d       	mov	r30, r9
    1602:	e0 62       	ori	r30, 0x20	; 32
    1604:	9e 2e       	mov	r9, r30
    1606:	10 c0       	rjmp	.+32     	; 0x1628 <vfprintf+0xec>
    1608:	8e 32       	cpi	r24, 0x2E	; 46
    160a:	31 f4       	brne	.+12     	; 0x1618 <vfprintf+0xdc>
    160c:	96 fc       	sbrc	r9, 6
    160e:	e5 c2       	rjmp	.+1482   	; 0x1bda <vfprintf+0x69e>
    1610:	f9 2d       	mov	r31, r9
    1612:	f0 64       	ori	r31, 0x40	; 64
    1614:	9f 2e       	mov	r9, r31
    1616:	08 c0       	rjmp	.+16     	; 0x1628 <vfprintf+0xec>
    1618:	8c 36       	cpi	r24, 0x6C	; 108
    161a:	21 f4       	brne	.+8      	; 0x1624 <vfprintf+0xe8>
    161c:	29 2d       	mov	r18, r9
    161e:	20 68       	ori	r18, 0x80	; 128
    1620:	92 2e       	mov	r9, r18
    1622:	02 c0       	rjmp	.+4      	; 0x1628 <vfprintf+0xec>
    1624:	88 36       	cpi	r24, 0x68	; 104
    1626:	41 f4       	brne	.+16     	; 0x1638 <vfprintf+0xfc>
    1628:	f1 01       	movw	r30, r2
    162a:	93 fd       	sbrc	r25, 3
    162c:	85 91       	lpm	r24, Z+
    162e:	93 ff       	sbrs	r25, 3
    1630:	81 91       	ld	r24, Z+
    1632:	1f 01       	movw	r2, r30
    1634:	81 11       	cpse	r24, r1
    1636:	b3 cf       	rjmp	.-154    	; 0x159e <vfprintf+0x62>
    1638:	9b eb       	ldi	r25, 0xBB	; 187
    163a:	98 0f       	add	r25, r24
    163c:	93 30       	cpi	r25, 0x03	; 3
    163e:	20 f4       	brcc	.+8      	; 0x1648 <vfprintf+0x10c>
    1640:	99 2d       	mov	r25, r9
    1642:	90 61       	ori	r25, 0x10	; 16
    1644:	80 5e       	subi	r24, 0xE0	; 224
    1646:	07 c0       	rjmp	.+14     	; 0x1656 <vfprintf+0x11a>
    1648:	9b e9       	ldi	r25, 0x9B	; 155
    164a:	98 0f       	add	r25, r24
    164c:	93 30       	cpi	r25, 0x03	; 3
    164e:	08 f0       	brcs	.+2      	; 0x1652 <vfprintf+0x116>
    1650:	66 c1       	rjmp	.+716    	; 0x191e <vfprintf+0x3e2>
    1652:	99 2d       	mov	r25, r9
    1654:	9f 7e       	andi	r25, 0xEF	; 239
    1656:	96 ff       	sbrs	r25, 6
    1658:	16 e0       	ldi	r17, 0x06	; 6
    165a:	9f 73       	andi	r25, 0x3F	; 63
    165c:	99 2e       	mov	r9, r25
    165e:	85 36       	cpi	r24, 0x65	; 101
    1660:	19 f4       	brne	.+6      	; 0x1668 <vfprintf+0x12c>
    1662:	90 64       	ori	r25, 0x40	; 64
    1664:	99 2e       	mov	r9, r25
    1666:	08 c0       	rjmp	.+16     	; 0x1678 <vfprintf+0x13c>
    1668:	86 36       	cpi	r24, 0x66	; 102
    166a:	21 f4       	brne	.+8      	; 0x1674 <vfprintf+0x138>
    166c:	39 2f       	mov	r19, r25
    166e:	30 68       	ori	r19, 0x80	; 128
    1670:	93 2e       	mov	r9, r19
    1672:	02 c0       	rjmp	.+4      	; 0x1678 <vfprintf+0x13c>
    1674:	11 11       	cpse	r17, r1
    1676:	11 50       	subi	r17, 0x01	; 1
    1678:	97 fe       	sbrs	r9, 7
    167a:	07 c0       	rjmp	.+14     	; 0x168a <vfprintf+0x14e>
    167c:	1c 33       	cpi	r17, 0x3C	; 60
    167e:	50 f4       	brcc	.+20     	; 0x1694 <vfprintf+0x158>
    1680:	44 24       	eor	r4, r4
    1682:	43 94       	inc	r4
    1684:	41 0e       	add	r4, r17
    1686:	27 e0       	ldi	r18, 0x07	; 7
    1688:	0b c0       	rjmp	.+22     	; 0x16a0 <vfprintf+0x164>
    168a:	18 30       	cpi	r17, 0x08	; 8
    168c:	38 f0       	brcs	.+14     	; 0x169c <vfprintf+0x160>
    168e:	27 e0       	ldi	r18, 0x07	; 7
    1690:	17 e0       	ldi	r17, 0x07	; 7
    1692:	05 c0       	rjmp	.+10     	; 0x169e <vfprintf+0x162>
    1694:	27 e0       	ldi	r18, 0x07	; 7
    1696:	9c e3       	ldi	r25, 0x3C	; 60
    1698:	49 2e       	mov	r4, r25
    169a:	02 c0       	rjmp	.+4      	; 0x16a0 <vfprintf+0x164>
    169c:	21 2f       	mov	r18, r17
    169e:	41 2c       	mov	r4, r1
    16a0:	56 01       	movw	r10, r12
    16a2:	84 e0       	ldi	r24, 0x04	; 4
    16a4:	a8 0e       	add	r10, r24
    16a6:	b1 1c       	adc	r11, r1
    16a8:	f6 01       	movw	r30, r12
    16aa:	60 81       	ld	r22, Z
    16ac:	71 81       	ldd	r23, Z+1	; 0x01
    16ae:	82 81       	ldd	r24, Z+2	; 0x02
    16b0:	93 81       	ldd	r25, Z+3	; 0x03
    16b2:	04 2d       	mov	r16, r4
    16b4:	a3 01       	movw	r20, r6
    16b6:	0e 94 52 0e 	call	0x1ca4	; 0x1ca4 <__ftoa_engine>
    16ba:	6c 01       	movw	r12, r24
    16bc:	f9 81       	ldd	r31, Y+1	; 0x01
    16be:	fc 87       	std	Y+12, r31	; 0x0c
    16c0:	f0 ff       	sbrs	r31, 0
    16c2:	02 c0       	rjmp	.+4      	; 0x16c8 <vfprintf+0x18c>
    16c4:	f3 ff       	sbrs	r31, 3
    16c6:	06 c0       	rjmp	.+12     	; 0x16d4 <vfprintf+0x198>
    16c8:	91 fc       	sbrc	r9, 1
    16ca:	06 c0       	rjmp	.+12     	; 0x16d8 <vfprintf+0x19c>
    16cc:	92 fe       	sbrs	r9, 2
    16ce:	06 c0       	rjmp	.+12     	; 0x16dc <vfprintf+0x1a0>
    16d0:	00 e2       	ldi	r16, 0x20	; 32
    16d2:	05 c0       	rjmp	.+10     	; 0x16de <vfprintf+0x1a2>
    16d4:	0d e2       	ldi	r16, 0x2D	; 45
    16d6:	03 c0       	rjmp	.+6      	; 0x16de <vfprintf+0x1a2>
    16d8:	0b e2       	ldi	r16, 0x2B	; 43
    16da:	01 c0       	rjmp	.+2      	; 0x16de <vfprintf+0x1a2>
    16dc:	00 e0       	ldi	r16, 0x00	; 0
    16de:	8c 85       	ldd	r24, Y+12	; 0x0c
    16e0:	8c 70       	andi	r24, 0x0C	; 12
    16e2:	19 f0       	breq	.+6      	; 0x16ea <vfprintf+0x1ae>
    16e4:	01 11       	cpse	r16, r1
    16e6:	5a c2       	rjmp	.+1204   	; 0x1b9c <vfprintf+0x660>
    16e8:	9b c2       	rjmp	.+1334   	; 0x1c20 <vfprintf+0x6e4>
    16ea:	97 fe       	sbrs	r9, 7
    16ec:	10 c0       	rjmp	.+32     	; 0x170e <vfprintf+0x1d2>
    16ee:	4c 0c       	add	r4, r12
    16f0:	fc 85       	ldd	r31, Y+12	; 0x0c
    16f2:	f4 ff       	sbrs	r31, 4
    16f4:	04 c0       	rjmp	.+8      	; 0x16fe <vfprintf+0x1c2>
    16f6:	8a 81       	ldd	r24, Y+2	; 0x02
    16f8:	81 33       	cpi	r24, 0x31	; 49
    16fa:	09 f4       	brne	.+2      	; 0x16fe <vfprintf+0x1c2>
    16fc:	4a 94       	dec	r4
    16fe:	14 14       	cp	r1, r4
    1700:	74 f5       	brge	.+92     	; 0x175e <vfprintf+0x222>
    1702:	28 e0       	ldi	r18, 0x08	; 8
    1704:	24 15       	cp	r18, r4
    1706:	78 f5       	brcc	.+94     	; 0x1766 <vfprintf+0x22a>
    1708:	88 e0       	ldi	r24, 0x08	; 8
    170a:	48 2e       	mov	r4, r24
    170c:	2c c0       	rjmp	.+88     	; 0x1766 <vfprintf+0x22a>
    170e:	96 fc       	sbrc	r9, 6
    1710:	2a c0       	rjmp	.+84     	; 0x1766 <vfprintf+0x22a>
    1712:	81 2f       	mov	r24, r17
    1714:	90 e0       	ldi	r25, 0x00	; 0
    1716:	8c 15       	cp	r24, r12
    1718:	9d 05       	cpc	r25, r13
    171a:	9c f0       	brlt	.+38     	; 0x1742 <vfprintf+0x206>
    171c:	3c ef       	ldi	r19, 0xFC	; 252
    171e:	c3 16       	cp	r12, r19
    1720:	3f ef       	ldi	r19, 0xFF	; 255
    1722:	d3 06       	cpc	r13, r19
    1724:	74 f0       	brlt	.+28     	; 0x1742 <vfprintf+0x206>
    1726:	89 2d       	mov	r24, r9
    1728:	80 68       	ori	r24, 0x80	; 128
    172a:	98 2e       	mov	r9, r24
    172c:	0a c0       	rjmp	.+20     	; 0x1742 <vfprintf+0x206>
    172e:	e2 e0       	ldi	r30, 0x02	; 2
    1730:	f0 e0       	ldi	r31, 0x00	; 0
    1732:	ec 0f       	add	r30, r28
    1734:	fd 1f       	adc	r31, r29
    1736:	e1 0f       	add	r30, r17
    1738:	f1 1d       	adc	r31, r1
    173a:	80 81       	ld	r24, Z
    173c:	80 33       	cpi	r24, 0x30	; 48
    173e:	19 f4       	brne	.+6      	; 0x1746 <vfprintf+0x20a>
    1740:	11 50       	subi	r17, 0x01	; 1
    1742:	11 11       	cpse	r17, r1
    1744:	f4 cf       	rjmp	.-24     	; 0x172e <vfprintf+0x1f2>
    1746:	97 fe       	sbrs	r9, 7
    1748:	0e c0       	rjmp	.+28     	; 0x1766 <vfprintf+0x22a>
    174a:	44 24       	eor	r4, r4
    174c:	43 94       	inc	r4
    174e:	41 0e       	add	r4, r17
    1750:	81 2f       	mov	r24, r17
    1752:	90 e0       	ldi	r25, 0x00	; 0
    1754:	c8 16       	cp	r12, r24
    1756:	d9 06       	cpc	r13, r25
    1758:	2c f4       	brge	.+10     	; 0x1764 <vfprintf+0x228>
    175a:	1c 19       	sub	r17, r12
    175c:	04 c0       	rjmp	.+8      	; 0x1766 <vfprintf+0x22a>
    175e:	44 24       	eor	r4, r4
    1760:	43 94       	inc	r4
    1762:	01 c0       	rjmp	.+2      	; 0x1766 <vfprintf+0x22a>
    1764:	10 e0       	ldi	r17, 0x00	; 0
    1766:	97 fe       	sbrs	r9, 7
    1768:	06 c0       	rjmp	.+12     	; 0x1776 <vfprintf+0x23a>
    176a:	1c 14       	cp	r1, r12
    176c:	1d 04       	cpc	r1, r13
    176e:	34 f4       	brge	.+12     	; 0x177c <vfprintf+0x240>
    1770:	c6 01       	movw	r24, r12
    1772:	01 96       	adiw	r24, 0x01	; 1
    1774:	05 c0       	rjmp	.+10     	; 0x1780 <vfprintf+0x244>
    1776:	85 e0       	ldi	r24, 0x05	; 5
    1778:	90 e0       	ldi	r25, 0x00	; 0
    177a:	02 c0       	rjmp	.+4      	; 0x1780 <vfprintf+0x244>
    177c:	81 e0       	ldi	r24, 0x01	; 1
    177e:	90 e0       	ldi	r25, 0x00	; 0
    1780:	01 11       	cpse	r16, r1
    1782:	01 96       	adiw	r24, 0x01	; 1
    1784:	11 23       	and	r17, r17
    1786:	31 f0       	breq	.+12     	; 0x1794 <vfprintf+0x258>
    1788:	21 2f       	mov	r18, r17
    178a:	30 e0       	ldi	r19, 0x00	; 0
    178c:	2f 5f       	subi	r18, 0xFF	; 255
    178e:	3f 4f       	sbci	r19, 0xFF	; 255
    1790:	82 0f       	add	r24, r18
    1792:	93 1f       	adc	r25, r19
    1794:	25 2d       	mov	r18, r5
    1796:	30 e0       	ldi	r19, 0x00	; 0
    1798:	82 17       	cp	r24, r18
    179a:	93 07       	cpc	r25, r19
    179c:	14 f4       	brge	.+4      	; 0x17a2 <vfprintf+0x266>
    179e:	58 1a       	sub	r5, r24
    17a0:	01 c0       	rjmp	.+2      	; 0x17a4 <vfprintf+0x268>
    17a2:	51 2c       	mov	r5, r1
    17a4:	89 2d       	mov	r24, r9
    17a6:	89 70       	andi	r24, 0x09	; 9
    17a8:	49 f4       	brne	.+18     	; 0x17bc <vfprintf+0x280>
    17aa:	55 20       	and	r5, r5
    17ac:	39 f0       	breq	.+14     	; 0x17bc <vfprintf+0x280>
    17ae:	b7 01       	movw	r22, r14
    17b0:	80 e2       	ldi	r24, 0x20	; 32
    17b2:	90 e0       	ldi	r25, 0x00	; 0
    17b4:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    17b8:	5a 94       	dec	r5
    17ba:	f7 cf       	rjmp	.-18     	; 0x17aa <vfprintf+0x26e>
    17bc:	00 23       	and	r16, r16
    17be:	29 f0       	breq	.+10     	; 0x17ca <vfprintf+0x28e>
    17c0:	b7 01       	movw	r22, r14
    17c2:	80 2f       	mov	r24, r16
    17c4:	90 e0       	ldi	r25, 0x00	; 0
    17c6:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    17ca:	93 fc       	sbrc	r9, 3
    17cc:	09 c0       	rjmp	.+18     	; 0x17e0 <vfprintf+0x2a4>
    17ce:	55 20       	and	r5, r5
    17d0:	39 f0       	breq	.+14     	; 0x17e0 <vfprintf+0x2a4>
    17d2:	b7 01       	movw	r22, r14
    17d4:	80 e3       	ldi	r24, 0x30	; 48
    17d6:	90 e0       	ldi	r25, 0x00	; 0
    17d8:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    17dc:	5a 94       	dec	r5
    17de:	f7 cf       	rjmp	.-18     	; 0x17ce <vfprintf+0x292>
    17e0:	97 fe       	sbrs	r9, 7
    17e2:	4c c0       	rjmp	.+152    	; 0x187c <vfprintf+0x340>
    17e4:	46 01       	movw	r8, r12
    17e6:	d7 fe       	sbrs	r13, 7
    17e8:	02 c0       	rjmp	.+4      	; 0x17ee <vfprintf+0x2b2>
    17ea:	81 2c       	mov	r8, r1
    17ec:	91 2c       	mov	r9, r1
    17ee:	c6 01       	movw	r24, r12
    17f0:	88 19       	sub	r24, r8
    17f2:	99 09       	sbc	r25, r9
    17f4:	f3 01       	movw	r30, r6
    17f6:	e8 0f       	add	r30, r24
    17f8:	f9 1f       	adc	r31, r25
    17fa:	fe 87       	std	Y+14, r31	; 0x0e
    17fc:	ed 87       	std	Y+13, r30	; 0x0d
    17fe:	96 01       	movw	r18, r12
    1800:	24 19       	sub	r18, r4
    1802:	31 09       	sbc	r19, r1
    1804:	38 8b       	std	Y+16, r19	; 0x10
    1806:	2f 87       	std	Y+15, r18	; 0x0f
    1808:	01 2f       	mov	r16, r17
    180a:	10 e0       	ldi	r17, 0x00	; 0
    180c:	11 95       	neg	r17
    180e:	01 95       	neg	r16
    1810:	11 09       	sbc	r17, r1
    1812:	3f ef       	ldi	r19, 0xFF	; 255
    1814:	83 16       	cp	r8, r19
    1816:	93 06       	cpc	r9, r19
    1818:	29 f4       	brne	.+10     	; 0x1824 <vfprintf+0x2e8>
    181a:	b7 01       	movw	r22, r14
    181c:	8e e2       	ldi	r24, 0x2E	; 46
    181e:	90 e0       	ldi	r25, 0x00	; 0
    1820:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1824:	c8 14       	cp	r12, r8
    1826:	d9 04       	cpc	r13, r9
    1828:	4c f0       	brlt	.+18     	; 0x183c <vfprintf+0x300>
    182a:	8f 85       	ldd	r24, Y+15	; 0x0f
    182c:	98 89       	ldd	r25, Y+16	; 0x10
    182e:	88 15       	cp	r24, r8
    1830:	99 05       	cpc	r25, r9
    1832:	24 f4       	brge	.+8      	; 0x183c <vfprintf+0x300>
    1834:	ed 85       	ldd	r30, Y+13	; 0x0d
    1836:	fe 85       	ldd	r31, Y+14	; 0x0e
    1838:	81 81       	ldd	r24, Z+1	; 0x01
    183a:	01 c0       	rjmp	.+2      	; 0x183e <vfprintf+0x302>
    183c:	80 e3       	ldi	r24, 0x30	; 48
    183e:	f1 e0       	ldi	r31, 0x01	; 1
    1840:	8f 1a       	sub	r8, r31
    1842:	91 08       	sbc	r9, r1
    1844:	2d 85       	ldd	r18, Y+13	; 0x0d
    1846:	3e 85       	ldd	r19, Y+14	; 0x0e
    1848:	2f 5f       	subi	r18, 0xFF	; 255
    184a:	3f 4f       	sbci	r19, 0xFF	; 255
    184c:	3e 87       	std	Y+14, r19	; 0x0e
    184e:	2d 87       	std	Y+13, r18	; 0x0d
    1850:	80 16       	cp	r8, r16
    1852:	91 06       	cpc	r9, r17
    1854:	2c f0       	brlt	.+10     	; 0x1860 <vfprintf+0x324>
    1856:	b7 01       	movw	r22, r14
    1858:	90 e0       	ldi	r25, 0x00	; 0
    185a:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    185e:	d9 cf       	rjmp	.-78     	; 0x1812 <vfprintf+0x2d6>
    1860:	c8 14       	cp	r12, r8
    1862:	d9 04       	cpc	r13, r9
    1864:	41 f4       	brne	.+16     	; 0x1876 <vfprintf+0x33a>
    1866:	9a 81       	ldd	r25, Y+2	; 0x02
    1868:	96 33       	cpi	r25, 0x36	; 54
    186a:	20 f4       	brcc	.+8      	; 0x1874 <vfprintf+0x338>
    186c:	95 33       	cpi	r25, 0x35	; 53
    186e:	19 f4       	brne	.+6      	; 0x1876 <vfprintf+0x33a>
    1870:	3c 85       	ldd	r19, Y+12	; 0x0c
    1872:	34 ff       	sbrs	r19, 4
    1874:	81 e3       	ldi	r24, 0x31	; 49
    1876:	b7 01       	movw	r22, r14
    1878:	90 e0       	ldi	r25, 0x00	; 0
    187a:	4e c0       	rjmp	.+156    	; 0x1918 <vfprintf+0x3dc>
    187c:	8a 81       	ldd	r24, Y+2	; 0x02
    187e:	81 33       	cpi	r24, 0x31	; 49
    1880:	19 f0       	breq	.+6      	; 0x1888 <vfprintf+0x34c>
    1882:	9c 85       	ldd	r25, Y+12	; 0x0c
    1884:	9f 7e       	andi	r25, 0xEF	; 239
    1886:	9c 87       	std	Y+12, r25	; 0x0c
    1888:	b7 01       	movw	r22, r14
    188a:	90 e0       	ldi	r25, 0x00	; 0
    188c:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1890:	11 11       	cpse	r17, r1
    1892:	05 c0       	rjmp	.+10     	; 0x189e <vfprintf+0x362>
    1894:	94 fc       	sbrc	r9, 4
    1896:	18 c0       	rjmp	.+48     	; 0x18c8 <vfprintf+0x38c>
    1898:	85 e6       	ldi	r24, 0x65	; 101
    189a:	90 e0       	ldi	r25, 0x00	; 0
    189c:	17 c0       	rjmp	.+46     	; 0x18cc <vfprintf+0x390>
    189e:	b7 01       	movw	r22, r14
    18a0:	8e e2       	ldi	r24, 0x2E	; 46
    18a2:	90 e0       	ldi	r25, 0x00	; 0
    18a4:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    18a8:	1e 5f       	subi	r17, 0xFE	; 254
    18aa:	82 e0       	ldi	r24, 0x02	; 2
    18ac:	01 e0       	ldi	r16, 0x01	; 1
    18ae:	08 0f       	add	r16, r24
    18b0:	f3 01       	movw	r30, r6
    18b2:	e8 0f       	add	r30, r24
    18b4:	f1 1d       	adc	r31, r1
    18b6:	80 81       	ld	r24, Z
    18b8:	b7 01       	movw	r22, r14
    18ba:	90 e0       	ldi	r25, 0x00	; 0
    18bc:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    18c0:	80 2f       	mov	r24, r16
    18c2:	01 13       	cpse	r16, r17
    18c4:	f3 cf       	rjmp	.-26     	; 0x18ac <vfprintf+0x370>
    18c6:	e6 cf       	rjmp	.-52     	; 0x1894 <vfprintf+0x358>
    18c8:	85 e4       	ldi	r24, 0x45	; 69
    18ca:	90 e0       	ldi	r25, 0x00	; 0
    18cc:	b7 01       	movw	r22, r14
    18ce:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    18d2:	d7 fc       	sbrc	r13, 7
    18d4:	06 c0       	rjmp	.+12     	; 0x18e2 <vfprintf+0x3a6>
    18d6:	c1 14       	cp	r12, r1
    18d8:	d1 04       	cpc	r13, r1
    18da:	41 f4       	brne	.+16     	; 0x18ec <vfprintf+0x3b0>
    18dc:	ec 85       	ldd	r30, Y+12	; 0x0c
    18de:	e4 ff       	sbrs	r30, 4
    18e0:	05 c0       	rjmp	.+10     	; 0x18ec <vfprintf+0x3b0>
    18e2:	d1 94       	neg	r13
    18e4:	c1 94       	neg	r12
    18e6:	d1 08       	sbc	r13, r1
    18e8:	8d e2       	ldi	r24, 0x2D	; 45
    18ea:	01 c0       	rjmp	.+2      	; 0x18ee <vfprintf+0x3b2>
    18ec:	8b e2       	ldi	r24, 0x2B	; 43
    18ee:	b7 01       	movw	r22, r14
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    18f6:	80 e3       	ldi	r24, 0x30	; 48
    18f8:	2a e0       	ldi	r18, 0x0A	; 10
    18fa:	c2 16       	cp	r12, r18
    18fc:	d1 04       	cpc	r13, r1
    18fe:	2c f0       	brlt	.+10     	; 0x190a <vfprintf+0x3ce>
    1900:	8f 5f       	subi	r24, 0xFF	; 255
    1902:	fa e0       	ldi	r31, 0x0A	; 10
    1904:	cf 1a       	sub	r12, r31
    1906:	d1 08       	sbc	r13, r1
    1908:	f7 cf       	rjmp	.-18     	; 0x18f8 <vfprintf+0x3bc>
    190a:	b7 01       	movw	r22, r14
    190c:	90 e0       	ldi	r25, 0x00	; 0
    190e:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1912:	b7 01       	movw	r22, r14
    1914:	c6 01       	movw	r24, r12
    1916:	c0 96       	adiw	r24, 0x30	; 48
    1918:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    191c:	54 c1       	rjmp	.+680    	; 0x1bc6 <vfprintf+0x68a>
    191e:	83 36       	cpi	r24, 0x63	; 99
    1920:	31 f0       	breq	.+12     	; 0x192e <vfprintf+0x3f2>
    1922:	83 37       	cpi	r24, 0x73	; 115
    1924:	79 f0       	breq	.+30     	; 0x1944 <vfprintf+0x408>
    1926:	83 35       	cpi	r24, 0x53	; 83
    1928:	09 f0       	breq	.+2      	; 0x192c <vfprintf+0x3f0>
    192a:	56 c0       	rjmp	.+172    	; 0x19d8 <vfprintf+0x49c>
    192c:	20 c0       	rjmp	.+64     	; 0x196e <vfprintf+0x432>
    192e:	56 01       	movw	r10, r12
    1930:	32 e0       	ldi	r19, 0x02	; 2
    1932:	a3 0e       	add	r10, r19
    1934:	b1 1c       	adc	r11, r1
    1936:	f6 01       	movw	r30, r12
    1938:	80 81       	ld	r24, Z
    193a:	89 83       	std	Y+1, r24	; 0x01
    193c:	01 e0       	ldi	r16, 0x01	; 1
    193e:	10 e0       	ldi	r17, 0x00	; 0
    1940:	63 01       	movw	r12, r6
    1942:	12 c0       	rjmp	.+36     	; 0x1968 <vfprintf+0x42c>
    1944:	56 01       	movw	r10, r12
    1946:	f2 e0       	ldi	r31, 0x02	; 2
    1948:	af 0e       	add	r10, r31
    194a:	b1 1c       	adc	r11, r1
    194c:	f6 01       	movw	r30, r12
    194e:	c0 80       	ld	r12, Z
    1950:	d1 80       	ldd	r13, Z+1	; 0x01
    1952:	96 fe       	sbrs	r9, 6
    1954:	03 c0       	rjmp	.+6      	; 0x195c <vfprintf+0x420>
    1956:	61 2f       	mov	r22, r17
    1958:	70 e0       	ldi	r23, 0x00	; 0
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <vfprintf+0x424>
    195c:	6f ef       	ldi	r22, 0xFF	; 255
    195e:	7f ef       	ldi	r23, 0xFF	; 255
    1960:	c6 01       	movw	r24, r12
    1962:	0e 94 35 0f 	call	0x1e6a	; 0x1e6a <strnlen>
    1966:	8c 01       	movw	r16, r24
    1968:	f9 2d       	mov	r31, r9
    196a:	ff 77       	andi	r31, 0x7F	; 127
    196c:	14 c0       	rjmp	.+40     	; 0x1996 <vfprintf+0x45a>
    196e:	56 01       	movw	r10, r12
    1970:	22 e0       	ldi	r18, 0x02	; 2
    1972:	a2 0e       	add	r10, r18
    1974:	b1 1c       	adc	r11, r1
    1976:	f6 01       	movw	r30, r12
    1978:	c0 80       	ld	r12, Z
    197a:	d1 80       	ldd	r13, Z+1	; 0x01
    197c:	96 fe       	sbrs	r9, 6
    197e:	03 c0       	rjmp	.+6      	; 0x1986 <vfprintf+0x44a>
    1980:	61 2f       	mov	r22, r17
    1982:	70 e0       	ldi	r23, 0x00	; 0
    1984:	02 c0       	rjmp	.+4      	; 0x198a <vfprintf+0x44e>
    1986:	6f ef       	ldi	r22, 0xFF	; 255
    1988:	7f ef       	ldi	r23, 0xFF	; 255
    198a:	c6 01       	movw	r24, r12
    198c:	0e 94 2a 0f 	call	0x1e54	; 0x1e54 <strnlen_P>
    1990:	8c 01       	movw	r16, r24
    1992:	f9 2d       	mov	r31, r9
    1994:	f0 68       	ori	r31, 0x80	; 128
    1996:	9f 2e       	mov	r9, r31
    1998:	f3 fd       	sbrc	r31, 3
    199a:	1a c0       	rjmp	.+52     	; 0x19d0 <vfprintf+0x494>
    199c:	85 2d       	mov	r24, r5
    199e:	90 e0       	ldi	r25, 0x00	; 0
    19a0:	08 17       	cp	r16, r24
    19a2:	19 07       	cpc	r17, r25
    19a4:	a8 f4       	brcc	.+42     	; 0x19d0 <vfprintf+0x494>
    19a6:	b7 01       	movw	r22, r14
    19a8:	80 e2       	ldi	r24, 0x20	; 32
    19aa:	90 e0       	ldi	r25, 0x00	; 0
    19ac:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    19b0:	5a 94       	dec	r5
    19b2:	f4 cf       	rjmp	.-24     	; 0x199c <vfprintf+0x460>
    19b4:	f6 01       	movw	r30, r12
    19b6:	97 fc       	sbrc	r9, 7
    19b8:	85 91       	lpm	r24, Z+
    19ba:	97 fe       	sbrs	r9, 7
    19bc:	81 91       	ld	r24, Z+
    19be:	6f 01       	movw	r12, r30
    19c0:	b7 01       	movw	r22, r14
    19c2:	90 e0       	ldi	r25, 0x00	; 0
    19c4:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    19c8:	51 10       	cpse	r5, r1
    19ca:	5a 94       	dec	r5
    19cc:	01 50       	subi	r16, 0x01	; 1
    19ce:	11 09       	sbc	r17, r1
    19d0:	01 15       	cp	r16, r1
    19d2:	11 05       	cpc	r17, r1
    19d4:	79 f7       	brne	.-34     	; 0x19b4 <vfprintf+0x478>
    19d6:	f7 c0       	rjmp	.+494    	; 0x1bc6 <vfprintf+0x68a>
    19d8:	84 36       	cpi	r24, 0x64	; 100
    19da:	11 f0       	breq	.+4      	; 0x19e0 <vfprintf+0x4a4>
    19dc:	89 36       	cpi	r24, 0x69	; 105
    19de:	61 f5       	brne	.+88     	; 0x1a38 <vfprintf+0x4fc>
    19e0:	56 01       	movw	r10, r12
    19e2:	97 fe       	sbrs	r9, 7
    19e4:	09 c0       	rjmp	.+18     	; 0x19f8 <vfprintf+0x4bc>
    19e6:	24 e0       	ldi	r18, 0x04	; 4
    19e8:	a2 0e       	add	r10, r18
    19ea:	b1 1c       	adc	r11, r1
    19ec:	f6 01       	movw	r30, r12
    19ee:	60 81       	ld	r22, Z
    19f0:	71 81       	ldd	r23, Z+1	; 0x01
    19f2:	82 81       	ldd	r24, Z+2	; 0x02
    19f4:	93 81       	ldd	r25, Z+3	; 0x03
    19f6:	0a c0       	rjmp	.+20     	; 0x1a0c <vfprintf+0x4d0>
    19f8:	f2 e0       	ldi	r31, 0x02	; 2
    19fa:	af 0e       	add	r10, r31
    19fc:	b1 1c       	adc	r11, r1
    19fe:	f6 01       	movw	r30, r12
    1a00:	60 81       	ld	r22, Z
    1a02:	71 81       	ldd	r23, Z+1	; 0x01
    1a04:	07 2e       	mov	r0, r23
    1a06:	00 0c       	add	r0, r0
    1a08:	88 0b       	sbc	r24, r24
    1a0a:	99 0b       	sbc	r25, r25
    1a0c:	f9 2d       	mov	r31, r9
    1a0e:	ff 76       	andi	r31, 0x6F	; 111
    1a10:	9f 2e       	mov	r9, r31
    1a12:	97 ff       	sbrs	r25, 7
    1a14:	09 c0       	rjmp	.+18     	; 0x1a28 <vfprintf+0x4ec>
    1a16:	90 95       	com	r25
    1a18:	80 95       	com	r24
    1a1a:	70 95       	com	r23
    1a1c:	61 95       	neg	r22
    1a1e:	7f 4f       	sbci	r23, 0xFF	; 255
    1a20:	8f 4f       	sbci	r24, 0xFF	; 255
    1a22:	9f 4f       	sbci	r25, 0xFF	; 255
    1a24:	f0 68       	ori	r31, 0x80	; 128
    1a26:	9f 2e       	mov	r9, r31
    1a28:	2a e0       	ldi	r18, 0x0A	; 10
    1a2a:	30 e0       	ldi	r19, 0x00	; 0
    1a2c:	a3 01       	movw	r20, r6
    1a2e:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <__ultoa_invert>
    1a32:	c8 2e       	mov	r12, r24
    1a34:	c6 18       	sub	r12, r6
    1a36:	3f c0       	rjmp	.+126    	; 0x1ab6 <vfprintf+0x57a>
    1a38:	09 2d       	mov	r16, r9
    1a3a:	85 37       	cpi	r24, 0x75	; 117
    1a3c:	21 f4       	brne	.+8      	; 0x1a46 <vfprintf+0x50a>
    1a3e:	0f 7e       	andi	r16, 0xEF	; 239
    1a40:	2a e0       	ldi	r18, 0x0A	; 10
    1a42:	30 e0       	ldi	r19, 0x00	; 0
    1a44:	1d c0       	rjmp	.+58     	; 0x1a80 <vfprintf+0x544>
    1a46:	09 7f       	andi	r16, 0xF9	; 249
    1a48:	8f 36       	cpi	r24, 0x6F	; 111
    1a4a:	91 f0       	breq	.+36     	; 0x1a70 <vfprintf+0x534>
    1a4c:	18 f4       	brcc	.+6      	; 0x1a54 <vfprintf+0x518>
    1a4e:	88 35       	cpi	r24, 0x58	; 88
    1a50:	59 f0       	breq	.+22     	; 0x1a68 <vfprintf+0x52c>
    1a52:	c3 c0       	rjmp	.+390    	; 0x1bda <vfprintf+0x69e>
    1a54:	80 37       	cpi	r24, 0x70	; 112
    1a56:	19 f0       	breq	.+6      	; 0x1a5e <vfprintf+0x522>
    1a58:	88 37       	cpi	r24, 0x78	; 120
    1a5a:	11 f0       	breq	.+4      	; 0x1a60 <vfprintf+0x524>
    1a5c:	be c0       	rjmp	.+380    	; 0x1bda <vfprintf+0x69e>
    1a5e:	00 61       	ori	r16, 0x10	; 16
    1a60:	04 ff       	sbrs	r16, 4
    1a62:	09 c0       	rjmp	.+18     	; 0x1a76 <vfprintf+0x53a>
    1a64:	04 60       	ori	r16, 0x04	; 4
    1a66:	07 c0       	rjmp	.+14     	; 0x1a76 <vfprintf+0x53a>
    1a68:	94 fe       	sbrs	r9, 4
    1a6a:	08 c0       	rjmp	.+16     	; 0x1a7c <vfprintf+0x540>
    1a6c:	06 60       	ori	r16, 0x06	; 6
    1a6e:	06 c0       	rjmp	.+12     	; 0x1a7c <vfprintf+0x540>
    1a70:	28 e0       	ldi	r18, 0x08	; 8
    1a72:	30 e0       	ldi	r19, 0x00	; 0
    1a74:	05 c0       	rjmp	.+10     	; 0x1a80 <vfprintf+0x544>
    1a76:	20 e1       	ldi	r18, 0x10	; 16
    1a78:	30 e0       	ldi	r19, 0x00	; 0
    1a7a:	02 c0       	rjmp	.+4      	; 0x1a80 <vfprintf+0x544>
    1a7c:	20 e1       	ldi	r18, 0x10	; 16
    1a7e:	32 e0       	ldi	r19, 0x02	; 2
    1a80:	56 01       	movw	r10, r12
    1a82:	07 ff       	sbrs	r16, 7
    1a84:	09 c0       	rjmp	.+18     	; 0x1a98 <vfprintf+0x55c>
    1a86:	84 e0       	ldi	r24, 0x04	; 4
    1a88:	a8 0e       	add	r10, r24
    1a8a:	b1 1c       	adc	r11, r1
    1a8c:	f6 01       	movw	r30, r12
    1a8e:	60 81       	ld	r22, Z
    1a90:	71 81       	ldd	r23, Z+1	; 0x01
    1a92:	82 81       	ldd	r24, Z+2	; 0x02
    1a94:	93 81       	ldd	r25, Z+3	; 0x03
    1a96:	08 c0       	rjmp	.+16     	; 0x1aa8 <vfprintf+0x56c>
    1a98:	f2 e0       	ldi	r31, 0x02	; 2
    1a9a:	af 0e       	add	r10, r31
    1a9c:	b1 1c       	adc	r11, r1
    1a9e:	f6 01       	movw	r30, r12
    1aa0:	60 81       	ld	r22, Z
    1aa2:	71 81       	ldd	r23, Z+1	; 0x01
    1aa4:	80 e0       	ldi	r24, 0x00	; 0
    1aa6:	90 e0       	ldi	r25, 0x00	; 0
    1aa8:	a3 01       	movw	r20, r6
    1aaa:	0e 94 9e 0f 	call	0x1f3c	; 0x1f3c <__ultoa_invert>
    1aae:	c8 2e       	mov	r12, r24
    1ab0:	c6 18       	sub	r12, r6
    1ab2:	0f 77       	andi	r16, 0x7F	; 127
    1ab4:	90 2e       	mov	r9, r16
    1ab6:	96 fe       	sbrs	r9, 6
    1ab8:	0b c0       	rjmp	.+22     	; 0x1ad0 <vfprintf+0x594>
    1aba:	09 2d       	mov	r16, r9
    1abc:	0e 7f       	andi	r16, 0xFE	; 254
    1abe:	c1 16       	cp	r12, r17
    1ac0:	50 f4       	brcc	.+20     	; 0x1ad6 <vfprintf+0x59a>
    1ac2:	94 fe       	sbrs	r9, 4
    1ac4:	0a c0       	rjmp	.+20     	; 0x1ada <vfprintf+0x59e>
    1ac6:	92 fc       	sbrc	r9, 2
    1ac8:	08 c0       	rjmp	.+16     	; 0x1ada <vfprintf+0x59e>
    1aca:	09 2d       	mov	r16, r9
    1acc:	0e 7e       	andi	r16, 0xEE	; 238
    1ace:	05 c0       	rjmp	.+10     	; 0x1ada <vfprintf+0x59e>
    1ad0:	dc 2c       	mov	r13, r12
    1ad2:	09 2d       	mov	r16, r9
    1ad4:	03 c0       	rjmp	.+6      	; 0x1adc <vfprintf+0x5a0>
    1ad6:	dc 2c       	mov	r13, r12
    1ad8:	01 c0       	rjmp	.+2      	; 0x1adc <vfprintf+0x5a0>
    1ada:	d1 2e       	mov	r13, r17
    1adc:	04 ff       	sbrs	r16, 4
    1ade:	0d c0       	rjmp	.+26     	; 0x1afa <vfprintf+0x5be>
    1ae0:	fe 01       	movw	r30, r28
    1ae2:	ec 0d       	add	r30, r12
    1ae4:	f1 1d       	adc	r31, r1
    1ae6:	80 81       	ld	r24, Z
    1ae8:	80 33       	cpi	r24, 0x30	; 48
    1aea:	11 f4       	brne	.+4      	; 0x1af0 <vfprintf+0x5b4>
    1aec:	09 7e       	andi	r16, 0xE9	; 233
    1aee:	09 c0       	rjmp	.+18     	; 0x1b02 <vfprintf+0x5c6>
    1af0:	02 ff       	sbrs	r16, 2
    1af2:	06 c0       	rjmp	.+12     	; 0x1b00 <vfprintf+0x5c4>
    1af4:	d3 94       	inc	r13
    1af6:	d3 94       	inc	r13
    1af8:	04 c0       	rjmp	.+8      	; 0x1b02 <vfprintf+0x5c6>
    1afa:	80 2f       	mov	r24, r16
    1afc:	86 78       	andi	r24, 0x86	; 134
    1afe:	09 f0       	breq	.+2      	; 0x1b02 <vfprintf+0x5c6>
    1b00:	d3 94       	inc	r13
    1b02:	03 fd       	sbrc	r16, 3
    1b04:	11 c0       	rjmp	.+34     	; 0x1b28 <vfprintf+0x5ec>
    1b06:	00 ff       	sbrs	r16, 0
    1b08:	06 c0       	rjmp	.+12     	; 0x1b16 <vfprintf+0x5da>
    1b0a:	1c 2d       	mov	r17, r12
    1b0c:	d5 14       	cp	r13, r5
    1b0e:	80 f4       	brcc	.+32     	; 0x1b30 <vfprintf+0x5f4>
    1b10:	15 0d       	add	r17, r5
    1b12:	1d 19       	sub	r17, r13
    1b14:	0d c0       	rjmp	.+26     	; 0x1b30 <vfprintf+0x5f4>
    1b16:	d5 14       	cp	r13, r5
    1b18:	58 f4       	brcc	.+22     	; 0x1b30 <vfprintf+0x5f4>
    1b1a:	b7 01       	movw	r22, r14
    1b1c:	80 e2       	ldi	r24, 0x20	; 32
    1b1e:	90 e0       	ldi	r25, 0x00	; 0
    1b20:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1b24:	d3 94       	inc	r13
    1b26:	f7 cf       	rjmp	.-18     	; 0x1b16 <vfprintf+0x5da>
    1b28:	d5 14       	cp	r13, r5
    1b2a:	10 f4       	brcc	.+4      	; 0x1b30 <vfprintf+0x5f4>
    1b2c:	5d 18       	sub	r5, r13
    1b2e:	01 c0       	rjmp	.+2      	; 0x1b32 <vfprintf+0x5f6>
    1b30:	51 2c       	mov	r5, r1
    1b32:	04 ff       	sbrs	r16, 4
    1b34:	10 c0       	rjmp	.+32     	; 0x1b56 <vfprintf+0x61a>
    1b36:	b7 01       	movw	r22, r14
    1b38:	80 e3       	ldi	r24, 0x30	; 48
    1b3a:	90 e0       	ldi	r25, 0x00	; 0
    1b3c:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1b40:	02 ff       	sbrs	r16, 2
    1b42:	17 c0       	rjmp	.+46     	; 0x1b72 <vfprintf+0x636>
    1b44:	01 fd       	sbrc	r16, 1
    1b46:	03 c0       	rjmp	.+6      	; 0x1b4e <vfprintf+0x612>
    1b48:	88 e7       	ldi	r24, 0x78	; 120
    1b4a:	90 e0       	ldi	r25, 0x00	; 0
    1b4c:	02 c0       	rjmp	.+4      	; 0x1b52 <vfprintf+0x616>
    1b4e:	88 e5       	ldi	r24, 0x58	; 88
    1b50:	90 e0       	ldi	r25, 0x00	; 0
    1b52:	b7 01       	movw	r22, r14
    1b54:	0c c0       	rjmp	.+24     	; 0x1b6e <vfprintf+0x632>
    1b56:	80 2f       	mov	r24, r16
    1b58:	86 78       	andi	r24, 0x86	; 134
    1b5a:	59 f0       	breq	.+22     	; 0x1b72 <vfprintf+0x636>
    1b5c:	01 ff       	sbrs	r16, 1
    1b5e:	02 c0       	rjmp	.+4      	; 0x1b64 <vfprintf+0x628>
    1b60:	8b e2       	ldi	r24, 0x2B	; 43
    1b62:	01 c0       	rjmp	.+2      	; 0x1b66 <vfprintf+0x62a>
    1b64:	80 e2       	ldi	r24, 0x20	; 32
    1b66:	07 fd       	sbrc	r16, 7
    1b68:	8d e2       	ldi	r24, 0x2D	; 45
    1b6a:	b7 01       	movw	r22, r14
    1b6c:	90 e0       	ldi	r25, 0x00	; 0
    1b6e:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1b72:	c1 16       	cp	r12, r17
    1b74:	38 f4       	brcc	.+14     	; 0x1b84 <vfprintf+0x648>
    1b76:	b7 01       	movw	r22, r14
    1b78:	80 e3       	ldi	r24, 0x30	; 48
    1b7a:	90 e0       	ldi	r25, 0x00	; 0
    1b7c:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1b80:	11 50       	subi	r17, 0x01	; 1
    1b82:	f7 cf       	rjmp	.-18     	; 0x1b72 <vfprintf+0x636>
    1b84:	ca 94       	dec	r12
    1b86:	f3 01       	movw	r30, r6
    1b88:	ec 0d       	add	r30, r12
    1b8a:	f1 1d       	adc	r31, r1
    1b8c:	80 81       	ld	r24, Z
    1b8e:	b7 01       	movw	r22, r14
    1b90:	90 e0       	ldi	r25, 0x00	; 0
    1b92:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1b96:	c1 10       	cpse	r12, r1
    1b98:	f5 cf       	rjmp	.-22     	; 0x1b84 <vfprintf+0x648>
    1b9a:	15 c0       	rjmp	.+42     	; 0x1bc6 <vfprintf+0x68a>
    1b9c:	f4 e0       	ldi	r31, 0x04	; 4
    1b9e:	f5 15       	cp	r31, r5
    1ba0:	60 f5       	brcc	.+88     	; 0x1bfa <vfprintf+0x6be>
    1ba2:	84 e0       	ldi	r24, 0x04	; 4
    1ba4:	58 1a       	sub	r5, r24
    1ba6:	93 fe       	sbrs	r9, 3
    1ba8:	1f c0       	rjmp	.+62     	; 0x1be8 <vfprintf+0x6ac>
    1baa:	01 11       	cpse	r16, r1
    1bac:	27 c0       	rjmp	.+78     	; 0x1bfc <vfprintf+0x6c0>
    1bae:	2c 85       	ldd	r18, Y+12	; 0x0c
    1bb0:	23 ff       	sbrs	r18, 3
    1bb2:	2a c0       	rjmp	.+84     	; 0x1c08 <vfprintf+0x6cc>
    1bb4:	08 e6       	ldi	r16, 0x68	; 104
    1bb6:	10 e0       	ldi	r17, 0x00	; 0
    1bb8:	39 2d       	mov	r19, r9
    1bba:	30 71       	andi	r19, 0x10	; 16
    1bbc:	93 2e       	mov	r9, r19
    1bbe:	f8 01       	movw	r30, r16
    1bc0:	84 91       	lpm	r24, Z
    1bc2:	81 11       	cpse	r24, r1
    1bc4:	24 c0       	rjmp	.+72     	; 0x1c0e <vfprintf+0x6d2>
    1bc6:	55 20       	and	r5, r5
    1bc8:	09 f4       	brne	.+2      	; 0x1bcc <vfprintf+0x690>
    1bca:	e4 cc       	rjmp	.-1592   	; 0x1594 <vfprintf+0x58>
    1bcc:	b7 01       	movw	r22, r14
    1bce:	80 e2       	ldi	r24, 0x20	; 32
    1bd0:	90 e0       	ldi	r25, 0x00	; 0
    1bd2:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1bd6:	5a 94       	dec	r5
    1bd8:	f6 cf       	rjmp	.-20     	; 0x1bc6 <vfprintf+0x68a>
    1bda:	f7 01       	movw	r30, r14
    1bdc:	86 81       	ldd	r24, Z+6	; 0x06
    1bde:	97 81       	ldd	r25, Z+7	; 0x07
    1be0:	26 c0       	rjmp	.+76     	; 0x1c2e <vfprintf+0x6f2>
    1be2:	8f ef       	ldi	r24, 0xFF	; 255
    1be4:	9f ef       	ldi	r25, 0xFF	; 255
    1be6:	23 c0       	rjmp	.+70     	; 0x1c2e <vfprintf+0x6f2>
    1be8:	b7 01       	movw	r22, r14
    1bea:	80 e2       	ldi	r24, 0x20	; 32
    1bec:	90 e0       	ldi	r25, 0x00	; 0
    1bee:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1bf2:	5a 94       	dec	r5
    1bf4:	51 10       	cpse	r5, r1
    1bf6:	f8 cf       	rjmp	.-16     	; 0x1be8 <vfprintf+0x6ac>
    1bf8:	d8 cf       	rjmp	.-80     	; 0x1baa <vfprintf+0x66e>
    1bfa:	51 2c       	mov	r5, r1
    1bfc:	b7 01       	movw	r22, r14
    1bfe:	80 2f       	mov	r24, r16
    1c00:	90 e0       	ldi	r25, 0x00	; 0
    1c02:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1c06:	d3 cf       	rjmp	.-90     	; 0x1bae <vfprintf+0x672>
    1c08:	0c e6       	ldi	r16, 0x6C	; 108
    1c0a:	10 e0       	ldi	r17, 0x00	; 0
    1c0c:	d5 cf       	rjmp	.-86     	; 0x1bb8 <vfprintf+0x67c>
    1c0e:	91 10       	cpse	r9, r1
    1c10:	80 52       	subi	r24, 0x20	; 32
    1c12:	b7 01       	movw	r22, r14
    1c14:	90 e0       	ldi	r25, 0x00	; 0
    1c16:	0e 94 40 0f 	call	0x1e80	; 0x1e80 <fputc>
    1c1a:	0f 5f       	subi	r16, 0xFF	; 255
    1c1c:	1f 4f       	sbci	r17, 0xFF	; 255
    1c1e:	cf cf       	rjmp	.-98     	; 0x1bbe <vfprintf+0x682>
    1c20:	23 e0       	ldi	r18, 0x03	; 3
    1c22:	25 15       	cp	r18, r5
    1c24:	10 f4       	brcc	.+4      	; 0x1c2a <vfprintf+0x6ee>
    1c26:	83 e0       	ldi	r24, 0x03	; 3
    1c28:	bd cf       	rjmp	.-134    	; 0x1ba4 <vfprintf+0x668>
    1c2a:	51 2c       	mov	r5, r1
    1c2c:	c0 cf       	rjmp	.-128    	; 0x1bae <vfprintf+0x672>
    1c2e:	60 96       	adiw	r28, 0x10	; 16
    1c30:	e2 e1       	ldi	r30, 0x12	; 18
    1c32:	0c 94 37 0e 	jmp	0x1c6e	; 0x1c6e <__epilogue_restores__>

00001c36 <__prologue_saves__>:
    1c36:	2f 92       	push	r2
    1c38:	3f 92       	push	r3
    1c3a:	4f 92       	push	r4
    1c3c:	5f 92       	push	r5
    1c3e:	6f 92       	push	r6
    1c40:	7f 92       	push	r7
    1c42:	8f 92       	push	r8
    1c44:	9f 92       	push	r9
    1c46:	af 92       	push	r10
    1c48:	bf 92       	push	r11
    1c4a:	cf 92       	push	r12
    1c4c:	df 92       	push	r13
    1c4e:	ef 92       	push	r14
    1c50:	ff 92       	push	r15
    1c52:	0f 93       	push	r16
    1c54:	1f 93       	push	r17
    1c56:	cf 93       	push	r28
    1c58:	df 93       	push	r29
    1c5a:	cd b7       	in	r28, 0x3d	; 61
    1c5c:	de b7       	in	r29, 0x3e	; 62
    1c5e:	ca 1b       	sub	r28, r26
    1c60:	db 0b       	sbc	r29, r27
    1c62:	0f b6       	in	r0, 0x3f	; 63
    1c64:	f8 94       	cli
    1c66:	de bf       	out	0x3e, r29	; 62
    1c68:	0f be       	out	0x3f, r0	; 63
    1c6a:	cd bf       	out	0x3d, r28	; 61
    1c6c:	09 94       	ijmp

00001c6e <__epilogue_restores__>:
    1c6e:	2a 88       	ldd	r2, Y+18	; 0x12
    1c70:	39 88       	ldd	r3, Y+17	; 0x11
    1c72:	48 88       	ldd	r4, Y+16	; 0x10
    1c74:	5f 84       	ldd	r5, Y+15	; 0x0f
    1c76:	6e 84       	ldd	r6, Y+14	; 0x0e
    1c78:	7d 84       	ldd	r7, Y+13	; 0x0d
    1c7a:	8c 84       	ldd	r8, Y+12	; 0x0c
    1c7c:	9b 84       	ldd	r9, Y+11	; 0x0b
    1c7e:	aa 84       	ldd	r10, Y+10	; 0x0a
    1c80:	b9 84       	ldd	r11, Y+9	; 0x09
    1c82:	c8 84       	ldd	r12, Y+8	; 0x08
    1c84:	df 80       	ldd	r13, Y+7	; 0x07
    1c86:	ee 80       	ldd	r14, Y+6	; 0x06
    1c88:	fd 80       	ldd	r15, Y+5	; 0x05
    1c8a:	0c 81       	ldd	r16, Y+4	; 0x04
    1c8c:	1b 81       	ldd	r17, Y+3	; 0x03
    1c8e:	aa 81       	ldd	r26, Y+2	; 0x02
    1c90:	b9 81       	ldd	r27, Y+1	; 0x01
    1c92:	ce 0f       	add	r28, r30
    1c94:	d1 1d       	adc	r29, r1
    1c96:	0f b6       	in	r0, 0x3f	; 63
    1c98:	f8 94       	cli
    1c9a:	de bf       	out	0x3e, r29	; 62
    1c9c:	0f be       	out	0x3f, r0	; 63
    1c9e:	cd bf       	out	0x3d, r28	; 61
    1ca0:	ed 01       	movw	r28, r26
    1ca2:	08 95       	ret

00001ca4 <__ftoa_engine>:
    1ca4:	28 30       	cpi	r18, 0x08	; 8
    1ca6:	08 f0       	brcs	.+2      	; 0x1caa <__ftoa_engine+0x6>
    1ca8:	27 e0       	ldi	r18, 0x07	; 7
    1caa:	33 27       	eor	r19, r19
    1cac:	da 01       	movw	r26, r20
    1cae:	99 0f       	add	r25, r25
    1cb0:	31 1d       	adc	r19, r1
    1cb2:	87 fd       	sbrc	r24, 7
    1cb4:	91 60       	ori	r25, 0x01	; 1
    1cb6:	00 96       	adiw	r24, 0x00	; 0
    1cb8:	61 05       	cpc	r22, r1
    1cba:	71 05       	cpc	r23, r1
    1cbc:	39 f4       	brne	.+14     	; 0x1ccc <__ftoa_engine+0x28>
    1cbe:	32 60       	ori	r19, 0x02	; 2
    1cc0:	2e 5f       	subi	r18, 0xFE	; 254
    1cc2:	3d 93       	st	X+, r19
    1cc4:	30 e3       	ldi	r19, 0x30	; 48
    1cc6:	2a 95       	dec	r18
    1cc8:	e1 f7       	brne	.-8      	; 0x1cc2 <__ftoa_engine+0x1e>
    1cca:	08 95       	ret
    1ccc:	9f 3f       	cpi	r25, 0xFF	; 255
    1cce:	30 f0       	brcs	.+12     	; 0x1cdc <__ftoa_engine+0x38>
    1cd0:	80 38       	cpi	r24, 0x80	; 128
    1cd2:	71 05       	cpc	r23, r1
    1cd4:	61 05       	cpc	r22, r1
    1cd6:	09 f0       	breq	.+2      	; 0x1cda <__ftoa_engine+0x36>
    1cd8:	3c 5f       	subi	r19, 0xFC	; 252
    1cda:	3c 5f       	subi	r19, 0xFC	; 252
    1cdc:	3d 93       	st	X+, r19
    1cde:	91 30       	cpi	r25, 0x01	; 1
    1ce0:	08 f0       	brcs	.+2      	; 0x1ce4 <__ftoa_engine+0x40>
    1ce2:	80 68       	ori	r24, 0x80	; 128
    1ce4:	91 1d       	adc	r25, r1
    1ce6:	df 93       	push	r29
    1ce8:	cf 93       	push	r28
    1cea:	1f 93       	push	r17
    1cec:	0f 93       	push	r16
    1cee:	ff 92       	push	r15
    1cf0:	ef 92       	push	r14
    1cf2:	19 2f       	mov	r17, r25
    1cf4:	98 7f       	andi	r25, 0xF8	; 248
    1cf6:	96 95       	lsr	r25
    1cf8:	e9 2f       	mov	r30, r25
    1cfa:	96 95       	lsr	r25
    1cfc:	96 95       	lsr	r25
    1cfe:	e9 0f       	add	r30, r25
    1d00:	ff 27       	eor	r31, r31
    1d02:	e6 53       	subi	r30, 0x36	; 54
    1d04:	ff 4f       	sbci	r31, 0xFF	; 255
    1d06:	99 27       	eor	r25, r25
    1d08:	33 27       	eor	r19, r19
    1d0a:	ee 24       	eor	r14, r14
    1d0c:	ff 24       	eor	r15, r15
    1d0e:	a7 01       	movw	r20, r14
    1d10:	e7 01       	movw	r28, r14
    1d12:	05 90       	lpm	r0, Z+
    1d14:	08 94       	sec
    1d16:	07 94       	ror	r0
    1d18:	28 f4       	brcc	.+10     	; 0x1d24 <__ftoa_engine+0x80>
    1d1a:	36 0f       	add	r19, r22
    1d1c:	e7 1e       	adc	r14, r23
    1d1e:	f8 1e       	adc	r15, r24
    1d20:	49 1f       	adc	r20, r25
    1d22:	51 1d       	adc	r21, r1
    1d24:	66 0f       	add	r22, r22
    1d26:	77 1f       	adc	r23, r23
    1d28:	88 1f       	adc	r24, r24
    1d2a:	99 1f       	adc	r25, r25
    1d2c:	06 94       	lsr	r0
    1d2e:	a1 f7       	brne	.-24     	; 0x1d18 <__ftoa_engine+0x74>
    1d30:	05 90       	lpm	r0, Z+
    1d32:	07 94       	ror	r0
    1d34:	28 f4       	brcc	.+10     	; 0x1d40 <__ftoa_engine+0x9c>
    1d36:	e7 0e       	add	r14, r23
    1d38:	f8 1e       	adc	r15, r24
    1d3a:	49 1f       	adc	r20, r25
    1d3c:	56 1f       	adc	r21, r22
    1d3e:	c1 1d       	adc	r28, r1
    1d40:	77 0f       	add	r23, r23
    1d42:	88 1f       	adc	r24, r24
    1d44:	99 1f       	adc	r25, r25
    1d46:	66 1f       	adc	r22, r22
    1d48:	06 94       	lsr	r0
    1d4a:	a1 f7       	brne	.-24     	; 0x1d34 <__ftoa_engine+0x90>
    1d4c:	05 90       	lpm	r0, Z+
    1d4e:	07 94       	ror	r0
    1d50:	28 f4       	brcc	.+10     	; 0x1d5c <__ftoa_engine+0xb8>
    1d52:	f8 0e       	add	r15, r24
    1d54:	49 1f       	adc	r20, r25
    1d56:	56 1f       	adc	r21, r22
    1d58:	c7 1f       	adc	r28, r23
    1d5a:	d1 1d       	adc	r29, r1
    1d5c:	88 0f       	add	r24, r24
    1d5e:	99 1f       	adc	r25, r25
    1d60:	66 1f       	adc	r22, r22
    1d62:	77 1f       	adc	r23, r23
    1d64:	06 94       	lsr	r0
    1d66:	a1 f7       	brne	.-24     	; 0x1d50 <__ftoa_engine+0xac>
    1d68:	05 90       	lpm	r0, Z+
    1d6a:	07 94       	ror	r0
    1d6c:	20 f4       	brcc	.+8      	; 0x1d76 <__ftoa_engine+0xd2>
    1d6e:	49 0f       	add	r20, r25
    1d70:	56 1f       	adc	r21, r22
    1d72:	c7 1f       	adc	r28, r23
    1d74:	d8 1f       	adc	r29, r24
    1d76:	99 0f       	add	r25, r25
    1d78:	66 1f       	adc	r22, r22
    1d7a:	77 1f       	adc	r23, r23
    1d7c:	88 1f       	adc	r24, r24
    1d7e:	06 94       	lsr	r0
    1d80:	a9 f7       	brne	.-22     	; 0x1d6c <__ftoa_engine+0xc8>
    1d82:	84 91       	lpm	r24, Z
    1d84:	10 95       	com	r17
    1d86:	17 70       	andi	r17, 0x07	; 7
    1d88:	41 f0       	breq	.+16     	; 0x1d9a <__ftoa_engine+0xf6>
    1d8a:	d6 95       	lsr	r29
    1d8c:	c7 95       	ror	r28
    1d8e:	57 95       	ror	r21
    1d90:	47 95       	ror	r20
    1d92:	f7 94       	ror	r15
    1d94:	e7 94       	ror	r14
    1d96:	1a 95       	dec	r17
    1d98:	c1 f7       	brne	.-16     	; 0x1d8a <__ftoa_engine+0xe6>
    1d9a:	e0 e7       	ldi	r30, 0x70	; 112
    1d9c:	f0 e0       	ldi	r31, 0x00	; 0
    1d9e:	68 94       	set
    1da0:	15 90       	lpm	r1, Z+
    1da2:	15 91       	lpm	r17, Z+
    1da4:	35 91       	lpm	r19, Z+
    1da6:	65 91       	lpm	r22, Z+
    1da8:	95 91       	lpm	r25, Z+
    1daa:	05 90       	lpm	r0, Z+
    1dac:	7f e2       	ldi	r23, 0x2F	; 47
    1dae:	73 95       	inc	r23
    1db0:	e1 18       	sub	r14, r1
    1db2:	f1 0a       	sbc	r15, r17
    1db4:	43 0b       	sbc	r20, r19
    1db6:	56 0b       	sbc	r21, r22
    1db8:	c9 0b       	sbc	r28, r25
    1dba:	d0 09       	sbc	r29, r0
    1dbc:	c0 f7       	brcc	.-16     	; 0x1dae <__ftoa_engine+0x10a>
    1dbe:	e1 0c       	add	r14, r1
    1dc0:	f1 1e       	adc	r15, r17
    1dc2:	43 1f       	adc	r20, r19
    1dc4:	56 1f       	adc	r21, r22
    1dc6:	c9 1f       	adc	r28, r25
    1dc8:	d0 1d       	adc	r29, r0
    1dca:	7e f4       	brtc	.+30     	; 0x1dea <__ftoa_engine+0x146>
    1dcc:	70 33       	cpi	r23, 0x30	; 48
    1dce:	11 f4       	brne	.+4      	; 0x1dd4 <__ftoa_engine+0x130>
    1dd0:	8a 95       	dec	r24
    1dd2:	e6 cf       	rjmp	.-52     	; 0x1da0 <__ftoa_engine+0xfc>
    1dd4:	e8 94       	clt
    1dd6:	01 50       	subi	r16, 0x01	; 1
    1dd8:	30 f0       	brcs	.+12     	; 0x1de6 <__ftoa_engine+0x142>
    1dda:	08 0f       	add	r16, r24
    1ddc:	0a f4       	brpl	.+2      	; 0x1de0 <__ftoa_engine+0x13c>
    1dde:	00 27       	eor	r16, r16
    1de0:	02 17       	cp	r16, r18
    1de2:	08 f4       	brcc	.+2      	; 0x1de6 <__ftoa_engine+0x142>
    1de4:	20 2f       	mov	r18, r16
    1de6:	23 95       	inc	r18
    1de8:	02 2f       	mov	r16, r18
    1dea:	7a 33       	cpi	r23, 0x3A	; 58
    1dec:	28 f0       	brcs	.+10     	; 0x1df8 <__ftoa_engine+0x154>
    1dee:	79 e3       	ldi	r23, 0x39	; 57
    1df0:	7d 93       	st	X+, r23
    1df2:	2a 95       	dec	r18
    1df4:	e9 f7       	brne	.-6      	; 0x1df0 <__ftoa_engine+0x14c>
    1df6:	10 c0       	rjmp	.+32     	; 0x1e18 <__ftoa_engine+0x174>
    1df8:	7d 93       	st	X+, r23
    1dfa:	2a 95       	dec	r18
    1dfc:	89 f6       	brne	.-94     	; 0x1da0 <__ftoa_engine+0xfc>
    1dfe:	06 94       	lsr	r0
    1e00:	97 95       	ror	r25
    1e02:	67 95       	ror	r22
    1e04:	37 95       	ror	r19
    1e06:	17 95       	ror	r17
    1e08:	17 94       	ror	r1
    1e0a:	e1 18       	sub	r14, r1
    1e0c:	f1 0a       	sbc	r15, r17
    1e0e:	43 0b       	sbc	r20, r19
    1e10:	56 0b       	sbc	r21, r22
    1e12:	c9 0b       	sbc	r28, r25
    1e14:	d0 09       	sbc	r29, r0
    1e16:	98 f0       	brcs	.+38     	; 0x1e3e <__ftoa_engine+0x19a>
    1e18:	23 95       	inc	r18
    1e1a:	7e 91       	ld	r23, -X
    1e1c:	73 95       	inc	r23
    1e1e:	7a 33       	cpi	r23, 0x3A	; 58
    1e20:	08 f0       	brcs	.+2      	; 0x1e24 <__ftoa_engine+0x180>
    1e22:	70 e3       	ldi	r23, 0x30	; 48
    1e24:	7c 93       	st	X, r23
    1e26:	20 13       	cpse	r18, r16
    1e28:	b8 f7       	brcc	.-18     	; 0x1e18 <__ftoa_engine+0x174>
    1e2a:	7e 91       	ld	r23, -X
    1e2c:	70 61       	ori	r23, 0x10	; 16
    1e2e:	7d 93       	st	X+, r23
    1e30:	30 f0       	brcs	.+12     	; 0x1e3e <__ftoa_engine+0x19a>
    1e32:	83 95       	inc	r24
    1e34:	71 e3       	ldi	r23, 0x31	; 49
    1e36:	7d 93       	st	X+, r23
    1e38:	70 e3       	ldi	r23, 0x30	; 48
    1e3a:	2a 95       	dec	r18
    1e3c:	e1 f7       	brne	.-8      	; 0x1e36 <__ftoa_engine+0x192>
    1e3e:	11 24       	eor	r1, r1
    1e40:	ef 90       	pop	r14
    1e42:	ff 90       	pop	r15
    1e44:	0f 91       	pop	r16
    1e46:	1f 91       	pop	r17
    1e48:	cf 91       	pop	r28
    1e4a:	df 91       	pop	r29
    1e4c:	99 27       	eor	r25, r25
    1e4e:	87 fd       	sbrc	r24, 7
    1e50:	90 95       	com	r25
    1e52:	08 95       	ret

00001e54 <strnlen_P>:
    1e54:	fc 01       	movw	r30, r24
    1e56:	05 90       	lpm	r0, Z+
    1e58:	61 50       	subi	r22, 0x01	; 1
    1e5a:	70 40       	sbci	r23, 0x00	; 0
    1e5c:	01 10       	cpse	r0, r1
    1e5e:	d8 f7       	brcc	.-10     	; 0x1e56 <strnlen_P+0x2>
    1e60:	80 95       	com	r24
    1e62:	90 95       	com	r25
    1e64:	8e 0f       	add	r24, r30
    1e66:	9f 1f       	adc	r25, r31
    1e68:	08 95       	ret

00001e6a <strnlen>:
    1e6a:	fc 01       	movw	r30, r24
    1e6c:	61 50       	subi	r22, 0x01	; 1
    1e6e:	70 40       	sbci	r23, 0x00	; 0
    1e70:	01 90       	ld	r0, Z+
    1e72:	01 10       	cpse	r0, r1
    1e74:	d8 f7       	brcc	.-10     	; 0x1e6c <strnlen+0x2>
    1e76:	80 95       	com	r24
    1e78:	90 95       	com	r25
    1e7a:	8e 0f       	add	r24, r30
    1e7c:	9f 1f       	adc	r25, r31
    1e7e:	08 95       	ret

00001e80 <fputc>:
    1e80:	0f 93       	push	r16
    1e82:	1f 93       	push	r17
    1e84:	cf 93       	push	r28
    1e86:	df 93       	push	r29
    1e88:	fb 01       	movw	r30, r22
    1e8a:	23 81       	ldd	r18, Z+3	; 0x03
    1e8c:	21 fd       	sbrc	r18, 1
    1e8e:	03 c0       	rjmp	.+6      	; 0x1e96 <fputc+0x16>
    1e90:	8f ef       	ldi	r24, 0xFF	; 255
    1e92:	9f ef       	ldi	r25, 0xFF	; 255
    1e94:	2c c0       	rjmp	.+88     	; 0x1eee <fputc+0x6e>
    1e96:	22 ff       	sbrs	r18, 2
    1e98:	16 c0       	rjmp	.+44     	; 0x1ec6 <fputc+0x46>
    1e9a:	46 81       	ldd	r20, Z+6	; 0x06
    1e9c:	57 81       	ldd	r21, Z+7	; 0x07
    1e9e:	24 81       	ldd	r18, Z+4	; 0x04
    1ea0:	35 81       	ldd	r19, Z+5	; 0x05
    1ea2:	42 17       	cp	r20, r18
    1ea4:	53 07       	cpc	r21, r19
    1ea6:	44 f4       	brge	.+16     	; 0x1eb8 <fputc+0x38>
    1ea8:	a0 81       	ld	r26, Z
    1eaa:	b1 81       	ldd	r27, Z+1	; 0x01
    1eac:	9d 01       	movw	r18, r26
    1eae:	2f 5f       	subi	r18, 0xFF	; 255
    1eb0:	3f 4f       	sbci	r19, 0xFF	; 255
    1eb2:	31 83       	std	Z+1, r19	; 0x01
    1eb4:	20 83       	st	Z, r18
    1eb6:	8c 93       	st	X, r24
    1eb8:	26 81       	ldd	r18, Z+6	; 0x06
    1eba:	37 81       	ldd	r19, Z+7	; 0x07
    1ebc:	2f 5f       	subi	r18, 0xFF	; 255
    1ebe:	3f 4f       	sbci	r19, 0xFF	; 255
    1ec0:	37 83       	std	Z+7, r19	; 0x07
    1ec2:	26 83       	std	Z+6, r18	; 0x06
    1ec4:	14 c0       	rjmp	.+40     	; 0x1eee <fputc+0x6e>
    1ec6:	8b 01       	movw	r16, r22
    1ec8:	ec 01       	movw	r28, r24
    1eca:	fb 01       	movw	r30, r22
    1ecc:	00 84       	ldd	r0, Z+8	; 0x08
    1ece:	f1 85       	ldd	r31, Z+9	; 0x09
    1ed0:	e0 2d       	mov	r30, r0
    1ed2:	09 95       	icall
    1ed4:	89 2b       	or	r24, r25
    1ed6:	e1 f6       	brne	.-72     	; 0x1e90 <fputc+0x10>
    1ed8:	d8 01       	movw	r26, r16
    1eda:	16 96       	adiw	r26, 0x06	; 6
    1edc:	8d 91       	ld	r24, X+
    1ede:	9c 91       	ld	r25, X
    1ee0:	17 97       	sbiw	r26, 0x07	; 7
    1ee2:	01 96       	adiw	r24, 0x01	; 1
    1ee4:	17 96       	adiw	r26, 0x07	; 7
    1ee6:	9c 93       	st	X, r25
    1ee8:	8e 93       	st	-X, r24
    1eea:	16 97       	sbiw	r26, 0x06	; 6
    1eec:	ce 01       	movw	r24, r28
    1eee:	df 91       	pop	r29
    1ef0:	cf 91       	pop	r28
    1ef2:	1f 91       	pop	r17
    1ef4:	0f 91       	pop	r16
    1ef6:	08 95       	ret

00001ef8 <sprintf>:
    1ef8:	ae e0       	ldi	r26, 0x0E	; 14
    1efa:	b0 e0       	ldi	r27, 0x00	; 0
    1efc:	e2 e8       	ldi	r30, 0x82	; 130
    1efe:	ff e0       	ldi	r31, 0x0F	; 15
    1f00:	0c 94 29 0e 	jmp	0x1c52	; 0x1c52 <__prologue_saves__+0x1c>
    1f04:	0d 89       	ldd	r16, Y+21	; 0x15
    1f06:	1e 89       	ldd	r17, Y+22	; 0x16
    1f08:	86 e0       	ldi	r24, 0x06	; 6
    1f0a:	8c 83       	std	Y+4, r24	; 0x04
    1f0c:	1a 83       	std	Y+2, r17	; 0x02
    1f0e:	09 83       	std	Y+1, r16	; 0x01
    1f10:	8f ef       	ldi	r24, 0xFF	; 255
    1f12:	9f e7       	ldi	r25, 0x7F	; 127
    1f14:	9e 83       	std	Y+6, r25	; 0x06
    1f16:	8d 83       	std	Y+5, r24	; 0x05
    1f18:	ae 01       	movw	r20, r28
    1f1a:	47 5e       	subi	r20, 0xE7	; 231
    1f1c:	5f 4f       	sbci	r21, 0xFF	; 255
    1f1e:	6f 89       	ldd	r22, Y+23	; 0x17
    1f20:	78 8d       	ldd	r23, Y+24	; 0x18
    1f22:	ce 01       	movw	r24, r28
    1f24:	01 96       	adiw	r24, 0x01	; 1
    1f26:	0e 94 9e 0a 	call	0x153c	; 0x153c <vfprintf>
    1f2a:	ef 81       	ldd	r30, Y+7	; 0x07
    1f2c:	f8 85       	ldd	r31, Y+8	; 0x08
    1f2e:	e0 0f       	add	r30, r16
    1f30:	f1 1f       	adc	r31, r17
    1f32:	10 82       	st	Z, r1
    1f34:	2e 96       	adiw	r28, 0x0e	; 14
    1f36:	e4 e0       	ldi	r30, 0x04	; 4
    1f38:	0c 94 45 0e 	jmp	0x1c8a	; 0x1c8a <__epilogue_restores__+0x1c>

00001f3c <__ultoa_invert>:
    1f3c:	fa 01       	movw	r30, r20
    1f3e:	aa 27       	eor	r26, r26
    1f40:	28 30       	cpi	r18, 0x08	; 8
    1f42:	51 f1       	breq	.+84     	; 0x1f98 <__ultoa_invert+0x5c>
    1f44:	20 31       	cpi	r18, 0x10	; 16
    1f46:	81 f1       	breq	.+96     	; 0x1fa8 <__ultoa_invert+0x6c>
    1f48:	e8 94       	clt
    1f4a:	6f 93       	push	r22
    1f4c:	6e 7f       	andi	r22, 0xFE	; 254
    1f4e:	6e 5f       	subi	r22, 0xFE	; 254
    1f50:	7f 4f       	sbci	r23, 0xFF	; 255
    1f52:	8f 4f       	sbci	r24, 0xFF	; 255
    1f54:	9f 4f       	sbci	r25, 0xFF	; 255
    1f56:	af 4f       	sbci	r26, 0xFF	; 255
    1f58:	b1 e0       	ldi	r27, 0x01	; 1
    1f5a:	3e d0       	rcall	.+124    	; 0x1fd8 <__ultoa_invert+0x9c>
    1f5c:	b4 e0       	ldi	r27, 0x04	; 4
    1f5e:	3c d0       	rcall	.+120    	; 0x1fd8 <__ultoa_invert+0x9c>
    1f60:	67 0f       	add	r22, r23
    1f62:	78 1f       	adc	r23, r24
    1f64:	89 1f       	adc	r24, r25
    1f66:	9a 1f       	adc	r25, r26
    1f68:	a1 1d       	adc	r26, r1
    1f6a:	68 0f       	add	r22, r24
    1f6c:	79 1f       	adc	r23, r25
    1f6e:	8a 1f       	adc	r24, r26
    1f70:	91 1d       	adc	r25, r1
    1f72:	a1 1d       	adc	r26, r1
    1f74:	6a 0f       	add	r22, r26
    1f76:	71 1d       	adc	r23, r1
    1f78:	81 1d       	adc	r24, r1
    1f7a:	91 1d       	adc	r25, r1
    1f7c:	a1 1d       	adc	r26, r1
    1f7e:	20 d0       	rcall	.+64     	; 0x1fc0 <__ultoa_invert+0x84>
    1f80:	09 f4       	brne	.+2      	; 0x1f84 <__ultoa_invert+0x48>
    1f82:	68 94       	set
    1f84:	3f 91       	pop	r19
    1f86:	2a e0       	ldi	r18, 0x0A	; 10
    1f88:	26 9f       	mul	r18, r22
    1f8a:	11 24       	eor	r1, r1
    1f8c:	30 19       	sub	r19, r0
    1f8e:	30 5d       	subi	r19, 0xD0	; 208
    1f90:	31 93       	st	Z+, r19
    1f92:	de f6       	brtc	.-74     	; 0x1f4a <__ultoa_invert+0xe>
    1f94:	cf 01       	movw	r24, r30
    1f96:	08 95       	ret
    1f98:	46 2f       	mov	r20, r22
    1f9a:	47 70       	andi	r20, 0x07	; 7
    1f9c:	40 5d       	subi	r20, 0xD0	; 208
    1f9e:	41 93       	st	Z+, r20
    1fa0:	b3 e0       	ldi	r27, 0x03	; 3
    1fa2:	0f d0       	rcall	.+30     	; 0x1fc2 <__ultoa_invert+0x86>
    1fa4:	c9 f7       	brne	.-14     	; 0x1f98 <__ultoa_invert+0x5c>
    1fa6:	f6 cf       	rjmp	.-20     	; 0x1f94 <__ultoa_invert+0x58>
    1fa8:	46 2f       	mov	r20, r22
    1faa:	4f 70       	andi	r20, 0x0F	; 15
    1fac:	40 5d       	subi	r20, 0xD0	; 208
    1fae:	4a 33       	cpi	r20, 0x3A	; 58
    1fb0:	18 f0       	brcs	.+6      	; 0x1fb8 <__ultoa_invert+0x7c>
    1fb2:	49 5d       	subi	r20, 0xD9	; 217
    1fb4:	31 fd       	sbrc	r19, 1
    1fb6:	40 52       	subi	r20, 0x20	; 32
    1fb8:	41 93       	st	Z+, r20
    1fba:	02 d0       	rcall	.+4      	; 0x1fc0 <__ultoa_invert+0x84>
    1fbc:	a9 f7       	brne	.-22     	; 0x1fa8 <__ultoa_invert+0x6c>
    1fbe:	ea cf       	rjmp	.-44     	; 0x1f94 <__ultoa_invert+0x58>
    1fc0:	b4 e0       	ldi	r27, 0x04	; 4
    1fc2:	a6 95       	lsr	r26
    1fc4:	97 95       	ror	r25
    1fc6:	87 95       	ror	r24
    1fc8:	77 95       	ror	r23
    1fca:	67 95       	ror	r22
    1fcc:	ba 95       	dec	r27
    1fce:	c9 f7       	brne	.-14     	; 0x1fc2 <__ultoa_invert+0x86>
    1fd0:	00 97       	sbiw	r24, 0x00	; 0
    1fd2:	61 05       	cpc	r22, r1
    1fd4:	71 05       	cpc	r23, r1
    1fd6:	08 95       	ret
    1fd8:	9b 01       	movw	r18, r22
    1fda:	ac 01       	movw	r20, r24
    1fdc:	0a 2e       	mov	r0, r26
    1fde:	06 94       	lsr	r0
    1fe0:	57 95       	ror	r21
    1fe2:	47 95       	ror	r20
    1fe4:	37 95       	ror	r19
    1fe6:	27 95       	ror	r18
    1fe8:	ba 95       	dec	r27
    1fea:	c9 f7       	brne	.-14     	; 0x1fde <__ultoa_invert+0xa2>
    1fec:	62 0f       	add	r22, r18
    1fee:	73 1f       	adc	r23, r19
    1ff0:	84 1f       	adc	r24, r20
    1ff2:	95 1f       	adc	r25, r21
    1ff4:	a0 1d       	adc	r26, r0
    1ff6:	08 95       	ret

00001ff8 <_exit>:
    1ff8:	f8 94       	cli

00001ffa <__stop_program>:
    1ffa:	ff cf       	rjmp	.-2      	; 0x1ffa <__stop_program>
