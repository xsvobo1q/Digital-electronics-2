
ParkingAssistant_HC-SR04.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .data         00000062  00800100  0000216e  00002202  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  1 .text         0000216e  00000000  00000000  00000094  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  2 .bss          00000050  00800162  00800162  00002264  2**0
                  ALLOC
  3 .comment      0000005c  00000000  00000000  00002264  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 00000040  00000000  00000000  000022c0  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000198  00000000  00000000  00002300  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00002235  00000000  00000000  00002498  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d02  00000000  00000000  000046cd  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   000011ab  00000000  00000000  000053cf  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000450  00000000  00000000  0000657c  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    00000794  00000000  00000000  000069cc  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    000011c4  00000000  00000000  00007160  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000178  00000000  00000000  00008324  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
       0:	0c 94 b5 00 	jmp	0x16a	; 0x16a <__ctors_end>
       4:	0c 94 ca 01 	jmp	0x394	; 0x394 <__vector_1>
       8:	0c 94 ad 01 	jmp	0x35a	; 0x35a <__vector_2>
       c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      10:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      14:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      18:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      1c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      20:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      24:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      28:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      2c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      30:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      34:	0c 94 40 02 	jmp	0x480	; 0x480 <__vector_13>
      38:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      3c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      40:	0c 94 e7 01 	jmp	0x3ce	; 0x3ce <__vector_16>
      44:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      48:	0c 94 ba 08 	jmp	0x1174	; 0x1174 <__vector_18>
      4c:	0c 94 e8 08 	jmp	0x11d0	; 0x11d0 <__vector_19>
      50:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      54:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      58:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      5c:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      60:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>
      64:	0c 94 d2 00 	jmp	0x1a4	; 0x1a4 <__bad_interrupt>

00000068 <__trampolines_end>:
      68:	6e 61       	ori	r22, 0x1E	; 30
      6a:	6e 00       	.word	0x006e	; ????

0000006c <__c.2332>:
      6c:	69 6e 66 00 00 40 7a 10 f3 5a 00 a0 72 4e 18 09     inf..@z..Z..rN..
      7c:	00 10 a5 d4 e8 00 00 e8 76 48 17 00 00 e4 0b 54     ........vH.....T
      8c:	02 00 00 ca 9a 3b 00 00 00 e1 f5 05 00 00 80 96     .....;..........
      9c:	98 00 00 00 40 42 0f 00 00 00 a0 86 01 00 00 00     ....@B..........
      ac:	10 27 00 00 00 00 e8 03 00 00 00 00 64 00 00 00     .'..........d...
      bc:	00 00 0a 00 00 00 00 00 01 00 00 00 00 00 2c 76     ..............,v
      cc:	d8 88 dc 67 4f 08 23 df c1 df ae 59 e1 b1 b7 96     ...gO.#....Y....
      dc:	e5 e3 e4 53 c6 3a e6 51 99 76 96 e8 e6 c2 84 26     ...S.:.Q.v.....&
      ec:	eb 89 8c 9b 62 ed 40 7c 6f fc ef bc 9c 9f 40 f2     ....b.@|o.....@.
      fc:	ba a5 6f a5 f4 90 05 5a 2a f7 5c 93 6b 6c f9 67     ..o....Z*.\.kl.g
     10c:	6d c1 1b fc e0 e4 0d 47 fe f5 20 e6 b5 00 d0 ed     m......G.. .....
     11c:	90 2e 03 00 94 35 77 05 00 80 84 1e 08 00 00 20     .....5w........ 
     12c:	4e 0a 00 00 00 c8 0c 33 33 33 33 0f 98 6e 12 83     N......3333..n..
     13c:	11 41 ef 8d 21 14 89 3b e6 55 16 cf fe e6 db 18     .A..!..;.U......
     14c:	d1 84 4b 38 1b f7 7c 1d 90 1d a4 bb e4 24 20 32     ..K8..|......$ 2
     15c:	84 72 5e 22 81 00 c9 f1 24 ec a1 e5 3d 27           .r^"....$...='

0000016a <__ctors_end>:
     16a:	11 24       	eor	r1, r1
     16c:	1f be       	out	0x3f, r1	; 63
     16e:	cf ef       	ldi	r28, 0xFF	; 255
     170:	d8 e0       	ldi	r29, 0x08	; 8
     172:	de bf       	out	0x3e, r29	; 62
     174:	cd bf       	out	0x3d, r28	; 61

00000176 <__do_copy_data>:
     176:	11 e0       	ldi	r17, 0x01	; 1
     178:	a0 e0       	ldi	r26, 0x00	; 0
     17a:	b1 e0       	ldi	r27, 0x01	; 1
     17c:	ee e6       	ldi	r30, 0x6E	; 110
     17e:	f1 e2       	ldi	r31, 0x21	; 33
     180:	02 c0       	rjmp	.+4      	; 0x186 <__do_copy_data+0x10>
     182:	05 90       	lpm	r0, Z+
     184:	0d 92       	st	X+, r0
     186:	a2 36       	cpi	r26, 0x62	; 98
     188:	b1 07       	cpc	r27, r17
     18a:	d9 f7       	brne	.-10     	; 0x182 <__do_copy_data+0xc>

0000018c <__do_clear_bss>:
     18c:	21 e0       	ldi	r18, 0x01	; 1
     18e:	a2 e6       	ldi	r26, 0x62	; 98
     190:	b1 e0       	ldi	r27, 0x01	; 1
     192:	01 c0       	rjmp	.+2      	; 0x196 <.do_clear_bss_start>

00000194 <.do_clear_bss_loop>:
     194:	1d 92       	st	X+, r1

00000196 <.do_clear_bss_start>:
     196:	a2 3b       	cpi	r26, 0xB2	; 178
     198:	b2 07       	cpc	r27, r18
     19a:	e1 f7       	brne	.-8      	; 0x194 <.do_clear_bss_loop>
     19c:	0e 94 ab 06 	call	0xd56	; 0xd56 <main>
     1a0:	0c 94 b5 10 	jmp	0x216a	; 0x216a <_exit>

000001a4 <__bad_interrupt>:
     1a4:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

000001a8 <GPIO_config_output>:
/*--------------------------------------------------------------------*/
void GPIO_config_input_pullup(volatile uint8_t *reg_name, uint8_t pin_num)
{
    *reg_name = *reg_name & ~(1<<pin_num);  // Data Direction Register
    *reg_name++;                    // Change pointer to Data Register
    *reg_name = *reg_name | (1<<pin_num);   // Data Register
     1a8:	fc 01       	movw	r30, r24
     1aa:	40 81       	ld	r20, Z
     1ac:	21 e0       	ldi	r18, 0x01	; 1
     1ae:	30 e0       	ldi	r19, 0x00	; 0
     1b0:	02 c0       	rjmp	.+4      	; 0x1b6 <GPIO_config_output+0xe>
     1b2:	22 0f       	add	r18, r18
     1b4:	33 1f       	adc	r19, r19
     1b6:	6a 95       	dec	r22
     1b8:	e2 f7       	brpl	.-8      	; 0x1b2 <GPIO_config_output+0xa>
     1ba:	24 2b       	or	r18, r20
     1bc:	20 83       	st	Z, r18
     1be:	08 95       	ret

000001c0 <GPIO_config_input_nopull>:
     1c0:	fc 01       	movw	r30, r24
     1c2:	80 81       	ld	r24, Z
     1c4:	21 e0       	ldi	r18, 0x01	; 1
     1c6:	30 e0       	ldi	r19, 0x00	; 0
     1c8:	02 c0       	rjmp	.+4      	; 0x1ce <GPIO_config_input_nopull+0xe>
     1ca:	22 0f       	add	r18, r18
     1cc:	33 1f       	adc	r19, r19
     1ce:	6a 95       	dec	r22
     1d0:	e2 f7       	brpl	.-8      	; 0x1ca <GPIO_config_input_nopull+0xa>
     1d2:	20 95       	com	r18
     1d4:	82 23       	and	r24, r18
     1d6:	80 83       	st	Z, r24
     1d8:	80 81       	ld	r24, Z
     1da:	81 81       	ldd	r24, Z+1	; 0x01
     1dc:	28 23       	and	r18, r24
     1de:	21 83       	std	Z+1, r18	; 0x01
     1e0:	08 95       	ret

000001e2 <GPIO_write_low>:
	//addresu portu, který nastavíme na žádanou hodnotu
}

/*--------------------------------------------------------------------*/
void GPIO_write_low(volatile uint8_t *reg_name, uint8_t pin_num)
{
     1e2:	fc 01       	movw	r30, r24
    *reg_name = *reg_name & ~(1<<pin_num);
     1e4:	90 81       	ld	r25, Z
     1e6:	21 e0       	ldi	r18, 0x01	; 1
     1e8:	30 e0       	ldi	r19, 0x00	; 0
     1ea:	02 c0       	rjmp	.+4      	; 0x1f0 <GPIO_write_low+0xe>
     1ec:	22 0f       	add	r18, r18
     1ee:	33 1f       	adc	r19, r19
     1f0:	6a 95       	dec	r22
     1f2:	e2 f7       	brpl	.-8      	; 0x1ec <GPIO_write_low+0xa>
     1f4:	20 95       	com	r18
     1f6:	29 23       	and	r18, r25
     1f8:	20 83       	st	Z, r18
     1fa:	08 95       	ret

000001fc <GPIO_write_high>:

/*--------------------------------------------------------------------*/
/* GPIO_write_high */
void GPIO_write_high(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name | (1<<pin_num);
     1fc:	fc 01       	movw	r30, r24
     1fe:	40 81       	ld	r20, Z
     200:	21 e0       	ldi	r18, 0x01	; 1
     202:	30 e0       	ldi	r19, 0x00	; 0
     204:	02 c0       	rjmp	.+4      	; 0x20a <GPIO_write_high+0xe>
     206:	22 0f       	add	r18, r18
     208:	33 1f       	adc	r19, r19
     20a:	6a 95       	dec	r22
     20c:	e2 f7       	brpl	.-8      	; 0x206 <GPIO_write_high+0xa>
     20e:	24 2b       	or	r18, r20
     210:	20 83       	st	Z, r18
     212:	08 95       	ret

00000214 <GPIO_toggle>:

/*--------------------------------------------------------------------*/
/* GPIO_toggle */
void GPIO_toggle(volatile uint8_t *reg_name, uint8_t pin_num)
{
	*reg_name = *reg_name ^ (1<<pin_num);
     214:	fc 01       	movw	r30, r24
     216:	40 81       	ld	r20, Z
     218:	21 e0       	ldi	r18, 0x01	; 1
     21a:	30 e0       	ldi	r19, 0x00	; 0
     21c:	02 c0       	rjmp	.+4      	; 0x222 <GPIO_toggle+0xe>
     21e:	22 0f       	add	r18, r18
     220:	33 1f       	adc	r19, r19
     222:	6a 95       	dec	r22
     224:	e2 f7       	brpl	.-8      	; 0x21e <GPIO_toggle+0xa>
     226:	24 27       	eor	r18, r20
     228:	20 83       	st	Z, r18
     22a:	08 95       	ret

0000022c <toggle_e>:

    while ( (c = pgm_read_byte(progmem_s++)) )
    {
        lcd_putc(c);
    }
}/* lcd_puts_p */
     22c:	29 9a       	sbi	0x05, 1	; 5
     22e:	00 00       	nop
     230:	29 98       	cbi	0x05, 1	; 5
     232:	08 95       	ret

00000234 <lcd_write>:
     234:	cf 93       	push	r28
     236:	c8 2f       	mov	r28, r24
     238:	66 23       	and	r22, r22
     23a:	11 f0       	breq	.+4      	; 0x240 <lcd_write+0xc>
     23c:	28 9a       	sbi	0x05, 0	; 5
     23e:	01 c0       	rjmp	.+2      	; 0x242 <lcd_write+0xe>
     240:	28 98       	cbi	0x05, 0	; 5
     242:	54 9a       	sbi	0x0a, 4	; 10
     244:	55 9a       	sbi	0x0a, 5	; 10
     246:	56 9a       	sbi	0x0a, 6	; 10
     248:	57 9a       	sbi	0x0a, 7	; 10
     24a:	5f 98       	cbi	0x0b, 7	; 11
     24c:	5e 98       	cbi	0x0b, 6	; 11
     24e:	5d 98       	cbi	0x0b, 5	; 11
     250:	5c 98       	cbi	0x0b, 4	; 11
     252:	cc 23       	and	r28, r28
     254:	0c f4       	brge	.+2      	; 0x258 <lcd_write+0x24>
     256:	5f 9a       	sbi	0x0b, 7	; 11
     258:	c6 fd       	sbrc	r28, 6
     25a:	5e 9a       	sbi	0x0b, 6	; 11
     25c:	c5 fd       	sbrc	r28, 5
     25e:	5d 9a       	sbi	0x0b, 5	; 11
     260:	c4 fd       	sbrc	r28, 4
     262:	5c 9a       	sbi	0x0b, 4	; 11
     264:	0e 94 16 01 	call	0x22c	; 0x22c <toggle_e>
     268:	5f 98       	cbi	0x0b, 7	; 11
     26a:	5e 98       	cbi	0x0b, 6	; 11
     26c:	5d 98       	cbi	0x0b, 5	; 11
     26e:	5c 98       	cbi	0x0b, 4	; 11
     270:	c3 fd       	sbrc	r28, 3
     272:	5f 9a       	sbi	0x0b, 7	; 11
     274:	c2 fd       	sbrc	r28, 2
     276:	5e 9a       	sbi	0x0b, 6	; 11
     278:	c1 fd       	sbrc	r28, 1
     27a:	5d 9a       	sbi	0x0b, 5	; 11
     27c:	c0 fd       	sbrc	r28, 0
     27e:	5c 9a       	sbi	0x0b, 4	; 11
     280:	0e 94 16 01 	call	0x22c	; 0x22c <toggle_e>
     284:	5c 9a       	sbi	0x0b, 4	; 11
     286:	5d 9a       	sbi	0x0b, 5	; 11
     288:	5e 9a       	sbi	0x0b, 6	; 11
     28a:	5f 9a       	sbi	0x0b, 7	; 11
     28c:	8a ef       	ldi	r24, 0xFA	; 250
     28e:	8a 95       	dec	r24
     290:	f1 f7       	brne	.-4      	; 0x28e <lcd_write+0x5a>
     292:	cf 91       	pop	r28
     294:	08 95       	ret

00000296 <lcd_command>:
     296:	60 e0       	ldi	r22, 0x00	; 0
     298:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_write>
     29c:	08 95       	ret

0000029e <lcd_gotoxy>:
     29e:	61 11       	cpse	r22, r1
     2a0:	04 c0       	rjmp	.+8      	; 0x2aa <lcd_gotoxy+0xc>
     2a2:	80 58       	subi	r24, 0x80	; 128
     2a4:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_command>
     2a8:	08 95       	ret
     2aa:	80 54       	subi	r24, 0x40	; 64
     2ac:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_command>
     2b0:	08 95       	ret

000002b2 <lcd_clrscr>:
     2b2:	81 e0       	ldi	r24, 0x01	; 1
     2b4:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_command>
     2b8:	08 95       	ret

000002ba <lcd_putc>:
     2ba:	61 e0       	ldi	r22, 0x01	; 1
     2bc:	0e 94 1a 01 	call	0x234	; 0x234 <lcd_write>
     2c0:	08 95       	ret

000002c2 <lcd_puts>:
     2c2:	cf 93       	push	r28
     2c4:	df 93       	push	r29
     2c6:	ec 01       	movw	r28, r24
     2c8:	21 96       	adiw	r28, 0x01	; 1
     2ca:	fc 01       	movw	r30, r24
     2cc:	80 81       	ld	r24, Z
     2ce:	88 23       	and	r24, r24
     2d0:	29 f0       	breq	.+10     	; 0x2dc <lcd_puts+0x1a>
     2d2:	0e 94 5d 01 	call	0x2ba	; 0x2ba <lcd_putc>
     2d6:	89 91       	ld	r24, Y+
     2d8:	81 11       	cpse	r24, r1
     2da:	fb cf       	rjmp	.-10     	; 0x2d2 <lcd_puts+0x10>
     2dc:	df 91       	pop	r29
     2de:	cf 91       	pop	r28
     2e0:	08 95       	ret

000002e2 <lcd_init>:
*                  LCD_DISP_ON_CURSOR      display on, cursor on
*                  LCD_DISP_CURSOR_BLINK   display on, cursor on flashing
*  Returns:  none
*************************************************************************/
void lcd_init(uint8_t dispAttr)
{
     2e2:	cf 93       	push	r28
     2e4:	c8 2f       	mov	r28, r24
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
    }
    else
    {
        /* configure all port bits as output (LCD data and control lines on different ports */
        DDR(LCD_RS_PORT)    |= _BV(LCD_RS_PIN);
     2e6:	20 9a       	sbi	0x04, 0	; 4
        DDR(LCD_RW_PORT)    |= _BV(LCD_RW_PIN);
     2e8:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_E_PORT)     |= _BV(LCD_E_PIN);
     2ea:	21 9a       	sbi	0x04, 1	; 4
        DDR(LCD_DATA0_PORT) |= _BV(LCD_DATA0_PIN);
     2ec:	54 9a       	sbi	0x0a, 4	; 10
        DDR(LCD_DATA1_PORT) |= _BV(LCD_DATA1_PIN);
     2ee:	55 9a       	sbi	0x0a, 5	; 10
        DDR(LCD_DATA2_PORT) |= _BV(LCD_DATA2_PIN);
     2f0:	56 9a       	sbi	0x0a, 6	; 10
        DDR(LCD_DATA3_PORT) |= _BV(LCD_DATA3_PIN);
     2f2:	57 9a       	sbi	0x0a, 7	; 10
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     2f4:	8f e9       	ldi	r24, 0x9F	; 159
     2f6:	9f e0       	ldi	r25, 0x0F	; 15
     2f8:	01 97       	sbiw	r24, 0x01	; 1
     2fa:	f1 f7       	brne	.-4      	; 0x2f8 <lcd_init+0x16>
     2fc:	00 c0       	rjmp	.+0      	; 0x2fe <lcd_init+0x1c>
     2fe:	00 00       	nop
    }
    delay(LCD_DELAY_BOOTUP); /* wait 16ms or more after power-on       */

    /* initial write to lcd is 8bit */
    LCD_DATA1_PORT |= _BV(LCD_DATA1_PIN); // LCD_FUNCTION>>4;
     300:	5d 9a       	sbi	0x0b, 5	; 11
    LCD_DATA0_PORT |= _BV(LCD_DATA0_PIN); // LCD_FUNCTION_8BIT>>4;
     302:	5c 9a       	sbi	0x0b, 4	; 11
    lcd_e_toggle();
     304:	0e 94 16 01 	call	0x22c	; 0x22c <toggle_e>
     308:	81 ee       	ldi	r24, 0xE1	; 225
     30a:	94 e0       	ldi	r25, 0x04	; 4
     30c:	01 97       	sbiw	r24, 0x01	; 1
     30e:	f1 f7       	brne	.-4      	; 0x30c <lcd_init+0x2a>
     310:	00 c0       	rjmp	.+0      	; 0x312 <lcd_init+0x30>
     312:	00 00       	nop
    delay(LCD_DELAY_INIT); /* delay, busy flag can't be checked here */

    /* repeat last command */
    lcd_e_toggle();
     314:	0e 94 16 01 	call	0x22c	; 0x22c <toggle_e>
     318:	95 e1       	ldi	r25, 0x15	; 21
     31a:	9a 95       	dec	r25
     31c:	f1 f7       	brne	.-4      	; 0x31a <lcd_init+0x38>
     31e:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* repeat last command a third time */
    lcd_e_toggle();
     320:	0e 94 16 01 	call	0x22c	; 0x22c <toggle_e>
     324:	85 e1       	ldi	r24, 0x15	; 21
     326:	8a 95       	dec	r24
     328:	f1 f7       	brne	.-4      	; 0x326 <lcd_init+0x44>
     32a:	00 00       	nop
    delay(LCD_DELAY_INIT_REP); /* delay, busy flag can't be checked here */

    /* now configure for 4bit mode */
    LCD_DATA0_PORT &= ~_BV(LCD_DATA0_PIN); // LCD_FUNCTION_4BIT_1LINE>>4
     32c:	5c 98       	cbi	0x0b, 4	; 11
    lcd_e_toggle();
     32e:	0e 94 16 01 	call	0x22c	; 0x22c <toggle_e>
     332:	95 e1       	ldi	r25, 0x15	; 21
     334:	9a 95       	dec	r25
     336:	f1 f7       	brne	.-4      	; 0x334 <lcd_init+0x52>
     338:	00 00       	nop
    /* Display with KS0073 controller requires special commands for enabling 4 line mode */
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_ON);
    lcd_command(KS0073_4LINES_MODE);
    lcd_command(KS0073_EXTENDED_FUNCTION_REGISTER_OFF);
    #else
    lcd_command(LCD_FUNCTION_DEFAULT); /* function set: display lines  */
     33a:	88 e2       	ldi	r24, 0x28	; 40
     33c:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_command>
    #endif
    lcd_command(LCD_DISP_OFF);     /* display off                  */
     340:	88 e0       	ldi	r24, 0x08	; 8
     342:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_command>
    lcd_clrscr();                  /* display clear                */
     346:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_clrscr>
    lcd_command(LCD_MODE_DEFAULT); /* set entry mode               */
     34a:	86 e0       	ldi	r24, 0x06	; 6
     34c:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_command>
    lcd_command(dispAttr);         /* display/cursor control       */
     350:	8c 2f       	mov	r24, r28
     352:	0e 94 4b 01 	call	0x296	; 0x296 <lcd_command>
     356:	cf 91       	pop	r28
     358:	08 95       	ret

0000035a <__vector_2>:
    }
}

/* ISR for Echo from front sensor */
ISR(INT1_vect)
{
     35a:	1f 92       	push	r1
     35c:	0f 92       	push	r0
     35e:	0f b6       	in	r0, 0x3f	; 63
     360:	0f 92       	push	r0
     362:	11 24       	eor	r1, r1
     364:	8f 93       	push	r24
	
	if (help)
     366:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     36a:	88 23       	and	r24, r24
     36c:	19 f0       	breq	.+6      	; 0x374 <__vector_2+0x1a>
	{
		help = false;
     36e:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
     372:	0a c0       	rjmp	.+20     	; 0x388 <__vector_2+0x2e>
	}
	else
	{
 		averaging++;
     374:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <averaging>
     378:	8f 5f       	subi	r24, 0xFF	; 255
     37a:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <averaging>
		trigEnable = 1;
     37e:	81 e0       	ldi	r24, 0x01	; 1
     380:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <trigEnable>
		help = true;
     384:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	}
	
}
     388:	8f 91       	pop	r24
     38a:	0f 90       	pop	r0
     38c:	0f be       	out	0x3f, r0	; 63
     38e:	0f 90       	pop	r0
     390:	1f 90       	pop	r1
     392:	18 95       	reti

00000394 <__vector_1>:

/* ISR for Echo from rear sensor */
ISR(INT0_vect)
{
     394:	1f 92       	push	r1
     396:	0f 92       	push	r0
     398:	0f b6       	in	r0, 0x3f	; 63
     39a:	0f 92       	push	r0
     39c:	11 24       	eor	r1, r1
     39e:	8f 93       	push	r24

	if (help)
     3a0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     3a4:	88 23       	and	r24, r24
     3a6:	19 f0       	breq	.+6      	; 0x3ae <__vector_1+0x1a>
	{
		help = false;
     3a8:	10 92 00 01 	sts	0x0100, r1	; 0x800100 <__data_start>
     3ac:	0a c0       	rjmp	.+20     	; 0x3c2 <__vector_1+0x2e>
	}
	else
	{
		averaging++;
     3ae:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <averaging>
     3b2:	8f 5f       	subi	r24, 0xFF	; 255
     3b4:	80 93 6a 01 	sts	0x016A, r24	; 0x80016a <averaging>
		trigEnable = 1;
     3b8:	81 e0       	ldi	r24, 0x01	; 1
     3ba:	80 93 02 01 	sts	0x0102, r24	; 0x800102 <trigEnable>
		help = true;
     3be:	80 93 00 01 	sts	0x0100, r24	; 0x800100 <__data_start>
	}

}
     3c2:	8f 91       	pop	r24
     3c4:	0f 90       	pop	r0
     3c6:	0f be       	out	0x3f, r0	; 63
     3c8:	0f 90       	pop	r0
     3ca:	1f 90       	pop	r1
     3cc:	18 95       	reti

000003ce <__vector_16>:

/*    ISR for measuring Echo pulse   */
ISR(TIMER0_OVF_vect)
{
     3ce:	1f 92       	push	r1
     3d0:	0f 92       	push	r0
     3d2:	0f b6       	in	r0, 0x3f	; 63
     3d4:	0f 92       	push	r0
     3d6:	11 24       	eor	r1, r1
     3d8:	2f 93       	push	r18
     3da:	3f 93       	push	r19
     3dc:	4f 93       	push	r20
     3de:	5f 93       	push	r21
     3e0:	6f 93       	push	r22
     3e2:	7f 93       	push	r23
     3e4:	8f 93       	push	r24
     3e6:	9f 93       	push	r25
     3e8:	af 93       	push	r26
     3ea:	bf 93       	push	r27
     3ec:	ef 93       	push	r30
     3ee:	ff 93       	push	r31
	if (!help)
     3f0:	80 91 00 01 	lds	r24, 0x0100	; 0x800100 <__data_start>
     3f4:	81 11       	cpse	r24, r1
     3f6:	33 c0       	rjmp	.+102    	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
	{	
		if (mux == 1)
     3f8:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <mux>
     3fc:	81 30       	cpi	r24, 0x01	; 1
     3fe:	b9 f4       	brne	.+46     	; 0x42e <__LOCK_REGION_LENGTH__+0x2e>
		{
			distanceFront += 16;
     400:	60 91 66 01 	lds	r22, 0x0166	; 0x800166 <distanceFront>
     404:	70 91 67 01 	lds	r23, 0x0167	; 0x800167 <distanceFront+0x1>
     408:	80 91 68 01 	lds	r24, 0x0168	; 0x800168 <distanceFront+0x2>
     40c:	90 91 69 01 	lds	r25, 0x0169	; 0x800169 <distanceFront+0x3>
     410:	20 e0       	ldi	r18, 0x00	; 0
     412:	30 e0       	ldi	r19, 0x00	; 0
     414:	40 e8       	ldi	r20, 0x80	; 128
     416:	51 e4       	ldi	r21, 0x41	; 65
     418:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__addsf3>
     41c:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <distanceFront>
     420:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <distanceFront+0x1>
     424:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <distanceFront+0x2>
     428:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <distanceFront+0x3>
     42c:	18 c0       	rjmp	.+48     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
		}else if(mux == 2)
     42e:	82 30       	cpi	r24, 0x02	; 2
     430:	b1 f4       	brne	.+44     	; 0x45e <__LOCK_REGION_LENGTH__+0x5e>
		{
			distanceRear += 16;
     432:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <__data_end>
     436:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <__data_end+0x1>
     43a:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__data_end+0x2>
     43e:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <__data_end+0x3>
     442:	20 e0       	ldi	r18, 0x00	; 0
     444:	30 e0       	ldi	r19, 0x00	; 0
     446:	40 e8       	ldi	r20, 0x80	; 128
     448:	51 e4       	ldi	r21, 0x41	; 65
     44a:	0e 94 50 09 	call	0x12a0	; 0x12a0 <__addsf3>
     44e:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <__data_end>
     452:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <__data_end+0x1>
     456:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end+0x2>
     45a:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <__data_end+0x3>
		}
	}
}
     45e:	ff 91       	pop	r31
     460:	ef 91       	pop	r30
     462:	bf 91       	pop	r27
     464:	af 91       	pop	r26
     466:	9f 91       	pop	r25
     468:	8f 91       	pop	r24
     46a:	7f 91       	pop	r23
     46c:	6f 91       	pop	r22
     46e:	5f 91       	pop	r21
     470:	4f 91       	pop	r20
     472:	3f 91       	pop	r19
     474:	2f 91       	pop	r18
     476:	0f 90       	pop	r0
     478:	0f be       	out	0x3f, r0	; 63
     47a:	0f 90       	pop	r0
     47c:	1f 90       	pop	r1
     47e:	18 95       	reti

00000480 <__vector_13>:

/*    ISR for timer, that turning buzzer off/on   */
ISR(TIMER1_OVF_vect)
{
     480:	1f 92       	push	r1
     482:	0f 92       	push	r0
     484:	0f b6       	in	r0, 0x3f	; 63
     486:	0f 92       	push	r0
     488:	11 24       	eor	r1, r1
     48a:	2f 93       	push	r18
     48c:	3f 93       	push	r19
     48e:	4f 93       	push	r20
     490:	5f 93       	push	r21
     492:	6f 93       	push	r22
     494:	7f 93       	push	r23
     496:	8f 93       	push	r24
     498:	9f 93       	push	r25
     49a:	af 93       	push	r26
     49c:	bf 93       	push	r27
     49e:	ef 93       	push	r30
     4a0:	ff 93       	push	r31
	GPIO_toggle(&PORTB, buzzer);
     4a2:	64 e0       	ldi	r22, 0x04	; 4
     4a4:	85 e2       	ldi	r24, 0x25	; 37
     4a6:	90 e0       	ldi	r25, 0x00	; 0
     4a8:	0e 94 0a 01 	call	0x214	; 0x214 <GPIO_toggle>
	TCNT1 = beepTiming;
     4ac:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <beepTiming>
     4b0:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <beepTiming+0x1>
     4b4:	90 93 85 00 	sts	0x0085, r25	; 0x800085 <__DATA_REGION_ORIGIN__+0x25>
     4b8:	80 93 84 00 	sts	0x0084, r24	; 0x800084 <__DATA_REGION_ORIGIN__+0x24>
}
     4bc:	ff 91       	pop	r31
     4be:	ef 91       	pop	r30
     4c0:	bf 91       	pop	r27
     4c2:	af 91       	pop	r26
     4c4:	9f 91       	pop	r25
     4c6:	8f 91       	pop	r24
     4c8:	7f 91       	pop	r23
     4ca:	6f 91       	pop	r22
     4cc:	5f 91       	pop	r21
     4ce:	4f 91       	pop	r20
     4d0:	3f 91       	pop	r19
     4d2:	2f 91       	pop	r18
     4d4:	0f 90       	pop	r0
     4d6:	0f be       	out	0x3f, r0	; 63
     4d8:	0f 90       	pop	r0
     4da:	1f 90       	pop	r1
     4dc:	18 95       	reti

000004de <displayValues>:

int displayValues(float distanceRear, float distanceFront){
     4de:	2f 92       	push	r2
     4e0:	3f 92       	push	r3
     4e2:	4f 92       	push	r4
     4e4:	5f 92       	push	r5
     4e6:	6f 92       	push	r6
     4e8:	7f 92       	push	r7
     4ea:	8f 92       	push	r8
     4ec:	9f 92       	push	r9
     4ee:	af 92       	push	r10
     4f0:	bf 92       	push	r11
     4f2:	cf 92       	push	r12
     4f4:	df 92       	push	r13
     4f6:	ef 92       	push	r14
     4f8:	ff 92       	push	r15
     4fa:	0f 93       	push	r16
     4fc:	1f 93       	push	r17
     4fe:	cf 93       	push	r28
     500:	df 93       	push	r29
     502:	cd b7       	in	r28, 0x3d	; 61
     504:	de b7       	in	r29, 0x3e	; 62
     506:	c4 56       	subi	r28, 0x64	; 100
     508:	d1 09       	sbc	r29, r1
     50a:	0f b6       	in	r0, 0x3f	; 63
     50c:	f8 94       	cli
     50e:	de bf       	out	0x3e, r29	; 62
     510:	0f be       	out	0x3f, r0	; 63
     512:	cd bf       	out	0x3d, r28	; 61
     514:	49 01       	movw	r8, r18
     516:	5a 01       	movw	r10, r20
		
	char uartString[50];
	char dispString[50];
	float dist = 0;	

	distanceRear = (distanceRear/2) * 0.0343;
     518:	20 e0       	ldi	r18, 0x00	; 0
     51a:	30 e0       	ldi	r19, 0x00	; 0
     51c:	40 e0       	ldi	r20, 0x00	; 0
     51e:	5f e3       	ldi	r21, 0x3F	; 63
     520:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__mulsf3>
     524:	28 e2       	ldi	r18, 0x28	; 40
     526:	3e e7       	ldi	r19, 0x7E	; 126
     528:	4c e0       	ldi	r20, 0x0C	; 12
     52a:	5d e3       	ldi	r21, 0x3D	; 61
     52c:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__mulsf3>
     530:	d6 2e       	mov	r13, r22
     532:	c7 2e       	mov	r12, r23
     534:	78 2e       	mov	r7, r24
     536:	69 2e       	mov	r6, r25
	distanceFront = (distanceFront/2) * 0.0343;
     538:	20 e0       	ldi	r18, 0x00	; 0
     53a:	30 e0       	ldi	r19, 0x00	; 0
     53c:	40 e0       	ldi	r20, 0x00	; 0
     53e:	5f e3       	ldi	r21, 0x3F	; 63
     540:	c5 01       	movw	r24, r10
     542:	b4 01       	movw	r22, r8
     544:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__mulsf3>
     548:	28 e2       	ldi	r18, 0x28	; 40
     54a:	3e e7       	ldi	r19, 0x7E	; 126
     54c:	4c e0       	ldi	r20, 0x0C	; 12
     54e:	5d e3       	ldi	r21, 0x3D	; 61
     550:	0e 94 ea 0a 	call	0x15d4	; 0x15d4 <__mulsf3>
     554:	e6 2e       	mov	r14, r22
     556:	f7 2e       	mov	r15, r23
     558:	08 2f       	mov	r16, r24
     55a:	19 2f       	mov	r17, r25
	
	if (distanceRear < distanceFront)
     55c:	76 2f       	mov	r23, r22
     55e:	27 2f       	mov	r18, r23
     560:	3f 2d       	mov	r19, r15
     562:	40 2f       	mov	r20, r16
     564:	51 2f       	mov	r21, r17
     566:	6d 2d       	mov	r22, r13
     568:	7c 2d       	mov	r23, r12
     56a:	87 2d       	mov	r24, r7
     56c:	96 2d       	mov	r25, r6
     56e:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     572:	88 23       	and	r24, r24
     574:	2c f0       	brlt	.+10     	; 0x580 <displayValues+0xa2>
	{
		dist = distanceRear;
	} 
	else
	{
		dist = distanceFront;
     576:	5e 2c       	mov	r5, r14
     578:	4f 2c       	mov	r4, r15
     57a:	30 2e       	mov	r3, r16
     57c:	21 2e       	mov	r2, r17
     57e:	04 c0       	rjmp	.+8      	; 0x588 <displayValues+0xaa>
	distanceRear = (distanceRear/2) * 0.0343;
	distanceFront = (distanceFront/2) * 0.0343;
	
	if (distanceRear < distanceFront)
	{
		dist = distanceRear;
     580:	5d 2c       	mov	r5, r13
     582:	4c 2c       	mov	r4, r12
     584:	37 2c       	mov	r3, r7
     586:	26 2c       	mov	r2, r6
	else
	{
		dist = distanceFront;
	}
	
	if ((distanceFront <= 10) | (distanceRear <= 10))
     588:	bb 24       	eor	r11, r11
     58a:	b3 94       	inc	r11
     58c:	20 e0       	ldi	r18, 0x00	; 0
     58e:	30 e0       	ldi	r19, 0x00	; 0
     590:	40 e2       	ldi	r20, 0x20	; 32
     592:	51 e4       	ldi	r21, 0x41	; 65
     594:	6e 2d       	mov	r22, r14
     596:	7f 2d       	mov	r23, r15
     598:	80 2f       	mov	r24, r16
     59a:	91 2f       	mov	r25, r17
     59c:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     5a0:	18 16       	cp	r1, r24
     5a2:	0c f4       	brge	.+2      	; 0x5a6 <displayValues+0xc8>
     5a4:	b1 2c       	mov	r11, r1
     5a6:	b1 10       	cpse	r11, r1
     5a8:	11 c0       	rjmp	.+34     	; 0x5cc <displayValues+0xee>
     5aa:	bb 24       	eor	r11, r11
     5ac:	b3 94       	inc	r11
     5ae:	20 e0       	ldi	r18, 0x00	; 0
     5b0:	30 e0       	ldi	r19, 0x00	; 0
     5b2:	40 e2       	ldi	r20, 0x20	; 32
     5b4:	51 e4       	ldi	r21, 0x41	; 65
     5b6:	6d 2d       	mov	r22, r13
     5b8:	7c 2d       	mov	r23, r12
     5ba:	87 2d       	mov	r24, r7
     5bc:	96 2d       	mov	r25, r6
     5be:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     5c2:	18 16       	cp	r1, r24
     5c4:	0c f4       	brge	.+2      	; 0x5c8 <displayValues+0xea>
     5c6:	b1 2c       	mov	r11, r1
     5c8:	bb 20       	and	r11, r11
     5ca:	59 f0       	breq	.+22     	; 0x5e2 <displayValues+0x104>
	{
		TIM1_overflow_interrupt_disable();
     5cc:	ef e6       	ldi	r30, 0x6F	; 111
     5ce:	f0 e0       	ldi	r31, 0x00	; 0
     5d0:	80 81       	ld	r24, Z
     5d2:	8e 7f       	andi	r24, 0xFE	; 254
     5d4:	80 83       	st	Z, r24
		GPIO_write_high(&PORTB, buzzer);
     5d6:	64 e0       	ldi	r22, 0x04	; 4
     5d8:	85 e2       	ldi	r24, 0x25	; 37
     5da:	90 e0       	ldi	r25, 0x00	; 0
     5dc:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     5e0:	32 c0       	rjmp	.+100    	; 0x646 <displayValues+0x168>
	} 
	else if((distanceFront > 50) & (distanceRear > 50))
     5e2:	bb 24       	eor	r11, r11
     5e4:	b3 94       	inc	r11
     5e6:	20 e0       	ldi	r18, 0x00	; 0
     5e8:	30 e0       	ldi	r19, 0x00	; 0
     5ea:	48 e4       	ldi	r20, 0x48	; 72
     5ec:	52 e4       	ldi	r21, 0x42	; 66
     5ee:	6e 2d       	mov	r22, r14
     5f0:	7f 2d       	mov	r23, r15
     5f2:	80 2f       	mov	r24, r16
     5f4:	91 2f       	mov	r25, r17
     5f6:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     5fa:	18 16       	cp	r1, r24
     5fc:	0c f0       	brlt	.+2      	; 0x600 <displayValues+0x122>
     5fe:	b1 2c       	mov	r11, r1
     600:	bb 20       	and	r11, r11
     602:	e1 f0       	breq	.+56     	; 0x63c <displayValues+0x15e>
     604:	bb 24       	eor	r11, r11
     606:	b3 94       	inc	r11
     608:	20 e0       	ldi	r18, 0x00	; 0
     60a:	30 e0       	ldi	r19, 0x00	; 0
     60c:	48 e4       	ldi	r20, 0x48	; 72
     60e:	52 e4       	ldi	r21, 0x42	; 66
     610:	6d 2d       	mov	r22, r13
     612:	7c 2d       	mov	r23, r12
     614:	87 2d       	mov	r24, r7
     616:	96 2d       	mov	r25, r6
     618:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     61c:	18 16       	cp	r1, r24
     61e:	0c f0       	brlt	.+2      	; 0x622 <displayValues+0x144>
     620:	b1 2c       	mov	r11, r1
     622:	bb 20       	and	r11, r11
     624:	59 f0       	breq	.+22     	; 0x63c <displayValues+0x15e>
	{
		TIM1_overflow_interrupt_disable();
     626:	ef e6       	ldi	r30, 0x6F	; 111
     628:	f0 e0       	ldi	r31, 0x00	; 0
     62a:	80 81       	ld	r24, Z
     62c:	8e 7f       	andi	r24, 0xFE	; 254
     62e:	80 83       	st	Z, r24
		GPIO_write_low(&PORTB, buzzer);
     630:	64 e0       	ldi	r22, 0x04	; 4
     632:	85 e2       	ldi	r24, 0x25	; 37
     634:	90 e0       	ldi	r25, 0x00	; 0
     636:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
     63a:	05 c0       	rjmp	.+10     	; 0x646 <displayValues+0x168>
	}
	else
	{
		TIM1_overflow_interrupt_enable();
     63c:	ef e6       	ldi	r30, 0x6F	; 111
     63e:	f0 e0       	ldi	r31, 0x00	; 0
     640:	80 81       	ld	r24, Z
     642:	81 60       	ori	r24, 0x01	; 1
     644:	80 83       	st	Z, r24
	}


	// displaying values on display 

	sprintf(uartString,"Front: %0.1lf  ||  Rear: %0.1lf \r\n",distanceFront, distanceRear);
     646:	6f 92       	push	r6
     648:	7f 92       	push	r7
     64a:	cf 92       	push	r12
     64c:	df 92       	push	r13
     64e:	1f 93       	push	r17
     650:	0f 93       	push	r16
     652:	ff 92       	push	r15
     654:	ef 92       	push	r14
     656:	8c e0       	ldi	r24, 0x0C	; 12
     658:	91 e0       	ldi	r25, 0x01	; 1
     65a:	9f 93       	push	r25
     65c:	8f 93       	push	r24
     65e:	ce 01       	movw	r24, r28
     660:	01 96       	adiw	r24, 0x01	; 1
     662:	5c 01       	movw	r10, r24
     664:	9f 93       	push	r25
     666:	8f 93       	push	r24
     668:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
	uart_puts(uartString);
     66c:	c5 01       	movw	r24, r10
     66e:	0e 94 40 09 	call	0x1280	; 0x1280 <uart_puts>
	
	sprintf(dispString,"%0.1f",distanceFront);
     672:	1f 93       	push	r17
     674:	0f 93       	push	r16
     676:	ff 92       	push	r15
     678:	ef 92       	push	r14
     67a:	0f 2e       	mov	r0, r31
     67c:	ff e2       	ldi	r31, 0x2F	; 47
     67e:	8f 2e       	mov	r8, r31
     680:	f1 e0       	ldi	r31, 0x01	; 1
     682:	9f 2e       	mov	r9, r31
     684:	f0 2d       	mov	r31, r0
     686:	9f 92       	push	r9
     688:	8f 92       	push	r8
     68a:	5e 01       	movw	r10, r28
     68c:	93 e3       	ldi	r25, 0x33	; 51
     68e:	a9 0e       	add	r10, r25
     690:	b1 1c       	adc	r11, r1
     692:	bf 92       	push	r11
     694:	af 92       	push	r10
     696:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
 	lcd_gotoxy(7, 0);
     69a:	60 e0       	ldi	r22, 0x00	; 0
     69c:	87 e0       	ldi	r24, 0x07	; 7
     69e:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
 	lcd_puts("       ");
     6a2:	85 e3       	ldi	r24, 0x35	; 53
     6a4:	91 e0       	ldi	r25, 0x01	; 1
     6a6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	lcd_gotoxy(7, 0);
     6aa:	60 e0       	ldi	r22, 0x00	; 0
     6ac:	87 e0       	ldi	r24, 0x07	; 7
     6ae:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts(dispString);
     6b2:	c5 01       	movw	r24, r10
     6b4:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	
	sprintf(dispString,"%0.1f",distanceRear);
     6b8:	6f 92       	push	r6
     6ba:	7f 92       	push	r7
     6bc:	cf 92       	push	r12
     6be:	df 92       	push	r13
     6c0:	9f 92       	push	r9
     6c2:	8f 92       	push	r8
     6c4:	bf 92       	push	r11
     6c6:	af 92       	push	r10
     6c8:	0e 94 35 10 	call	0x206a	; 0x206a <sprintf>
	lcd_gotoxy(7, 1);
     6cc:	61 e0       	ldi	r22, 0x01	; 1
     6ce:	87 e0       	ldi	r24, 0x07	; 7
     6d0:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts("       ");
     6d4:	85 e3       	ldi	r24, 0x35	; 53
     6d6:	91 e0       	ldi	r25, 0x01	; 1
     6d8:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	lcd_gotoxy(7, 1);
     6dc:	61 e0       	ldi	r22, 0x01	; 1
     6de:	87 e0       	ldi	r24, 0x07	; 7
     6e0:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts(dispString);
     6e4:	c5 01       	movw	r24, r10
     6e6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	
	
	//displaying the distance of the front sensor on bar graph
	//and distance dependent audio signal
	
	if (distanceFront <= 10)
     6ea:	0f b6       	in	r0, 0x3f	; 63
     6ec:	f8 94       	cli
     6ee:	de bf       	out	0x3e, r29	; 62
     6f0:	0f be       	out	0x3f, r0	; 63
     6f2:	cd bf       	out	0x3d, r28	; 61
     6f4:	20 e0       	ldi	r18, 0x00	; 0
     6f6:	30 e0       	ldi	r19, 0x00	; 0
     6f8:	40 e2       	ldi	r20, 0x20	; 32
     6fa:	51 e4       	ldi	r21, 0x41	; 65
     6fc:	6e 2d       	mov	r22, r14
     6fe:	7f 2d       	mov	r23, r15
     700:	80 2f       	mov	r24, r16
     702:	91 2f       	mov	r25, r17
     704:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     708:	18 16       	cp	r1, r24
     70a:	1c f0       	brlt	.+6      	; 0x712 <displayValues+0x234>
	{
		DIODE_FRONT(8);
     70c:	88 e0       	ldi	r24, 0x08	; 8
     70e:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
	}
	if ((distanceFront > 10) & (distanceFront <= 15))
     712:	bb 24       	eor	r11, r11
     714:	b3 94       	inc	r11
     716:	20 e0       	ldi	r18, 0x00	; 0
     718:	30 e0       	ldi	r19, 0x00	; 0
     71a:	40 e2       	ldi	r20, 0x20	; 32
     71c:	51 e4       	ldi	r21, 0x41	; 65
     71e:	6e 2d       	mov	r22, r14
     720:	7f 2d       	mov	r23, r15
     722:	80 2f       	mov	r24, r16
     724:	91 2f       	mov	r25, r17
     726:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     72a:	18 16       	cp	r1, r24
     72c:	0c f0       	brlt	.+2      	; 0x730 <displayValues+0x252>
     72e:	b1 2c       	mov	r11, r1
     730:	bb 20       	and	r11, r11
     732:	a9 f0       	breq	.+42     	; 0x75e <displayValues+0x280>
     734:	bb 24       	eor	r11, r11
     736:	b3 94       	inc	r11
     738:	20 e0       	ldi	r18, 0x00	; 0
     73a:	30 e0       	ldi	r19, 0x00	; 0
     73c:	40 e7       	ldi	r20, 0x70	; 112
     73e:	51 e4       	ldi	r21, 0x41	; 65
     740:	6e 2d       	mov	r22, r14
     742:	7f 2d       	mov	r23, r15
     744:	80 2f       	mov	r24, r16
     746:	91 2f       	mov	r25, r17
     748:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     74c:	18 16       	cp	r1, r24
     74e:	0c f4       	brge	.+2      	; 0x752 <displayValues+0x274>
     750:	b1 2c       	mov	r11, r1
     752:	bb 20       	and	r11, r11
     754:	21 f0       	breq	.+8      	; 0x75e <displayValues+0x280>
	{
		DIODE_FRONT(7);
     756:	87 e0       	ldi	r24, 0x07	; 7
     758:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
     75c:	e7 c0       	rjmp	.+462    	; 0x92c <__stack+0x2d>
	}
	else if((distanceFront > 15) & (distanceFront <= 20))
     75e:	bb 24       	eor	r11, r11
     760:	b3 94       	inc	r11
     762:	20 e0       	ldi	r18, 0x00	; 0
     764:	30 e0       	ldi	r19, 0x00	; 0
     766:	40 e7       	ldi	r20, 0x70	; 112
     768:	51 e4       	ldi	r21, 0x41	; 65
     76a:	6e 2d       	mov	r22, r14
     76c:	7f 2d       	mov	r23, r15
     76e:	80 2f       	mov	r24, r16
     770:	91 2f       	mov	r25, r17
     772:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     776:	18 16       	cp	r1, r24
     778:	0c f0       	brlt	.+2      	; 0x77c <displayValues+0x29e>
     77a:	b1 2c       	mov	r11, r1
     77c:	bb 20       	and	r11, r11
     77e:	a9 f0       	breq	.+42     	; 0x7aa <displayValues+0x2cc>
     780:	bb 24       	eor	r11, r11
     782:	b3 94       	inc	r11
     784:	20 e0       	ldi	r18, 0x00	; 0
     786:	30 e0       	ldi	r19, 0x00	; 0
     788:	40 ea       	ldi	r20, 0xA0	; 160
     78a:	51 e4       	ldi	r21, 0x41	; 65
     78c:	6e 2d       	mov	r22, r14
     78e:	7f 2d       	mov	r23, r15
     790:	80 2f       	mov	r24, r16
     792:	91 2f       	mov	r25, r17
     794:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     798:	18 16       	cp	r1, r24
     79a:	0c f4       	brge	.+2      	; 0x79e <displayValues+0x2c0>
     79c:	b1 2c       	mov	r11, r1
     79e:	bb 20       	and	r11, r11
     7a0:	21 f0       	breq	.+8      	; 0x7aa <displayValues+0x2cc>
	{
		DIODE_FRONT(6);
     7a2:	86 e0       	ldi	r24, 0x06	; 6
     7a4:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
     7a8:	c1 c0       	rjmp	.+386    	; 0x92c <__stack+0x2d>
	}
	else if((distanceFront > 20) & (distanceFront <= 25))
     7aa:	bb 24       	eor	r11, r11
     7ac:	b3 94       	inc	r11
     7ae:	20 e0       	ldi	r18, 0x00	; 0
     7b0:	30 e0       	ldi	r19, 0x00	; 0
     7b2:	40 ea       	ldi	r20, 0xA0	; 160
     7b4:	51 e4       	ldi	r21, 0x41	; 65
     7b6:	6e 2d       	mov	r22, r14
     7b8:	7f 2d       	mov	r23, r15
     7ba:	80 2f       	mov	r24, r16
     7bc:	91 2f       	mov	r25, r17
     7be:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     7c2:	18 16       	cp	r1, r24
     7c4:	0c f0       	brlt	.+2      	; 0x7c8 <displayValues+0x2ea>
     7c6:	b1 2c       	mov	r11, r1
     7c8:	bb 20       	and	r11, r11
     7ca:	a9 f0       	breq	.+42     	; 0x7f6 <displayValues+0x318>
     7cc:	bb 24       	eor	r11, r11
     7ce:	b3 94       	inc	r11
     7d0:	20 e0       	ldi	r18, 0x00	; 0
     7d2:	30 e0       	ldi	r19, 0x00	; 0
     7d4:	48 ec       	ldi	r20, 0xC8	; 200
     7d6:	51 e4       	ldi	r21, 0x41	; 65
     7d8:	6e 2d       	mov	r22, r14
     7da:	7f 2d       	mov	r23, r15
     7dc:	80 2f       	mov	r24, r16
     7de:	91 2f       	mov	r25, r17
     7e0:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     7e4:	18 16       	cp	r1, r24
     7e6:	0c f4       	brge	.+2      	; 0x7ea <displayValues+0x30c>
     7e8:	b1 2c       	mov	r11, r1
     7ea:	bb 20       	and	r11, r11
     7ec:	21 f0       	breq	.+8      	; 0x7f6 <displayValues+0x318>
	{
		DIODE_FRONT(5);
     7ee:	85 e0       	ldi	r24, 0x05	; 5
     7f0:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
     7f4:	9b c0       	rjmp	.+310    	; 0x92c <__stack+0x2d>
	}
	else if((distanceFront > 25) & (distanceFront <= 30))
     7f6:	bb 24       	eor	r11, r11
     7f8:	b3 94       	inc	r11
     7fa:	20 e0       	ldi	r18, 0x00	; 0
     7fc:	30 e0       	ldi	r19, 0x00	; 0
     7fe:	48 ec       	ldi	r20, 0xC8	; 200
     800:	51 e4       	ldi	r21, 0x41	; 65
     802:	6e 2d       	mov	r22, r14
     804:	7f 2d       	mov	r23, r15
     806:	80 2f       	mov	r24, r16
     808:	91 2f       	mov	r25, r17
     80a:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     80e:	18 16       	cp	r1, r24
     810:	0c f0       	brlt	.+2      	; 0x814 <displayValues+0x336>
     812:	b1 2c       	mov	r11, r1
     814:	bb 20       	and	r11, r11
     816:	a9 f0       	breq	.+42     	; 0x842 <displayValues+0x364>
     818:	bb 24       	eor	r11, r11
     81a:	b3 94       	inc	r11
     81c:	20 e0       	ldi	r18, 0x00	; 0
     81e:	30 e0       	ldi	r19, 0x00	; 0
     820:	40 ef       	ldi	r20, 0xF0	; 240
     822:	51 e4       	ldi	r21, 0x41	; 65
     824:	6e 2d       	mov	r22, r14
     826:	7f 2d       	mov	r23, r15
     828:	80 2f       	mov	r24, r16
     82a:	91 2f       	mov	r25, r17
     82c:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     830:	18 16       	cp	r1, r24
     832:	0c f4       	brge	.+2      	; 0x836 <displayValues+0x358>
     834:	b1 2c       	mov	r11, r1
     836:	bb 20       	and	r11, r11
     838:	21 f0       	breq	.+8      	; 0x842 <displayValues+0x364>
	{
		DIODE_FRONT(4);
     83a:	84 e0       	ldi	r24, 0x04	; 4
     83c:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
     840:	75 c0       	rjmp	.+234    	; 0x92c <__stack+0x2d>
	}
	else if((distanceFront > 30) & (distanceFront <= 35))
     842:	bb 24       	eor	r11, r11
     844:	b3 94       	inc	r11
     846:	20 e0       	ldi	r18, 0x00	; 0
     848:	30 e0       	ldi	r19, 0x00	; 0
     84a:	40 ef       	ldi	r20, 0xF0	; 240
     84c:	51 e4       	ldi	r21, 0x41	; 65
     84e:	6e 2d       	mov	r22, r14
     850:	7f 2d       	mov	r23, r15
     852:	80 2f       	mov	r24, r16
     854:	91 2f       	mov	r25, r17
     856:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     85a:	18 16       	cp	r1, r24
     85c:	0c f0       	brlt	.+2      	; 0x860 <displayValues+0x382>
     85e:	b1 2c       	mov	r11, r1
     860:	bb 20       	and	r11, r11
     862:	a9 f0       	breq	.+42     	; 0x88e <displayValues+0x3b0>
     864:	bb 24       	eor	r11, r11
     866:	b3 94       	inc	r11
     868:	20 e0       	ldi	r18, 0x00	; 0
     86a:	30 e0       	ldi	r19, 0x00	; 0
     86c:	4c e0       	ldi	r20, 0x0C	; 12
     86e:	52 e4       	ldi	r21, 0x42	; 66
     870:	6e 2d       	mov	r22, r14
     872:	7f 2d       	mov	r23, r15
     874:	80 2f       	mov	r24, r16
     876:	91 2f       	mov	r25, r17
     878:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     87c:	18 16       	cp	r1, r24
     87e:	0c f4       	brge	.+2      	; 0x882 <displayValues+0x3a4>
     880:	b1 2c       	mov	r11, r1
     882:	bb 20       	and	r11, r11
     884:	21 f0       	breq	.+8      	; 0x88e <displayValues+0x3b0>
	{
		DIODE_FRONT(3);
     886:	83 e0       	ldi	r24, 0x03	; 3
     888:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
     88c:	4f c0       	rjmp	.+158    	; 0x92c <__stack+0x2d>
	}
	else if((distanceFront > 35) & (distanceFront <= 40))
     88e:	bb 24       	eor	r11, r11
     890:	b3 94       	inc	r11
     892:	20 e0       	ldi	r18, 0x00	; 0
     894:	30 e0       	ldi	r19, 0x00	; 0
     896:	4c e0       	ldi	r20, 0x0C	; 12
     898:	52 e4       	ldi	r21, 0x42	; 66
     89a:	6e 2d       	mov	r22, r14
     89c:	7f 2d       	mov	r23, r15
     89e:	80 2f       	mov	r24, r16
     8a0:	91 2f       	mov	r25, r17
     8a2:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     8a6:	18 16       	cp	r1, r24
     8a8:	0c f0       	brlt	.+2      	; 0x8ac <displayValues+0x3ce>
     8aa:	b1 2c       	mov	r11, r1
     8ac:	bb 20       	and	r11, r11
     8ae:	a9 f0       	breq	.+42     	; 0x8da <displayValues+0x3fc>
     8b0:	bb 24       	eor	r11, r11
     8b2:	b3 94       	inc	r11
     8b4:	20 e0       	ldi	r18, 0x00	; 0
     8b6:	30 e0       	ldi	r19, 0x00	; 0
     8b8:	40 e2       	ldi	r20, 0x20	; 32
     8ba:	52 e4       	ldi	r21, 0x42	; 66
     8bc:	6e 2d       	mov	r22, r14
     8be:	7f 2d       	mov	r23, r15
     8c0:	80 2f       	mov	r24, r16
     8c2:	91 2f       	mov	r25, r17
     8c4:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     8c8:	18 16       	cp	r1, r24
     8ca:	0c f4       	brge	.+2      	; 0x8ce <displayValues+0x3f0>
     8cc:	b1 2c       	mov	r11, r1
     8ce:	bb 20       	and	r11, r11
     8d0:	21 f0       	breq	.+8      	; 0x8da <displayValues+0x3fc>
	{
		DIODE_FRONT(2);
     8d2:	82 e0       	ldi	r24, 0x02	; 2
     8d4:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
     8d8:	29 c0       	rjmp	.+82     	; 0x92c <__stack+0x2d>
	}
	else if((distanceFront > 40) & (distanceFront <= 50))	
     8da:	bb 24       	eor	r11, r11
     8dc:	b3 94       	inc	r11
     8de:	20 e0       	ldi	r18, 0x00	; 0
     8e0:	30 e0       	ldi	r19, 0x00	; 0
     8e2:	40 e2       	ldi	r20, 0x20	; 32
     8e4:	52 e4       	ldi	r21, 0x42	; 66
     8e6:	6e 2d       	mov	r22, r14
     8e8:	7f 2d       	mov	r23, r15
     8ea:	80 2f       	mov	r24, r16
     8ec:	91 2f       	mov	r25, r17
     8ee:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     8f2:	18 16       	cp	r1, r24
     8f4:	0c f0       	brlt	.+2      	; 0x8f8 <displayValues+0x41a>
     8f6:	b1 2c       	mov	r11, r1
     8f8:	bb 20       	and	r11, r11
     8fa:	a9 f0       	breq	.+42     	; 0x926 <__stack+0x27>
     8fc:	bb 24       	eor	r11, r11
     8fe:	b3 94       	inc	r11
     900:	20 e0       	ldi	r18, 0x00	; 0
     902:	30 e0       	ldi	r19, 0x00	; 0
     904:	48 e4       	ldi	r20, 0x48	; 72
     906:	52 e4       	ldi	r21, 0x42	; 66
     908:	6e 2d       	mov	r22, r14
     90a:	7f 2d       	mov	r23, r15
     90c:	80 2f       	mov	r24, r16
     90e:	91 2f       	mov	r25, r17
     910:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     914:	18 16       	cp	r1, r24
     916:	0c f4       	brge	.+2      	; 0x91a <__stack+0x1b>
     918:	b1 2c       	mov	r11, r1
     91a:	bb 20       	and	r11, r11
     91c:	21 f0       	breq	.+8      	; 0x926 <__stack+0x27>
	{
		DIODE_FRONT(1);
     91e:	81 e0       	ldi	r24, 0x01	; 1
     920:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
     924:	03 c0       	rjmp	.+6      	; 0x92c <__stack+0x2d>
	}
	else
	{
		DIODE_FRONT(0);
     926:	80 e0       	ldi	r24, 0x00	; 0
     928:	0e 94 28 08 	call	0x1050	; 0x1050 <DIODE_FRONT>
	}
	
	
	//displaying the distance of the rear sensor on bar graph
	
	if (distanceRear <= 10)
     92c:	20 e0       	ldi	r18, 0x00	; 0
     92e:	30 e0       	ldi	r19, 0x00	; 0
     930:	40 e2       	ldi	r20, 0x20	; 32
     932:	51 e4       	ldi	r21, 0x41	; 65
     934:	6d 2d       	mov	r22, r13
     936:	7c 2d       	mov	r23, r12
     938:	87 2d       	mov	r24, r7
     93a:	96 2d       	mov	r25, r6
     93c:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     940:	18 16       	cp	r1, r24
     942:	1c f0       	brlt	.+6      	; 0x94a <__stack+0x4b>
	{
		DIODE_REAR(8);
     944:	88 e0       	ldi	r24, 0x08	; 8
     946:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
	}
	if ((distanceRear > 10) & (distanceRear <= 15))
     94a:	11 e0       	ldi	r17, 0x01	; 1
     94c:	20 e0       	ldi	r18, 0x00	; 0
     94e:	30 e0       	ldi	r19, 0x00	; 0
     950:	40 e2       	ldi	r20, 0x20	; 32
     952:	51 e4       	ldi	r21, 0x41	; 65
     954:	6d 2d       	mov	r22, r13
     956:	7c 2d       	mov	r23, r12
     958:	87 2d       	mov	r24, r7
     95a:	96 2d       	mov	r25, r6
     95c:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     960:	18 16       	cp	r1, r24
     962:	0c f0       	brlt	.+2      	; 0x966 <__stack+0x67>
     964:	10 e0       	ldi	r17, 0x00	; 0
     966:	11 23       	and	r17, r17
     968:	a1 f0       	breq	.+40     	; 0x992 <__stack+0x93>
     96a:	11 e0       	ldi	r17, 0x01	; 1
     96c:	20 e0       	ldi	r18, 0x00	; 0
     96e:	30 e0       	ldi	r19, 0x00	; 0
     970:	40 e7       	ldi	r20, 0x70	; 112
     972:	51 e4       	ldi	r21, 0x41	; 65
     974:	6d 2d       	mov	r22, r13
     976:	7c 2d       	mov	r23, r12
     978:	87 2d       	mov	r24, r7
     97a:	96 2d       	mov	r25, r6
     97c:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     980:	18 16       	cp	r1, r24
     982:	0c f4       	brge	.+2      	; 0x986 <__stack+0x87>
     984:	10 e0       	ldi	r17, 0x00	; 0
     986:	11 23       	and	r17, r17
     988:	21 f0       	breq	.+8      	; 0x992 <__stack+0x93>
	{
		DIODE_REAR(7);
     98a:	87 e0       	ldi	r24, 0x07	; 7
     98c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
     990:	db c0       	rjmp	.+438    	; 0xb48 <__stack+0x249>
	}
	else if((distanceRear > 15) & (distanceRear <= 20))
     992:	11 e0       	ldi	r17, 0x01	; 1
     994:	20 e0       	ldi	r18, 0x00	; 0
     996:	30 e0       	ldi	r19, 0x00	; 0
     998:	40 e7       	ldi	r20, 0x70	; 112
     99a:	51 e4       	ldi	r21, 0x41	; 65
     99c:	6d 2d       	mov	r22, r13
     99e:	7c 2d       	mov	r23, r12
     9a0:	87 2d       	mov	r24, r7
     9a2:	96 2d       	mov	r25, r6
     9a4:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     9a8:	18 16       	cp	r1, r24
     9aa:	0c f0       	brlt	.+2      	; 0x9ae <__stack+0xaf>
     9ac:	10 e0       	ldi	r17, 0x00	; 0
     9ae:	11 23       	and	r17, r17
     9b0:	a1 f0       	breq	.+40     	; 0x9da <__stack+0xdb>
     9b2:	11 e0       	ldi	r17, 0x01	; 1
     9b4:	20 e0       	ldi	r18, 0x00	; 0
     9b6:	30 e0       	ldi	r19, 0x00	; 0
     9b8:	40 ea       	ldi	r20, 0xA0	; 160
     9ba:	51 e4       	ldi	r21, 0x41	; 65
     9bc:	6d 2d       	mov	r22, r13
     9be:	7c 2d       	mov	r23, r12
     9c0:	87 2d       	mov	r24, r7
     9c2:	96 2d       	mov	r25, r6
     9c4:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     9c8:	18 16       	cp	r1, r24
     9ca:	0c f4       	brge	.+2      	; 0x9ce <__stack+0xcf>
     9cc:	10 e0       	ldi	r17, 0x00	; 0
     9ce:	11 23       	and	r17, r17
     9d0:	21 f0       	breq	.+8      	; 0x9da <__stack+0xdb>
	{
		DIODE_REAR(6);
     9d2:	86 e0       	ldi	r24, 0x06	; 6
     9d4:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
     9d8:	b7 c0       	rjmp	.+366    	; 0xb48 <__stack+0x249>
	}
	else if((distanceRear > 20) & (distanceRear <= 25))
     9da:	11 e0       	ldi	r17, 0x01	; 1
     9dc:	20 e0       	ldi	r18, 0x00	; 0
     9de:	30 e0       	ldi	r19, 0x00	; 0
     9e0:	40 ea       	ldi	r20, 0xA0	; 160
     9e2:	51 e4       	ldi	r21, 0x41	; 65
     9e4:	6d 2d       	mov	r22, r13
     9e6:	7c 2d       	mov	r23, r12
     9e8:	87 2d       	mov	r24, r7
     9ea:	96 2d       	mov	r25, r6
     9ec:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     9f0:	18 16       	cp	r1, r24
     9f2:	0c f0       	brlt	.+2      	; 0x9f6 <__stack+0xf7>
     9f4:	10 e0       	ldi	r17, 0x00	; 0
     9f6:	11 23       	and	r17, r17
     9f8:	a1 f0       	breq	.+40     	; 0xa22 <__stack+0x123>
     9fa:	11 e0       	ldi	r17, 0x01	; 1
     9fc:	20 e0       	ldi	r18, 0x00	; 0
     9fe:	30 e0       	ldi	r19, 0x00	; 0
     a00:	48 ec       	ldi	r20, 0xC8	; 200
     a02:	51 e4       	ldi	r21, 0x41	; 65
     a04:	6d 2d       	mov	r22, r13
     a06:	7c 2d       	mov	r23, r12
     a08:	87 2d       	mov	r24, r7
     a0a:	96 2d       	mov	r25, r6
     a0c:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     a10:	18 16       	cp	r1, r24
     a12:	0c f4       	brge	.+2      	; 0xa16 <__stack+0x117>
     a14:	10 e0       	ldi	r17, 0x00	; 0
     a16:	11 23       	and	r17, r17
     a18:	21 f0       	breq	.+8      	; 0xa22 <__stack+0x123>
	{
		DIODE_REAR(5);
     a1a:	85 e0       	ldi	r24, 0x05	; 5
     a1c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
     a20:	93 c0       	rjmp	.+294    	; 0xb48 <__stack+0x249>
	} 
	else if((distanceRear > 25) & (distanceRear <= 30))
     a22:	11 e0       	ldi	r17, 0x01	; 1
     a24:	20 e0       	ldi	r18, 0x00	; 0
     a26:	30 e0       	ldi	r19, 0x00	; 0
     a28:	48 ec       	ldi	r20, 0xC8	; 200
     a2a:	51 e4       	ldi	r21, 0x41	; 65
     a2c:	6d 2d       	mov	r22, r13
     a2e:	7c 2d       	mov	r23, r12
     a30:	87 2d       	mov	r24, r7
     a32:	96 2d       	mov	r25, r6
     a34:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     a38:	18 16       	cp	r1, r24
     a3a:	0c f0       	brlt	.+2      	; 0xa3e <__stack+0x13f>
     a3c:	10 e0       	ldi	r17, 0x00	; 0
     a3e:	11 23       	and	r17, r17
     a40:	a1 f0       	breq	.+40     	; 0xa6a <__stack+0x16b>
     a42:	11 e0       	ldi	r17, 0x01	; 1
     a44:	20 e0       	ldi	r18, 0x00	; 0
     a46:	30 e0       	ldi	r19, 0x00	; 0
     a48:	40 ef       	ldi	r20, 0xF0	; 240
     a4a:	51 e4       	ldi	r21, 0x41	; 65
     a4c:	6d 2d       	mov	r22, r13
     a4e:	7c 2d       	mov	r23, r12
     a50:	87 2d       	mov	r24, r7
     a52:	96 2d       	mov	r25, r6
     a54:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     a58:	18 16       	cp	r1, r24
     a5a:	0c f4       	brge	.+2      	; 0xa5e <__stack+0x15f>
     a5c:	10 e0       	ldi	r17, 0x00	; 0
     a5e:	11 23       	and	r17, r17
     a60:	21 f0       	breq	.+8      	; 0xa6a <__stack+0x16b>
	{
		DIODE_REAR(4);
     a62:	84 e0       	ldi	r24, 0x04	; 4
     a64:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
     a68:	6f c0       	rjmp	.+222    	; 0xb48 <__stack+0x249>
	} 
	else if((distanceRear > 30) & (distanceRear <= 35))
     a6a:	11 e0       	ldi	r17, 0x01	; 1
     a6c:	20 e0       	ldi	r18, 0x00	; 0
     a6e:	30 e0       	ldi	r19, 0x00	; 0
     a70:	40 ef       	ldi	r20, 0xF0	; 240
     a72:	51 e4       	ldi	r21, 0x41	; 65
     a74:	6d 2d       	mov	r22, r13
     a76:	7c 2d       	mov	r23, r12
     a78:	87 2d       	mov	r24, r7
     a7a:	96 2d       	mov	r25, r6
     a7c:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     a80:	18 16       	cp	r1, r24
     a82:	0c f0       	brlt	.+2      	; 0xa86 <__stack+0x187>
     a84:	10 e0       	ldi	r17, 0x00	; 0
     a86:	11 23       	and	r17, r17
     a88:	a1 f0       	breq	.+40     	; 0xab2 <__stack+0x1b3>
     a8a:	11 e0       	ldi	r17, 0x01	; 1
     a8c:	20 e0       	ldi	r18, 0x00	; 0
     a8e:	30 e0       	ldi	r19, 0x00	; 0
     a90:	4c e0       	ldi	r20, 0x0C	; 12
     a92:	52 e4       	ldi	r21, 0x42	; 66
     a94:	6d 2d       	mov	r22, r13
     a96:	7c 2d       	mov	r23, r12
     a98:	87 2d       	mov	r24, r7
     a9a:	96 2d       	mov	r25, r6
     a9c:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     aa0:	18 16       	cp	r1, r24
     aa2:	0c f4       	brge	.+2      	; 0xaa6 <__stack+0x1a7>
     aa4:	10 e0       	ldi	r17, 0x00	; 0
     aa6:	11 23       	and	r17, r17
     aa8:	21 f0       	breq	.+8      	; 0xab2 <__stack+0x1b3>
	{
		DIODE_REAR(3);
     aaa:	83 e0       	ldi	r24, 0x03	; 3
     aac:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
     ab0:	4b c0       	rjmp	.+150    	; 0xb48 <__stack+0x249>
	} 
	else if((distanceRear > 35) & (distanceRear <= 40))
     ab2:	11 e0       	ldi	r17, 0x01	; 1
     ab4:	20 e0       	ldi	r18, 0x00	; 0
     ab6:	30 e0       	ldi	r19, 0x00	; 0
     ab8:	4c e0       	ldi	r20, 0x0C	; 12
     aba:	52 e4       	ldi	r21, 0x42	; 66
     abc:	6d 2d       	mov	r22, r13
     abe:	7c 2d       	mov	r23, r12
     ac0:	87 2d       	mov	r24, r7
     ac2:	96 2d       	mov	r25, r6
     ac4:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     ac8:	18 16       	cp	r1, r24
     aca:	0c f0       	brlt	.+2      	; 0xace <__stack+0x1cf>
     acc:	10 e0       	ldi	r17, 0x00	; 0
     ace:	11 23       	and	r17, r17
     ad0:	a1 f0       	breq	.+40     	; 0xafa <__stack+0x1fb>
     ad2:	11 e0       	ldi	r17, 0x01	; 1
     ad4:	20 e0       	ldi	r18, 0x00	; 0
     ad6:	30 e0       	ldi	r19, 0x00	; 0
     ad8:	40 e2       	ldi	r20, 0x20	; 32
     ada:	52 e4       	ldi	r21, 0x42	; 66
     adc:	6d 2d       	mov	r22, r13
     ade:	7c 2d       	mov	r23, r12
     ae0:	87 2d       	mov	r24, r7
     ae2:	96 2d       	mov	r25, r6
     ae4:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     ae8:	18 16       	cp	r1, r24
     aea:	0c f4       	brge	.+2      	; 0xaee <__stack+0x1ef>
     aec:	10 e0       	ldi	r17, 0x00	; 0
     aee:	11 23       	and	r17, r17
     af0:	21 f0       	breq	.+8      	; 0xafa <__stack+0x1fb>
	{
		DIODE_REAR(2);
     af2:	82 e0       	ldi	r24, 0x02	; 2
     af4:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
     af8:	27 c0       	rjmp	.+78     	; 0xb48 <__stack+0x249>
	} 
	else if((distanceRear > 40) & (distanceRear <= 50))
     afa:	11 e0       	ldi	r17, 0x01	; 1
     afc:	20 e0       	ldi	r18, 0x00	; 0
     afe:	30 e0       	ldi	r19, 0x00	; 0
     b00:	40 e2       	ldi	r20, 0x20	; 32
     b02:	52 e4       	ldi	r21, 0x42	; 66
     b04:	6d 2d       	mov	r22, r13
     b06:	7c 2d       	mov	r23, r12
     b08:	87 2d       	mov	r24, r7
     b0a:	96 2d       	mov	r25, r6
     b0c:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     b10:	18 16       	cp	r1, r24
     b12:	0c f0       	brlt	.+2      	; 0xb16 <__stack+0x217>
     b14:	10 e0       	ldi	r17, 0x00	; 0
     b16:	11 23       	and	r17, r17
     b18:	a1 f0       	breq	.+40     	; 0xb42 <__stack+0x243>
     b1a:	11 e0       	ldi	r17, 0x01	; 1
     b1c:	20 e0       	ldi	r18, 0x00	; 0
     b1e:	30 e0       	ldi	r19, 0x00	; 0
     b20:	48 e4       	ldi	r20, 0x48	; 72
     b22:	52 e4       	ldi	r21, 0x42	; 66
     b24:	6d 2d       	mov	r22, r13
     b26:	7c 2d       	mov	r23, r12
     b28:	87 2d       	mov	r24, r7
     b2a:	96 2d       	mov	r25, r6
     b2c:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     b30:	18 16       	cp	r1, r24
     b32:	0c f4       	brge	.+2      	; 0xb36 <__stack+0x237>
     b34:	10 e0       	ldi	r17, 0x00	; 0
     b36:	11 23       	and	r17, r17
     b38:	21 f0       	breq	.+8      	; 0xb42 <__stack+0x243>
	{
		DIODE_REAR(1);
     b3a:	81 e0       	ldi	r24, 0x01	; 1
     b3c:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
     b40:	03 c0       	rjmp	.+6      	; 0xb48 <__stack+0x249>
	} 
	else 
	{
		DIODE_REAR(0);
     b42:	80 e0       	ldi	r24, 0x00	; 0
     b44:	0e 94 71 08 	call	0x10e2	; 0x10e2 <DIODE_REAR>
	}
	
	//distance dependent audio signal
	
	if ((dist > 10) & (dist <= 15))
     b48:	11 e0       	ldi	r17, 0x01	; 1
     b4a:	20 e0       	ldi	r18, 0x00	; 0
     b4c:	30 e0       	ldi	r19, 0x00	; 0
     b4e:	40 e2       	ldi	r20, 0x20	; 32
     b50:	51 e4       	ldi	r21, 0x41	; 65
     b52:	65 2d       	mov	r22, r5
     b54:	74 2d       	mov	r23, r4
     b56:	83 2d       	mov	r24, r3
     b58:	92 2d       	mov	r25, r2
     b5a:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     b5e:	18 16       	cp	r1, r24
     b60:	0c f0       	brlt	.+2      	; 0xb64 <__stack+0x265>
     b62:	10 e0       	ldi	r17, 0x00	; 0
     b64:	11 23       	and	r17, r17
     b66:	b9 f0       	breq	.+46     	; 0xb96 <__stack+0x297>
     b68:	11 e0       	ldi	r17, 0x01	; 1
     b6a:	20 e0       	ldi	r18, 0x00	; 0
     b6c:	30 e0       	ldi	r19, 0x00	; 0
     b6e:	40 e7       	ldi	r20, 0x70	; 112
     b70:	51 e4       	ldi	r21, 0x41	; 65
     b72:	65 2d       	mov	r22, r5
     b74:	74 2d       	mov	r23, r4
     b76:	83 2d       	mov	r24, r3
     b78:	92 2d       	mov	r25, r2
     b7a:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     b7e:	18 16       	cp	r1, r24
     b80:	0c f4       	brge	.+2      	; 0xb84 <__stack+0x285>
     b82:	10 e0       	ldi	r17, 0x00	; 0
     b84:	11 23       	and	r17, r17
     b86:	39 f0       	breq	.+14     	; 0xb96 <__stack+0x297>
	{
		beepTiming = 62000;
     b88:	80 e3       	ldi	r24, 0x30	; 48
     b8a:	92 ef       	ldi	r25, 0xF2	; 242
     b8c:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <beepTiming+0x1>
     b90:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beepTiming>
     b94:	c2 c0       	rjmp	.+388    	; 0xd1a <__stack+0x41b>
	}
	else if ((dist > 15) & (dist <= 20))
     b96:	11 e0       	ldi	r17, 0x01	; 1
     b98:	20 e0       	ldi	r18, 0x00	; 0
     b9a:	30 e0       	ldi	r19, 0x00	; 0
     b9c:	40 e7       	ldi	r20, 0x70	; 112
     b9e:	51 e4       	ldi	r21, 0x41	; 65
     ba0:	65 2d       	mov	r22, r5
     ba2:	74 2d       	mov	r23, r4
     ba4:	83 2d       	mov	r24, r3
     ba6:	92 2d       	mov	r25, r2
     ba8:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     bac:	18 16       	cp	r1, r24
     bae:	0c f0       	brlt	.+2      	; 0xbb2 <__stack+0x2b3>
     bb0:	10 e0       	ldi	r17, 0x00	; 0
     bb2:	11 23       	and	r17, r17
     bb4:	b9 f0       	breq	.+46     	; 0xbe4 <__stack+0x2e5>
     bb6:	11 e0       	ldi	r17, 0x01	; 1
     bb8:	20 e0       	ldi	r18, 0x00	; 0
     bba:	30 e0       	ldi	r19, 0x00	; 0
     bbc:	40 ea       	ldi	r20, 0xA0	; 160
     bbe:	51 e4       	ldi	r21, 0x41	; 65
     bc0:	65 2d       	mov	r22, r5
     bc2:	74 2d       	mov	r23, r4
     bc4:	83 2d       	mov	r24, r3
     bc6:	92 2d       	mov	r25, r2
     bc8:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     bcc:	18 16       	cp	r1, r24
     bce:	0c f4       	brge	.+2      	; 0xbd2 <__stack+0x2d3>
     bd0:	10 e0       	ldi	r17, 0x00	; 0
     bd2:	11 23       	and	r17, r17
     bd4:	39 f0       	breq	.+14     	; 0xbe4 <__stack+0x2e5>
	{
		beepTiming = 58000;
     bd6:	80 e9       	ldi	r24, 0x90	; 144
     bd8:	92 ee       	ldi	r25, 0xE2	; 226
     bda:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <beepTiming+0x1>
     bde:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beepTiming>
     be2:	9b c0       	rjmp	.+310    	; 0xd1a <__stack+0x41b>
	}
	else if ((dist > 20) & (dist <= 25))
     be4:	11 e0       	ldi	r17, 0x01	; 1
     be6:	20 e0       	ldi	r18, 0x00	; 0
     be8:	30 e0       	ldi	r19, 0x00	; 0
     bea:	40 ea       	ldi	r20, 0xA0	; 160
     bec:	51 e4       	ldi	r21, 0x41	; 65
     bee:	65 2d       	mov	r22, r5
     bf0:	74 2d       	mov	r23, r4
     bf2:	83 2d       	mov	r24, r3
     bf4:	92 2d       	mov	r25, r2
     bf6:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     bfa:	18 16       	cp	r1, r24
     bfc:	0c f0       	brlt	.+2      	; 0xc00 <__stack+0x301>
     bfe:	10 e0       	ldi	r17, 0x00	; 0
     c00:	11 23       	and	r17, r17
     c02:	b9 f0       	breq	.+46     	; 0xc32 <__stack+0x333>
     c04:	11 e0       	ldi	r17, 0x01	; 1
     c06:	20 e0       	ldi	r18, 0x00	; 0
     c08:	30 e0       	ldi	r19, 0x00	; 0
     c0a:	48 ec       	ldi	r20, 0xC8	; 200
     c0c:	51 e4       	ldi	r21, 0x41	; 65
     c0e:	65 2d       	mov	r22, r5
     c10:	74 2d       	mov	r23, r4
     c12:	83 2d       	mov	r24, r3
     c14:	92 2d       	mov	r25, r2
     c16:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     c1a:	18 16       	cp	r1, r24
     c1c:	0c f4       	brge	.+2      	; 0xc20 <__stack+0x321>
     c1e:	10 e0       	ldi	r17, 0x00	; 0
     c20:	11 23       	and	r17, r17
     c22:	39 f0       	breq	.+14     	; 0xc32 <__stack+0x333>
	{
		beepTiming = 52000;
     c24:	80 e2       	ldi	r24, 0x20	; 32
     c26:	9b ec       	ldi	r25, 0xCB	; 203
     c28:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <beepTiming+0x1>
     c2c:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beepTiming>
     c30:	74 c0       	rjmp	.+232    	; 0xd1a <__stack+0x41b>
	}
	else if ((dist > 25) & (dist <= 30))
     c32:	11 e0       	ldi	r17, 0x01	; 1
     c34:	20 e0       	ldi	r18, 0x00	; 0
     c36:	30 e0       	ldi	r19, 0x00	; 0
     c38:	48 ec       	ldi	r20, 0xC8	; 200
     c3a:	51 e4       	ldi	r21, 0x41	; 65
     c3c:	65 2d       	mov	r22, r5
     c3e:	74 2d       	mov	r23, r4
     c40:	83 2d       	mov	r24, r3
     c42:	92 2d       	mov	r25, r2
     c44:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     c48:	18 16       	cp	r1, r24
     c4a:	0c f0       	brlt	.+2      	; 0xc4e <__stack+0x34f>
     c4c:	10 e0       	ldi	r17, 0x00	; 0
     c4e:	11 23       	and	r17, r17
     c50:	b9 f0       	breq	.+46     	; 0xc80 <__stack+0x381>
     c52:	11 e0       	ldi	r17, 0x01	; 1
     c54:	20 e0       	ldi	r18, 0x00	; 0
     c56:	30 e0       	ldi	r19, 0x00	; 0
     c58:	40 ef       	ldi	r20, 0xF0	; 240
     c5a:	51 e4       	ldi	r21, 0x41	; 65
     c5c:	65 2d       	mov	r22, r5
     c5e:	74 2d       	mov	r23, r4
     c60:	83 2d       	mov	r24, r3
     c62:	92 2d       	mov	r25, r2
     c64:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     c68:	18 16       	cp	r1, r24
     c6a:	0c f4       	brge	.+2      	; 0xc6e <__stack+0x36f>
     c6c:	10 e0       	ldi	r17, 0x00	; 0
     c6e:	11 23       	and	r17, r17
     c70:	39 f0       	breq	.+14     	; 0xc80 <__stack+0x381>
	{
		beepTiming = 46000;
     c72:	80 eb       	ldi	r24, 0xB0	; 176
     c74:	93 eb       	ldi	r25, 0xB3	; 179
     c76:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <beepTiming+0x1>
     c7a:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beepTiming>
     c7e:	4d c0       	rjmp	.+154    	; 0xd1a <__stack+0x41b>
	}
	else if ((dist > 35) & (dist <= 40))
     c80:	11 e0       	ldi	r17, 0x01	; 1
     c82:	20 e0       	ldi	r18, 0x00	; 0
     c84:	30 e0       	ldi	r19, 0x00	; 0
     c86:	4c e0       	ldi	r20, 0x0C	; 12
     c88:	52 e4       	ldi	r21, 0x42	; 66
     c8a:	65 2d       	mov	r22, r5
     c8c:	74 2d       	mov	r23, r4
     c8e:	83 2d       	mov	r24, r3
     c90:	92 2d       	mov	r25, r2
     c92:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     c96:	18 16       	cp	r1, r24
     c98:	0c f0       	brlt	.+2      	; 0xc9c <__stack+0x39d>
     c9a:	10 e0       	ldi	r17, 0x00	; 0
     c9c:	11 23       	and	r17, r17
     c9e:	b9 f0       	breq	.+46     	; 0xcce <__stack+0x3cf>
     ca0:	11 e0       	ldi	r17, 0x01	; 1
     ca2:	20 e0       	ldi	r18, 0x00	; 0
     ca4:	30 e0       	ldi	r19, 0x00	; 0
     ca6:	40 e2       	ldi	r20, 0x20	; 32
     ca8:	52 e4       	ldi	r21, 0x42	; 66
     caa:	65 2d       	mov	r22, r5
     cac:	74 2d       	mov	r23, r4
     cae:	83 2d       	mov	r24, r3
     cb0:	92 2d       	mov	r25, r2
     cb2:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     cb6:	18 16       	cp	r1, r24
     cb8:	0c f4       	brge	.+2      	; 0xcbc <__stack+0x3bd>
     cba:	10 e0       	ldi	r17, 0x00	; 0
     cbc:	11 23       	and	r17, r17
     cbe:	39 f0       	breq	.+14     	; 0xcce <__stack+0x3cf>
	{
		beepTiming = 40000;
     cc0:	80 e4       	ldi	r24, 0x40	; 64
     cc2:	9c e9       	ldi	r25, 0x9C	; 156
     cc4:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <beepTiming+0x1>
     cc8:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beepTiming>
     ccc:	26 c0       	rjmp	.+76     	; 0xd1a <__stack+0x41b>
	}
	else if ((dist > 40) & (dist <= 50))
     cce:	11 e0       	ldi	r17, 0x01	; 1
     cd0:	20 e0       	ldi	r18, 0x00	; 0
     cd2:	30 e0       	ldi	r19, 0x00	; 0
     cd4:	40 e2       	ldi	r20, 0x20	; 32
     cd6:	52 e4       	ldi	r21, 0x42	; 66
     cd8:	65 2d       	mov	r22, r5
     cda:	74 2d       	mov	r23, r4
     cdc:	83 2d       	mov	r24, r3
     cde:	92 2d       	mov	r25, r2
     ce0:	0e 94 e5 0a 	call	0x15ca	; 0x15ca <__gesf2>
     ce4:	18 16       	cp	r1, r24
     ce6:	0c f0       	brlt	.+2      	; 0xcea <__stack+0x3eb>
     ce8:	10 e0       	ldi	r17, 0x00	; 0
     cea:	11 23       	and	r17, r17
     cec:	b1 f0       	breq	.+44     	; 0xd1a <__stack+0x41b>
     cee:	11 e0       	ldi	r17, 0x01	; 1
     cf0:	20 e0       	ldi	r18, 0x00	; 0
     cf2:	30 e0       	ldi	r19, 0x00	; 0
     cf4:	48 e4       	ldi	r20, 0x48	; 72
     cf6:	52 e4       	ldi	r21, 0x42	; 66
     cf8:	65 2d       	mov	r22, r5
     cfa:	74 2d       	mov	r23, r4
     cfc:	83 2d       	mov	r24, r3
     cfe:	92 2d       	mov	r25, r2
     d00:	0e 94 bc 09 	call	0x1378	; 0x1378 <__cmpsf2>
     d04:	18 16       	cp	r1, r24
     d06:	0c f4       	brge	.+2      	; 0xd0a <__stack+0x40b>
     d08:	10 e0       	ldi	r17, 0x00	; 0
     d0a:	11 23       	and	r17, r17
     d0c:	31 f0       	breq	.+12     	; 0xd1a <__stack+0x41b>
	{
		beepTiming = 34000;
     d0e:	80 ed       	ldi	r24, 0xD0	; 208
     d10:	94 e8       	ldi	r25, 0x84	; 132
     d12:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <beepTiming+0x1>
     d16:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beepTiming>
	}

	return beepTiming;
     d1a:	80 91 6b 01 	lds	r24, 0x016B	; 0x80016b <beepTiming>
     d1e:	90 91 6c 01 	lds	r25, 0x016C	; 0x80016c <beepTiming+0x1>
	
     d22:	cc 59       	subi	r28, 0x9C	; 156
     d24:	df 4f       	sbci	r29, 0xFF	; 255
     d26:	0f b6       	in	r0, 0x3f	; 63
     d28:	f8 94       	cli
     d2a:	de bf       	out	0x3e, r29	; 62
     d2c:	0f be       	out	0x3f, r0	; 63
     d2e:	cd bf       	out	0x3d, r28	; 61
     d30:	df 91       	pop	r29
     d32:	cf 91       	pop	r28
     d34:	1f 91       	pop	r17
     d36:	0f 91       	pop	r16
     d38:	ff 90       	pop	r15
     d3a:	ef 90       	pop	r14
     d3c:	df 90       	pop	r13
     d3e:	cf 90       	pop	r12
     d40:	bf 90       	pop	r11
     d42:	af 90       	pop	r10
     d44:	9f 90       	pop	r9
     d46:	8f 90       	pop	r8
     d48:	7f 90       	pop	r7
     d4a:	6f 90       	pop	r6
     d4c:	5f 90       	pop	r5
     d4e:	4f 90       	pop	r4
     d50:	3f 90       	pop	r3
     d52:	2f 90       	pop	r2
     d54:	08 95       	ret

00000d56 <main>:
/*          Declaration of displaying function           */
int displayValues(float distanceRear, float distanceFront);

int main(void)
{
	lcd_init(LCD_DISP_ON);
     d56:	8c e0       	ldi	r24, 0x0C	; 12
     d58:	0e 94 71 01 	call	0x2e2	; 0x2e2 <lcd_init>
	lcd_gotoxy(5, 0);
     d5c:	60 e0       	ldi	r22, 0x00	; 0
     d5e:	85 e0       	ldi	r24, 0x05	; 5
     d60:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts("Rid at");
     d64:	8d e3       	ldi	r24, 0x3D	; 61
     d66:	91 e0       	ldi	r25, 0x01	; 1
     d68:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	lcd_gotoxy(2, 1);
     d6c:	61 e0       	ldi	r22, 0x01	; 1
     d6e:	82 e0       	ldi	r24, 0x02	; 2
     d70:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts("jedes lip...");
     d74:	84 e4       	ldi	r24, 0x44	; 68
     d76:	91 e0       	ldi	r25, 0x01	; 1
     d78:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     d7c:	2f ef       	ldi	r18, 0xFF	; 255
     d7e:	83 ed       	ldi	r24, 0xD3	; 211
     d80:	90 e3       	ldi	r25, 0x30	; 48
     d82:	21 50       	subi	r18, 0x01	; 1
     d84:	80 40       	sbci	r24, 0x00	; 0
     d86:	90 40       	sbci	r25, 0x00	; 0
     d88:	e1 f7       	brne	.-8      	; 0xd82 <main+0x2c>
     d8a:	00 c0       	rjmp	.+0      	; 0xd8c <main+0x36>
     d8c:	00 00       	nop
	_delay_ms(1000);
	lcd_clrscr();
     d8e:	0e 94 59 01 	call	0x2b2	; 0x2b2 <lcd_clrscr>
	lcd_puts("Front:");
     d92:	81 e5       	ldi	r24, 0x51	; 81
     d94:	91 e0       	ldi	r25, 0x01	; 1
     d96:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	lcd_gotoxy(0, 1);
     d9a:	61 e0       	ldi	r22, 0x01	; 1
     d9c:	80 e0       	ldi	r24, 0x00	; 0
     d9e:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts("Rear:");
     da2:	88 e5       	ldi	r24, 0x58	; 88
     da4:	91 e0       	ldi	r25, 0x01	; 1
     da6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	lcd_gotoxy(14, 0);
     daa:	60 e0       	ldi	r22, 0x00	; 0
     dac:	8e e0       	ldi	r24, 0x0E	; 14
     dae:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts("cm");
     db2:	8e e5       	ldi	r24, 0x5E	; 94
     db4:	91 e0       	ldi	r25, 0x01	; 1
     db6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>
	lcd_gotoxy(14, 1);
     dba:	61 e0       	ldi	r22, 0x01	; 1
     dbc:	8e e0       	ldi	r24, 0x0E	; 14
     dbe:	0e 94 4f 01 	call	0x29e	; 0x29e <lcd_gotoxy>
	lcd_puts("cm");
     dc2:	8e e5       	ldi	r24, 0x5E	; 94
     dc4:	91 e0       	ldi	r25, 0x01	; 1
     dc6:	0e 94 61 01 	call	0x2c2	; 0x2c2 <lcd_puts>

/*    Initialization of bargraphs     */
	DIODE_init();
     dca:	0e 94 0e 08 	call	0x101c	; 0x101c <DIODE_init>
	
/*    Initialization of UART          */	
	uart_init(UART_BAUD_SELECT(9600, F_CPU));
     dce:	87 e6       	ldi	r24, 0x67	; 103
     dd0:	90 e0       	ldi	r25, 0x00	; 0
     dd2:	0e 94 12 09 	call	0x1224	; 0x1224 <uart_init>

/*    Pins configuration              */	
	GPIO_config_input_nopull(&DDRD, sensEchoFront);
     dd6:	63 e0       	ldi	r22, 0x03	; 3
     dd8:	8a e2       	ldi	r24, 0x2A	; 42
     dda:	90 e0       	ldi	r25, 0x00	; 0
     ddc:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <GPIO_config_input_nopull>
	GPIO_config_input_nopull(&DDRD, sensEchoRear);
     de0:	62 e0       	ldi	r22, 0x02	; 2
     de2:	8a e2       	ldi	r24, 0x2A	; 42
     de4:	90 e0       	ldi	r25, 0x00	; 0
     de6:	0e 94 e0 00 	call	0x1c0	; 0x1c0 <GPIO_config_input_nopull>
	
	GPIO_config_output(&DDRB, sensTrigFront);
     dea:	62 e0       	ldi	r22, 0x02	; 2
     dec:	84 e2       	ldi	r24, 0x24	; 36
     dee:	90 e0       	ldi	r25, 0x00	; 0
     df0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRB, sensTrigRear);
     df4:	63 e0       	ldi	r22, 0x03	; 3
     df6:	84 e2       	ldi	r24, 0x24	; 36
     df8:	90 e0       	ldi	r25, 0x00	; 0
     dfa:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	
	GPIO_write_low(&PORTB, sensTrigFront);
     dfe:	62 e0       	ldi	r22, 0x02	; 2
     e00:	85 e2       	ldi	r24, 0x25	; 37
     e02:	90 e0       	ldi	r25, 0x00	; 0
     e04:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTB, sensTrigRear);
     e08:	63 e0       	ldi	r22, 0x03	; 3
     e0a:	85 e2       	ldi	r24, 0x25	; 37
     e0c:	90 e0       	ldi	r25, 0x00	; 0
     e0e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	
	GPIO_config_output(&DDRB, buzzer);
     e12:	64 e0       	ldi	r22, 0x04	; 4
     e14:	84 e2       	ldi	r24, 0x24	; 36
     e16:	90 e0       	ldi	r25, 0x00	; 0
     e18:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_write_low(&PORTB, buzzer);
     e1c:	64 e0       	ldi	r22, 0x04	; 4
     e1e:	85 e2       	ldi	r24, 0x25	; 37
     e20:	90 e0       	ldi	r25, 0x00	; 0
     e22:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	
/*    Enable overflow from TIMER 1 - buzzer timing    */
	TIM1_overflow_1s();
     e26:	e1 e8       	ldi	r30, 0x81	; 129
     e28:	f0 e0       	ldi	r31, 0x00	; 0
     e2a:	80 81       	ld	r24, Z
     e2c:	8c 7f       	andi	r24, 0xFC	; 252
     e2e:	80 83       	st	Z, r24
     e30:	80 81       	ld	r24, Z
     e32:	84 60       	ori	r24, 0x04	; 4
     e34:	80 83       	st	Z, r24
	TIM1_overflow_interrupt_enable();
     e36:	ef e6       	ldi	r30, 0x6F	; 111
     e38:	f0 e0       	ldi	r31, 0x00	; 0
     e3a:	80 81       	ld	r24, Z
     e3c:	81 60       	ori	r24, 0x01	; 1
     e3e:	80 83       	st	Z, r24
	
/*	  Enable overflow from TIMER 0 - measuring of Echo length     */
	TIM0_overflow_16us();
     e40:	85 b5       	in	r24, 0x25	; 37
     e42:	89 7f       	andi	r24, 0xF9	; 249
     e44:	85 bd       	out	0x25, r24	; 37
     e46:	85 b5       	in	r24, 0x25	; 37
     e48:	81 60       	ori	r24, 0x01	; 1
     e4a:	85 bd       	out	0x25, r24	; 37
	TIM0_overflow_interrupt_enable();
     e4c:	ee e6       	ldi	r30, 0x6E	; 110
     e4e:	f0 e0       	ldi	r31, 0x00	; 0
     e50:	80 81       	ld	r24, Z
     e52:	81 60       	ori	r24, 0x01	; 1
     e54:	80 83       	st	Z, r24
	
	EIMSK |= (1<<INT1);								// interrupt enable on INT1
     e56:	e9 9a       	sbi	0x1d, 1	; 29
	EICRA &= ~(1<<ISC11); EICRA |= (1<<ISC10);		// interrupt when change is on INT1
     e58:	e9 e6       	ldi	r30, 0x69	; 105
     e5a:	f0 e0       	ldi	r31, 0x00	; 0
     e5c:	80 81       	ld	r24, Z
     e5e:	87 7f       	andi	r24, 0xF7	; 247
     e60:	80 83       	st	Z, r24
     e62:	80 81       	ld	r24, Z
     e64:	84 60       	ori	r24, 0x04	; 4
     e66:	80 83       	st	Z, r24
	EIMSK |= (1<<INT0);								// interrupt enable on INT0
     e68:	e8 9a       	sbi	0x1d, 0	; 29
	EICRA &= ~(1<<ISC01); EICRA |= (1<<ISC00);		// interrupt when change is on INT0
     e6a:	80 81       	ld	r24, Z
     e6c:	8d 7f       	andi	r24, 0xFD	; 253
     e6e:	80 83       	st	Z, r24
     e70:	80 81       	ld	r24, Z
     e72:	81 60       	ori	r24, 0x01	; 1
     e74:	80 83       	st	Z, r24
	
	sei();
     e76:	78 94       	sei
	
    /* Replace with your application code */
    while (1) 
    {
		if ((mux == 1) & (trigEnable == 1))
     e78:	c1 e0       	ldi	r28, 0x01	; 1
     e7a:	d0 e0       	ldi	r29, 0x00	; 0
     e7c:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <mux>
     e80:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <trigEnable>
     e84:	8c 2f       	mov	r24, r28
     e86:	11 30       	cpi	r17, 0x01	; 1
     e88:	09 f0       	breq	.+2      	; 0xe8c <main+0x136>
     e8a:	8d 2f       	mov	r24, r29
     e8c:	88 23       	and	r24, r24
     e8e:	09 f4       	brne	.+2      	; 0xe92 <main+0x13c>
     e90:	46 c0       	rjmp	.+140    	; 0xf1e <main+0x1c8>
     e92:	8c 2f       	mov	r24, r28
     e94:	91 30       	cpi	r25, 0x01	; 1
     e96:	09 f0       	breq	.+2      	; 0xe9a <main+0x144>
     e98:	8d 2f       	mov	r24, r29
     e9a:	88 23       	and	r24, r24
     e9c:	09 f4       	brne	.+2      	; 0xea0 <main+0x14a>
     e9e:	3f c0       	rjmp	.+126    	; 0xf1e <main+0x1c8>
		{	
 			if (averaging == 5)
     ea0:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <averaging>
     ea4:	85 30       	cpi	r24, 0x05	; 5
     ea6:	19 f5       	brne	.+70     	; 0xeee <main+0x198>
 			{
				distanceFront = distanceFront/averaging;
     ea8:	c0 90 66 01 	lds	r12, 0x0166	; 0x800166 <distanceFront>
     eac:	d0 90 67 01 	lds	r13, 0x0167	; 0x800167 <distanceFront+0x1>
     eb0:	e0 90 68 01 	lds	r14, 0x0168	; 0x800168 <distanceFront+0x2>
     eb4:	f0 90 69 01 	lds	r15, 0x0169	; 0x800169 <distanceFront+0x3>
     eb8:	60 91 6a 01 	lds	r22, 0x016A	; 0x80016a <averaging>
     ebc:	70 e0       	ldi	r23, 0x00	; 0
     ebe:	80 e0       	ldi	r24, 0x00	; 0
     ec0:	90 e0       	ldi	r25, 0x00	; 0
     ec2:	0e 94 35 0a 	call	0x146a	; 0x146a <__floatsisf>
     ec6:	9b 01       	movw	r18, r22
     ec8:	ac 01       	movw	r20, r24
     eca:	c7 01       	movw	r24, r14
     ecc:	b6 01       	movw	r22, r12
     ece:	0e 94 c1 09 	call	0x1382	; 0x1382 <__divsf3>
     ed2:	60 93 66 01 	sts	0x0166, r22	; 0x800166 <distanceFront>
     ed6:	70 93 67 01 	sts	0x0167, r23	; 0x800167 <distanceFront+0x1>
     eda:	80 93 68 01 	sts	0x0168, r24	; 0x800168 <distanceFront+0x2>
     ede:	90 93 69 01 	sts	0x0169, r25	; 0x800169 <distanceFront+0x3>
	 			averaging = 0;
     ee2:	d0 93 6a 01 	sts	0x016A, r29	; 0x80016a <averaging>
 	 			mux++;
     ee6:	1f 5f       	subi	r17, 0xFF	; 255
     ee8:	10 93 01 01 	sts	0x0101, r17	; 0x800101 <mux>
     eec:	18 c0       	rjmp	.+48     	; 0xf1e <main+0x1c8>
 			}else
			{
				trigEnable = 0;
     eee:	d0 93 02 01 	sts	0x0102, r29	; 0x800102 <trigEnable>
				help = true;
     ef2:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
     ef6:	87 ec       	ldi	r24, 0xC7	; 199
     ef8:	90 e0       	ldi	r25, 0x00	; 0
     efa:	01 97       	sbiw	r24, 0x01	; 1
     efc:	f1 f7       	brne	.-4      	; 0xefa <main+0x1a4>
     efe:	00 c0       	rjmp	.+0      	; 0xf00 <main+0x1aa>
     f00:	00 00       	nop
				/* triggering of front sensor */
				_delay_us(50);
				GPIO_write_high(&PORTB, sensTrigFront);
     f02:	62 e0       	ldi	r22, 0x02	; 2
     f04:	85 e2       	ldi	r24, 0x25	; 37
     f06:	90 e0       	ldi	r25, 0x00	; 0
     f08:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     f0c:	95 e3       	ldi	r25, 0x35	; 53
     f0e:	9a 95       	dec	r25
     f10:	f1 f7       	brne	.-4      	; 0xf0e <main+0x1b8>
     f12:	00 00       	nop
				_delay_us(10);
				GPIO_write_low(&PORTB, sensTrigFront);	 
     f14:	62 e0       	ldi	r22, 0x02	; 2
     f16:	85 e2       	ldi	r24, 0x25	; 37
     f18:	90 e0       	ldi	r25, 0x00	; 0
     f1a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
			 }
			
		}
		
		if ((mux == 2) & (trigEnable == 1))
     f1e:	10 91 01 01 	lds	r17, 0x0101	; 0x800101 <mux>
     f22:	90 91 02 01 	lds	r25, 0x0102	; 0x800102 <trigEnable>
     f26:	8c 2f       	mov	r24, r28
     f28:	12 30       	cpi	r17, 0x02	; 2
     f2a:	09 f0       	breq	.+2      	; 0xf2e <main+0x1d8>
     f2c:	8d 2f       	mov	r24, r29
     f2e:	88 23       	and	r24, r24
     f30:	09 f4       	brne	.+2      	; 0xf34 <main+0x1de>
     f32:	46 c0       	rjmp	.+140    	; 0xfc0 <main+0x26a>
     f34:	8c 2f       	mov	r24, r28
     f36:	91 30       	cpi	r25, 0x01	; 1
     f38:	09 f0       	breq	.+2      	; 0xf3c <main+0x1e6>
     f3a:	8d 2f       	mov	r24, r29
     f3c:	88 23       	and	r24, r24
     f3e:	09 f4       	brne	.+2      	; 0xf42 <main+0x1ec>
     f40:	3f c0       	rjmp	.+126    	; 0xfc0 <main+0x26a>
		{	
			if (averaging == 5)
     f42:	80 91 6a 01 	lds	r24, 0x016A	; 0x80016a <averaging>
     f46:	85 30       	cpi	r24, 0x05	; 5
     f48:	19 f5       	brne	.+70     	; 0xf90 <main+0x23a>
			{
				distanceRear = distanceRear/averaging;
     f4a:	c0 90 62 01 	lds	r12, 0x0162	; 0x800162 <__data_end>
     f4e:	d0 90 63 01 	lds	r13, 0x0163	; 0x800163 <__data_end+0x1>
     f52:	e0 90 64 01 	lds	r14, 0x0164	; 0x800164 <__data_end+0x2>
     f56:	f0 90 65 01 	lds	r15, 0x0165	; 0x800165 <__data_end+0x3>
     f5a:	60 91 6a 01 	lds	r22, 0x016A	; 0x80016a <averaging>
     f5e:	70 e0       	ldi	r23, 0x00	; 0
     f60:	80 e0       	ldi	r24, 0x00	; 0
     f62:	90 e0       	ldi	r25, 0x00	; 0
     f64:	0e 94 35 0a 	call	0x146a	; 0x146a <__floatsisf>
     f68:	9b 01       	movw	r18, r22
     f6a:	ac 01       	movw	r20, r24
     f6c:	c7 01       	movw	r24, r14
     f6e:	b6 01       	movw	r22, r12
     f70:	0e 94 c1 09 	call	0x1382	; 0x1382 <__divsf3>
     f74:	60 93 62 01 	sts	0x0162, r22	; 0x800162 <__data_end>
     f78:	70 93 63 01 	sts	0x0163, r23	; 0x800163 <__data_end+0x1>
     f7c:	80 93 64 01 	sts	0x0164, r24	; 0x800164 <__data_end+0x2>
     f80:	90 93 65 01 	sts	0x0165, r25	; 0x800165 <__data_end+0x3>
				averaging = 0;	
     f84:	d0 93 6a 01 	sts	0x016A, r29	; 0x80016a <averaging>
 				mux++;		
     f88:	1f 5f       	subi	r17, 0xFF	; 255
     f8a:	10 93 01 01 	sts	0x0101, r17	; 0x800101 <mux>
     f8e:	18 c0       	rjmp	.+48     	; 0xfc0 <main+0x26a>
			} else
			{
				trigEnable = 0;
     f90:	d0 93 02 01 	sts	0x0102, r29	; 0x800102 <trigEnable>
				help = true;
     f94:	c0 93 00 01 	sts	0x0100, r28	; 0x800100 <__data_start>
     f98:	87 ec       	ldi	r24, 0xC7	; 199
     f9a:	90 e0       	ldi	r25, 0x00	; 0
     f9c:	01 97       	sbiw	r24, 0x01	; 1
     f9e:	f1 f7       	brne	.-4      	; 0xf9c <main+0x246>
     fa0:	00 c0       	rjmp	.+0      	; 0xfa2 <main+0x24c>
     fa2:	00 00       	nop
				/* triggering of rear sensor */
				_delay_us(50);
				GPIO_write_high(&PORTB, sensTrigRear);
     fa4:	63 e0       	ldi	r22, 0x03	; 3
     fa6:	85 e2       	ldi	r24, 0x25	; 37
     fa8:	90 e0       	ldi	r25, 0x00	; 0
     faa:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
     fae:	95 e3       	ldi	r25, 0x35	; 53
     fb0:	9a 95       	dec	r25
     fb2:	f1 f7       	brne	.-4      	; 0xfb0 <main+0x25a>
     fb4:	00 00       	nop
				_delay_us(10);
				GPIO_write_low(&PORTB, sensTrigRear);
     fb6:	63 e0       	ldi	r22, 0x03	; 3
     fb8:	85 e2       	ldi	r24, 0x25	; 37
     fba:	90 e0       	ldi	r25, 0x00	; 0
     fbc:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
			}
		}
		
		if (mux == 3)
     fc0:	80 91 01 01 	lds	r24, 0x0101	; 0x800101 <mux>
     fc4:	83 30       	cpi	r24, 0x03	; 3
     fc6:	09 f0       	breq	.+2      	; 0xfca <main+0x274>
     fc8:	59 cf       	rjmp	.-334    	; 0xe7c <main+0x126>
		{
			beepTiming = displayValues(distanceRear, distanceFront);	// function that display values on LCD, UART, LEDs
     fca:	20 91 66 01 	lds	r18, 0x0166	; 0x800166 <distanceFront>
     fce:	30 91 67 01 	lds	r19, 0x0167	; 0x800167 <distanceFront+0x1>
     fd2:	40 91 68 01 	lds	r20, 0x0168	; 0x800168 <distanceFront+0x2>
     fd6:	50 91 69 01 	lds	r21, 0x0169	; 0x800169 <distanceFront+0x3>
     fda:	60 91 62 01 	lds	r22, 0x0162	; 0x800162 <__data_end>
     fde:	70 91 63 01 	lds	r23, 0x0163	; 0x800163 <__data_end+0x1>
     fe2:	80 91 64 01 	lds	r24, 0x0164	; 0x800164 <__data_end+0x2>
     fe6:	90 91 65 01 	lds	r25, 0x0165	; 0x800165 <__data_end+0x3>
     fea:	0e 94 6f 02 	call	0x4de	; 0x4de <displayValues>
     fee:	90 93 6c 01 	sts	0x016C, r25	; 0x80016c <beepTiming+0x1>
     ff2:	80 93 6b 01 	sts	0x016B, r24	; 0x80016b <beepTiming>
			distanceFront = 0;												  // and returns value for beep timer
     ff6:	10 92 66 01 	sts	0x0166, r1	; 0x800166 <distanceFront>
     ffa:	10 92 67 01 	sts	0x0167, r1	; 0x800167 <distanceFront+0x1>
     ffe:	10 92 68 01 	sts	0x0168, r1	; 0x800168 <distanceFront+0x2>
    1002:	10 92 69 01 	sts	0x0169, r1	; 0x800169 <distanceFront+0x3>
			distanceRear = 0;
    1006:	10 92 62 01 	sts	0x0162, r1	; 0x800162 <__data_end>
    100a:	10 92 63 01 	sts	0x0163, r1	; 0x800163 <__data_end+0x1>
    100e:	10 92 64 01 	sts	0x0164, r1	; 0x800164 <__data_end+0x2>
    1012:	10 92 65 01 	sts	0x0165, r1	; 0x800165 <__data_end+0x3>
			mux = 1;
    1016:	c0 93 01 01 	sts	0x0101, r28	; 0x800101 <mux>
    101a:	30 cf       	rjmp	.-416    	; 0xe7c <main+0x126>

0000101c <DIODE_init>:

/* Function definitions ----------------------------------------------*/
void DIODE_init(void)
{
	/* Configuration of SSD signals */
	GPIO_config_output(&DDRC, DATA_INPUT_REAR);
    101c:	63 e0       	ldi	r22, 0x03	; 3
    101e:	87 e2       	ldi	r24, 0x27	; 39
    1020:	90 e0       	ldi	r25, 0x00	; 0
    1022:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, DATA_INPUT_FRONT);
    1026:	60 e0       	ldi	r22, 0x00	; 0
    1028:	87 e2       	ldi	r24, 0x27	; 39
    102a:	90 e0       	ldi	r25, 0x00	; 0
    102c:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, SEGMENT_CLK);
    1030:	62 e0       	ldi	r22, 0x02	; 2
    1032:	87 e2       	ldi	r24, 0x27	; 39
    1034:	90 e0       	ldi	r25, 0x00	; 0
    1036:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, SEGMENT_LATCH_BAR_1);
    103a:	61 e0       	ldi	r22, 0x01	; 1
    103c:	87 e2       	ldi	r24, 0x27	; 39
    103e:	90 e0       	ldi	r25, 0x00	; 0
    1040:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
	GPIO_config_output(&DDRC, SEGMENT_LATCH_BAR_2);
    1044:	64 e0       	ldi	r22, 0x04	; 4
    1046:	87 e2       	ldi	r24, 0x27	; 39
    1048:	90 e0       	ldi	r25, 0x00	; 0
    104a:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <GPIO_config_output>
    104e:	08 95       	ret

00001050 <DIODE_FRONT>:

}

/*--------------------------------------------------------------------*/
void DIODE_FRONT(uint8_t number_of_diodes_bar_1)
{
    1050:	cf 93       	push	r28
    1052:	df 93       	push	r29
	uint8_t bit_number_diodes_1;
	number_of_diodes_bar_1 = diode_number[number_of_diodes_bar_1];
    1054:	e8 2f       	mov	r30, r24
    1056:	f0 e0       	ldi	r31, 0x00	; 0
    1058:	ed 5f       	subi	r30, 0xFD	; 253
    105a:	fe 4f       	sbci	r31, 0xFE	; 254
    105c:	d0 81       	ld	r29, Z
	
	// 
	GPIO_write_low(&PORTC,DATA_INPUT_FRONT);
    105e:	60 e0       	ldi	r22, 0x00	; 0
    1060:	88 e2       	ldi	r24, 0x28	; 40
    1062:	90 e0       	ldi	r25, 0x00	; 0
    1064:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_CLK);
    1068:	62 e0       	ldi	r22, 0x02	; 2
    106a:	88 e2       	ldi	r24, 0x28	; 40
    106c:	90 e0       	ldi	r25, 0x00	; 0
    106e:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_LATCH_BAR_1);	
    1072:	61 e0       	ldi	r22, 0x01	; 1
    1074:	88 e2       	ldi	r24, 0x28	; 40
    1076:	90 e0       	ldi	r25, 0x00	; 0
    1078:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
    107c:	85 e0       	ldi	r24, 0x05	; 5
    107e:	8a 95       	dec	r24
    1080:	f1 f7       	brne	.-4      	; 0x107e <DIODE_FRONT+0x2e>
    1082:	00 00       	nop
    1084:	c8 e0       	ldi	r28, 0x08	; 8
	

	for (bit_number_diodes_1 = 0; bit_number_diodes_1 < 8; bit_number_diodes_1++)
	{
		// Output DATA value (bit 0 of "segments")
		if ((number_of_diodes_bar_1 & 1) == 0)
    1086:	d0 fd       	sbrc	r29, 0
    1088:	06 c0       	rjmp	.+12     	; 0x1096 <DIODE_FRONT+0x46>
		{
			GPIO_write_low(&PORTC,DATA_INPUT_FRONT);
    108a:	60 e0       	ldi	r22, 0x00	; 0
    108c:	88 e2       	ldi	r24, 0x28	; 40
    108e:	90 e0       	ldi	r25, 0x00	; 0
    1090:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
    1094:	05 c0       	rjmp	.+10     	; 0x10a0 <DIODE_FRONT+0x50>
		}
		else
		{
			GPIO_write_high(&PORTC, DATA_INPUT_FRONT);
    1096:	60 e0       	ldi	r22, 0x00	; 0
    1098:	88 e2       	ldi	r24, 0x28	; 40
    109a:	90 e0       	ldi	r25, 0x00	; 0
    109c:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
    10a0:	85 e0       	ldi	r24, 0x05	; 5
    10a2:	8a 95       	dec	r24
    10a4:	f1 f7       	brne	.-4      	; 0x10a2 <DIODE_FRONT+0x52>
    10a6:	00 00       	nop
		}

 		// Wait 1 us
 		_delay_us(1);
 		// Pull CLK high
 		GPIO_write_high(&PORTC,SEGMENT_CLK);
    10a8:	62 e0       	ldi	r22, 0x02	; 2
    10aa:	88 e2       	ldi	r24, 0x28	; 40
    10ac:	90 e0       	ldi	r25, 0x00	; 0
    10ae:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
    10b2:	85 e0       	ldi	r24, 0x05	; 5
    10b4:	8a 95       	dec	r24
    10b6:	f1 f7       	brne	.-4      	; 0x10b4 <DIODE_FRONT+0x64>
    10b8:	00 00       	nop
 		// Wait 1 us
 		_delay_us(1);
 		// Pull CLK low
 		GPIO_write_low(&PORTC,SEGMENT_CLK);
    10ba:	62 e0       	ldi	r22, 0x02	; 2
    10bc:	88 e2       	ldi	r24, 0x28	; 40
    10be:	90 e0       	ldi	r25, 0x00	; 0
    10c0:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
		 		
		number_of_diodes_bar_1 = number_of_diodes_bar_1 >> 1;
    10c4:	d6 95       	lsr	r29
    10c6:	c1 50       	subi	r28, 0x01	; 1
	GPIO_write_low(&PORTC, SEGMENT_LATCH_BAR_1);	
	// Wait 1 us
	_delay_us(1);
	

	for (bit_number_diodes_1 = 0; bit_number_diodes_1 < 8; bit_number_diodes_1++)
    10c8:	f1 f6       	brne	.-68     	; 0x1086 <DIODE_FRONT+0x36>
		
	}
	

// 	// Pull LATCH high
 	GPIO_write_high(&PORTC,SEGMENT_LATCH_BAR_1);
    10ca:	61 e0       	ldi	r22, 0x01	; 1
    10cc:	88 e2       	ldi	r24, 0x28	; 40
    10ce:	90 e0       	ldi	r25, 0x00	; 0
    10d0:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
    10d4:	85 e0       	ldi	r24, 0x05	; 5
    10d6:	8a 95       	dec	r24
    10d8:	f1 f7       	brne	.-4      	; 0x10d6 <DIODE_FRONT+0x86>
    10da:	00 00       	nop

	// Wait 1 us
	_delay_us(1);

}
    10dc:	df 91       	pop	r29
    10de:	cf 91       	pop	r28
    10e0:	08 95       	ret

000010e2 <DIODE_REAR>:

/*--------------------------------------------------------------------*/
void DIODE_REAR(uint8_t number_of_diodes_bar_2)
{
    10e2:	cf 93       	push	r28
    10e4:	df 93       	push	r29
	uint8_t bit_number_diodes_2;
	number_of_diodes_bar_2 = diode_number[number_of_diodes_bar_2];
    10e6:	e8 2f       	mov	r30, r24
    10e8:	f0 e0       	ldi	r31, 0x00	; 0
    10ea:	ed 5f       	subi	r30, 0xFD	; 253
    10ec:	fe 4f       	sbci	r31, 0xFE	; 254
    10ee:	d0 81       	ld	r29, Z
	
	
	//
	GPIO_write_low(&PORTC,DATA_INPUT_REAR);
    10f0:	63 e0       	ldi	r22, 0x03	; 3
    10f2:	88 e2       	ldi	r24, 0x28	; 40
    10f4:	90 e0       	ldi	r25, 0x00	; 0
    10f6:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_CLK);
    10fa:	62 e0       	ldi	r22, 0x02	; 2
    10fc:	88 e2       	ldi	r24, 0x28	; 40
    10fe:	90 e0       	ldi	r25, 0x00	; 0
    1100:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
	GPIO_write_low(&PORTC, SEGMENT_LATCH_BAR_2);
    1104:	64 e0       	ldi	r22, 0x04	; 4
    1106:	88 e2       	ldi	r24, 0x28	; 40
    1108:	90 e0       	ldi	r25, 0x00	; 0
    110a:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
    110e:	85 e0       	ldi	r24, 0x05	; 5
    1110:	8a 95       	dec	r24
    1112:	f1 f7       	brne	.-4      	; 0x1110 <DIODE_REAR+0x2e>
    1114:	00 00       	nop
    1116:	c8 e0       	ldi	r28, 0x08	; 8
	

	for (bit_number_diodes_2 = 0; bit_number_diodes_2 < 8; bit_number_diodes_2++)
	{
		// Output DATA value (bit 0 of "segments")
		if ((number_of_diodes_bar_2 & 1) == 0)
    1118:	d0 fd       	sbrc	r29, 0
    111a:	06 c0       	rjmp	.+12     	; 0x1128 <DIODE_REAR+0x46>
		{
			GPIO_write_low(&PORTC,DATA_INPUT_REAR);
    111c:	63 e0       	ldi	r22, 0x03	; 3
    111e:	88 e2       	ldi	r24, 0x28	; 40
    1120:	90 e0       	ldi	r25, 0x00	; 0
    1122:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
    1126:	05 c0       	rjmp	.+10     	; 0x1132 <DIODE_REAR+0x50>
		}
		else
		{
			GPIO_write_high(&PORTC, DATA_INPUT_REAR);
    1128:	63 e0       	ldi	r22, 0x03	; 3
    112a:	88 e2       	ldi	r24, 0x28	; 40
    112c:	90 e0       	ldi	r25, 0x00	; 0
    112e:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
    1132:	85 e0       	ldi	r24, 0x05	; 5
    1134:	8a 95       	dec	r24
    1136:	f1 f7       	brne	.-4      	; 0x1134 <DIODE_REAR+0x52>
    1138:	00 00       	nop
		}

		// Wait 1 us
		_delay_us(1);
		// Pull CLK high
		GPIO_write_high(&PORTC,SEGMENT_CLK);
    113a:	62 e0       	ldi	r22, 0x02	; 2
    113c:	88 e2       	ldi	r24, 0x28	; 40
    113e:	90 e0       	ldi	r25, 0x00	; 0
    1140:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
    1144:	85 e0       	ldi	r24, 0x05	; 5
    1146:	8a 95       	dec	r24
    1148:	f1 f7       	brne	.-4      	; 0x1146 <DIODE_REAR+0x64>
    114a:	00 00       	nop
		// Wait 1 us
		_delay_us(1);
		// Pull CLK low
		GPIO_write_low(&PORTC,SEGMENT_CLK);
    114c:	62 e0       	ldi	r22, 0x02	; 2
    114e:	88 e2       	ldi	r24, 0x28	; 40
    1150:	90 e0       	ldi	r25, 0x00	; 0
    1152:	0e 94 f1 00 	call	0x1e2	; 0x1e2 <GPIO_write_low>
		
		number_of_diodes_bar_2 = number_of_diodes_bar_2 >> 1;
    1156:	d6 95       	lsr	r29
    1158:	c1 50       	subi	r28, 0x01	; 1
	GPIO_write_low(&PORTC, SEGMENT_LATCH_BAR_2);
	// Wait 1 us
	_delay_us(1);
	

	for (bit_number_diodes_2 = 0; bit_number_diodes_2 < 8; bit_number_diodes_2++)
    115a:	f1 f6       	brne	.-68     	; 0x1118 <DIODE_REAR+0x36>
		
	}
	
	
	// 	// Pull LATCH high
	GPIO_write_high(&PORTC,SEGMENT_LATCH_BAR_2);
    115c:	64 e0       	ldi	r22, 0x04	; 4
    115e:	88 e2       	ldi	r24, 0x28	; 40
    1160:	90 e0       	ldi	r25, 0x00	; 0
    1162:	0e 94 fe 00 	call	0x1fc	; 0x1fc <GPIO_write_high>
    1166:	85 e0       	ldi	r24, 0x05	; 5
    1168:	8a 95       	dec	r24
    116a:	f1 f7       	brne	.-4      	; 0x1168 <DIODE_REAR+0x86>
    116c:	00 00       	nop

	// Wait 1 us
	_delay_us(1);

    116e:	df 91       	pop	r29
    1170:	cf 91       	pop	r28
    1172:	08 95       	ret

00001174 <__vector_18>:
    /* store buffer index */
    UART_RxTail = tmptail;

    UART_LastRxError = 0;
    return (lastRxError << 8) + data;
}/* uart_getc */
    1174:	1f 92       	push	r1
    1176:	0f 92       	push	r0
    1178:	0f b6       	in	r0, 0x3f	; 63
    117a:	0f 92       	push	r0
    117c:	11 24       	eor	r1, r1
    117e:	2f 93       	push	r18
    1180:	8f 93       	push	r24
    1182:	9f 93       	push	r25
    1184:	ef 93       	push	r30
    1186:	ff 93       	push	r31
    1188:	80 91 c0 00 	lds	r24, 0x00C0	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    118c:	20 91 c6 00 	lds	r18, 0x00C6	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1190:	8c 71       	andi	r24, 0x1C	; 28
    1192:	e0 91 6f 01 	lds	r30, 0x016F	; 0x80016f <UART_RxHead>
    1196:	ef 5f       	subi	r30, 0xFF	; 255
    1198:	ef 71       	andi	r30, 0x1F	; 31
    119a:	90 91 6e 01 	lds	r25, 0x016E	; 0x80016e <UART_RxTail>
    119e:	e9 17       	cp	r30, r25
    11a0:	39 f0       	breq	.+14     	; 0x11b0 <__vector_18+0x3c>
    11a2:	e0 93 6f 01 	sts	0x016F, r30	; 0x80016f <UART_RxHead>
    11a6:	f0 e0       	ldi	r31, 0x00	; 0
    11a8:	ee 58       	subi	r30, 0x8E	; 142
    11aa:	fe 4f       	sbci	r31, 0xFE	; 254
    11ac:	20 83       	st	Z, r18
    11ae:	01 c0       	rjmp	.+2      	; 0x11b2 <__vector_18+0x3e>
    11b0:	82 e0       	ldi	r24, 0x02	; 2
    11b2:	90 91 6d 01 	lds	r25, 0x016D	; 0x80016d <UART_LastRxError>
    11b6:	89 2b       	or	r24, r25
    11b8:	80 93 6d 01 	sts	0x016D, r24	; 0x80016d <UART_LastRxError>
    11bc:	ff 91       	pop	r31
    11be:	ef 91       	pop	r30
    11c0:	9f 91       	pop	r25
    11c2:	8f 91       	pop	r24
    11c4:	2f 91       	pop	r18
    11c6:	0f 90       	pop	r0
    11c8:	0f be       	out	0x3f, r0	; 63
    11ca:	0f 90       	pop	r0
    11cc:	1f 90       	pop	r1
    11ce:	18 95       	reti

000011d0 <__vector_19>:
    11d0:	1f 92       	push	r1
    11d2:	0f 92       	push	r0
    11d4:	0f b6       	in	r0, 0x3f	; 63
    11d6:	0f 92       	push	r0
    11d8:	11 24       	eor	r1, r1
    11da:	8f 93       	push	r24
    11dc:	9f 93       	push	r25
    11de:	ef 93       	push	r30
    11e0:	ff 93       	push	r31
    11e2:	90 91 71 01 	lds	r25, 0x0171	; 0x800171 <UART_TxHead>
    11e6:	80 91 70 01 	lds	r24, 0x0170	; 0x800170 <UART_TxTail>
    11ea:	98 17       	cp	r25, r24
    11ec:	69 f0       	breq	.+26     	; 0x1208 <__vector_19+0x38>
    11ee:	e0 91 70 01 	lds	r30, 0x0170	; 0x800170 <UART_TxTail>
    11f2:	ef 5f       	subi	r30, 0xFF	; 255
    11f4:	ef 71       	andi	r30, 0x1F	; 31
    11f6:	e0 93 70 01 	sts	0x0170, r30	; 0x800170 <UART_TxTail>
    11fa:	f0 e0       	ldi	r31, 0x00	; 0
    11fc:	ee 56       	subi	r30, 0x6E	; 110
    11fe:	fe 4f       	sbci	r31, 0xFE	; 254
    1200:	80 81       	ld	r24, Z
    1202:	80 93 c6 00 	sts	0x00C6, r24	; 0x8000c6 <__DATA_REGION_ORIGIN__+0x66>
    1206:	05 c0       	rjmp	.+10     	; 0x1212 <__vector_19+0x42>
    1208:	e1 ec       	ldi	r30, 0xC1	; 193
    120a:	f0 e0       	ldi	r31, 0x00	; 0
    120c:	80 81       	ld	r24, Z
    120e:	8f 7d       	andi	r24, 0xDF	; 223
    1210:	80 83       	st	Z, r24
    1212:	ff 91       	pop	r31
    1214:	ef 91       	pop	r30
    1216:	9f 91       	pop	r25
    1218:	8f 91       	pop	r24
    121a:	0f 90       	pop	r0
    121c:	0f be       	out	0x3f, r0	; 63
    121e:	0f 90       	pop	r0
    1220:	1f 90       	pop	r1
    1222:	18 95       	reti

00001224 <uart_init>:
    1224:	10 92 71 01 	sts	0x0171, r1	; 0x800171 <UART_TxHead>
    1228:	10 92 70 01 	sts	0x0170, r1	; 0x800170 <UART_TxTail>
    122c:	10 92 6f 01 	sts	0x016F, r1	; 0x80016f <UART_RxHead>
    1230:	10 92 6e 01 	sts	0x016E, r1	; 0x80016e <UART_RxTail>
    1234:	99 23       	and	r25, r25
    1236:	1c f4       	brge	.+6      	; 0x123e <uart_init+0x1a>
    1238:	22 e0       	ldi	r18, 0x02	; 2
    123a:	20 93 c0 00 	sts	0x00C0, r18	; 0x8000c0 <__DATA_REGION_ORIGIN__+0x60>
    123e:	90 78       	andi	r25, 0x80	; 128
    1240:	90 93 c5 00 	sts	0x00C5, r25	; 0x8000c5 <__DATA_REGION_ORIGIN__+0x65>
    1244:	80 93 c4 00 	sts	0x00C4, r24	; 0x8000c4 <__DATA_REGION_ORIGIN__+0x64>
    1248:	88 e9       	ldi	r24, 0x98	; 152
    124a:	80 93 c1 00 	sts	0x00C1, r24	; 0x8000c1 <__DATA_REGION_ORIGIN__+0x61>
    124e:	86 e0       	ldi	r24, 0x06	; 6
    1250:	80 93 c2 00 	sts	0x00C2, r24	; 0x8000c2 <__DATA_REGION_ORIGIN__+0x62>
    1254:	08 95       	ret

00001256 <uart_putc>:
void uart_putc(unsigned char data)
{
    unsigned char tmphead;


    tmphead = (UART_TxHead + 1) & UART_TX_BUFFER_MASK;
    1256:	20 91 71 01 	lds	r18, 0x0171	; 0x800171 <UART_TxHead>
    125a:	2f 5f       	subi	r18, 0xFF	; 255
    125c:	2f 71       	andi	r18, 0x1F	; 31

    while (tmphead == UART_TxTail)
    125e:	90 91 70 01 	lds	r25, 0x0170	; 0x800170 <UART_TxTail>
    1262:	29 17       	cp	r18, r25
    1264:	e1 f3       	breq	.-8      	; 0x125e <uart_putc+0x8>
    {
        ;/* wait for free space in buffer */
    }

    UART_TxBuf[tmphead] = data;
    1266:	e2 2f       	mov	r30, r18
    1268:	f0 e0       	ldi	r31, 0x00	; 0
    126a:	ee 56       	subi	r30, 0x6E	; 110
    126c:	fe 4f       	sbci	r31, 0xFE	; 254
    126e:	80 83       	st	Z, r24
    UART_TxHead         = tmphead;
    1270:	20 93 71 01 	sts	0x0171, r18	; 0x800171 <UART_TxHead>

    /* enable UDRE interrupt */
    UART0_CONTROL |= _BV(UART0_UDRIE);
    1274:	e1 ec       	ldi	r30, 0xC1	; 193
    1276:	f0 e0       	ldi	r31, 0x00	; 0
    1278:	80 81       	ld	r24, Z
    127a:	80 62       	ori	r24, 0x20	; 32
    127c:	80 83       	st	Z, r24
    127e:	08 95       	ret

00001280 <uart_puts>:
 * Purpose:  transmit string to UART
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    1280:	cf 93       	push	r28
    1282:	df 93       	push	r29
    1284:	ec 01       	movw	r28, r24
    while (*s)
    1286:	88 81       	ld	r24, Y
    1288:	88 23       	and	r24, r24
    128a:	31 f0       	breq	.+12     	; 0x1298 <uart_puts+0x18>
    128c:	21 96       	adiw	r28, 0x01	; 1
        uart_putc(*s++);
    128e:	0e 94 2b 09 	call	0x1256	; 0x1256 <uart_putc>
 * Input:    string to be transmitted
 * Returns:  none
 **************************************************************************/
void uart_puts(const char *s)
{
    while (*s)
    1292:	89 91       	ld	r24, Y+
    1294:	81 11       	cpse	r24, r1
    1296:	fb cf       	rjmp	.-10     	; 0x128e <uart_puts+0xe>
        uart_putc(*s++);
}/* uart_puts */
    1298:	df 91       	pop	r29
    129a:	cf 91       	pop	r28
    129c:	08 95       	ret

0000129e <__subsf3>:
    129e:	50 58       	subi	r21, 0x80	; 128

000012a0 <__addsf3>:
    12a0:	bb 27       	eor	r27, r27
    12a2:	aa 27       	eor	r26, r26
    12a4:	0e 94 67 09 	call	0x12ce	; 0x12ce <__addsf3x>
    12a8:	0c 94 ab 0a 	jmp	0x1556	; 0x1556 <__fp_round>
    12ac:	0e 94 9d 0a 	call	0x153a	; 0x153a <__fp_pscA>
    12b0:	38 f0       	brcs	.+14     	; 0x12c0 <__addsf3+0x20>
    12b2:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__fp_pscB>
    12b6:	20 f0       	brcs	.+8      	; 0x12c0 <__addsf3+0x20>
    12b8:	39 f4       	brne	.+14     	; 0x12c8 <__addsf3+0x28>
    12ba:	9f 3f       	cpi	r25, 0xFF	; 255
    12bc:	19 f4       	brne	.+6      	; 0x12c4 <__addsf3+0x24>
    12be:	26 f4       	brtc	.+8      	; 0x12c8 <__addsf3+0x28>
    12c0:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__fp_nan>
    12c4:	0e f4       	brtc	.+2      	; 0x12c8 <__addsf3+0x28>
    12c6:	e0 95       	com	r30
    12c8:	e7 fb       	bst	r30, 7
    12ca:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_inf>

000012ce <__addsf3x>:
    12ce:	e9 2f       	mov	r30, r25
    12d0:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__fp_split3>
    12d4:	58 f3       	brcs	.-42     	; 0x12ac <__addsf3+0xc>
    12d6:	ba 17       	cp	r27, r26
    12d8:	62 07       	cpc	r22, r18
    12da:	73 07       	cpc	r23, r19
    12dc:	84 07       	cpc	r24, r20
    12de:	95 07       	cpc	r25, r21
    12e0:	20 f0       	brcs	.+8      	; 0x12ea <__addsf3x+0x1c>
    12e2:	79 f4       	brne	.+30     	; 0x1302 <__addsf3x+0x34>
    12e4:	a6 f5       	brtc	.+104    	; 0x134e <__addsf3x+0x80>
    12e6:	0c 94 de 0a 	jmp	0x15bc	; 0x15bc <__fp_zero>
    12ea:	0e f4       	brtc	.+2      	; 0x12ee <__addsf3x+0x20>
    12ec:	e0 95       	com	r30
    12ee:	0b 2e       	mov	r0, r27
    12f0:	ba 2f       	mov	r27, r26
    12f2:	a0 2d       	mov	r26, r0
    12f4:	0b 01       	movw	r0, r22
    12f6:	b9 01       	movw	r22, r18
    12f8:	90 01       	movw	r18, r0
    12fa:	0c 01       	movw	r0, r24
    12fc:	ca 01       	movw	r24, r20
    12fe:	a0 01       	movw	r20, r0
    1300:	11 24       	eor	r1, r1
    1302:	ff 27       	eor	r31, r31
    1304:	59 1b       	sub	r21, r25
    1306:	99 f0       	breq	.+38     	; 0x132e <__addsf3x+0x60>
    1308:	59 3f       	cpi	r21, 0xF9	; 249
    130a:	50 f4       	brcc	.+20     	; 0x1320 <__addsf3x+0x52>
    130c:	50 3e       	cpi	r21, 0xE0	; 224
    130e:	68 f1       	brcs	.+90     	; 0x136a <__addsf3x+0x9c>
    1310:	1a 16       	cp	r1, r26
    1312:	f0 40       	sbci	r31, 0x00	; 0
    1314:	a2 2f       	mov	r26, r18
    1316:	23 2f       	mov	r18, r19
    1318:	34 2f       	mov	r19, r20
    131a:	44 27       	eor	r20, r20
    131c:	58 5f       	subi	r21, 0xF8	; 248
    131e:	f3 cf       	rjmp	.-26     	; 0x1306 <__addsf3x+0x38>
    1320:	46 95       	lsr	r20
    1322:	37 95       	ror	r19
    1324:	27 95       	ror	r18
    1326:	a7 95       	ror	r26
    1328:	f0 40       	sbci	r31, 0x00	; 0
    132a:	53 95       	inc	r21
    132c:	c9 f7       	brne	.-14     	; 0x1320 <__addsf3x+0x52>
    132e:	7e f4       	brtc	.+30     	; 0x134e <__addsf3x+0x80>
    1330:	1f 16       	cp	r1, r31
    1332:	ba 0b       	sbc	r27, r26
    1334:	62 0b       	sbc	r22, r18
    1336:	73 0b       	sbc	r23, r19
    1338:	84 0b       	sbc	r24, r20
    133a:	ba f0       	brmi	.+46     	; 0x136a <__addsf3x+0x9c>
    133c:	91 50       	subi	r25, 0x01	; 1
    133e:	a1 f0       	breq	.+40     	; 0x1368 <__addsf3x+0x9a>
    1340:	ff 0f       	add	r31, r31
    1342:	bb 1f       	adc	r27, r27
    1344:	66 1f       	adc	r22, r22
    1346:	77 1f       	adc	r23, r23
    1348:	88 1f       	adc	r24, r24
    134a:	c2 f7       	brpl	.-16     	; 0x133c <__addsf3x+0x6e>
    134c:	0e c0       	rjmp	.+28     	; 0x136a <__addsf3x+0x9c>
    134e:	ba 0f       	add	r27, r26
    1350:	62 1f       	adc	r22, r18
    1352:	73 1f       	adc	r23, r19
    1354:	84 1f       	adc	r24, r20
    1356:	48 f4       	brcc	.+18     	; 0x136a <__addsf3x+0x9c>
    1358:	87 95       	ror	r24
    135a:	77 95       	ror	r23
    135c:	67 95       	ror	r22
    135e:	b7 95       	ror	r27
    1360:	f7 95       	ror	r31
    1362:	9e 3f       	cpi	r25, 0xFE	; 254
    1364:	08 f0       	brcs	.+2      	; 0x1368 <__addsf3x+0x9a>
    1366:	b0 cf       	rjmp	.-160    	; 0x12c8 <__addsf3+0x28>
    1368:	93 95       	inc	r25
    136a:	88 0f       	add	r24, r24
    136c:	08 f0       	brcs	.+2      	; 0x1370 <__addsf3x+0xa2>
    136e:	99 27       	eor	r25, r25
    1370:	ee 0f       	add	r30, r30
    1372:	97 95       	ror	r25
    1374:	87 95       	ror	r24
    1376:	08 95       	ret

00001378 <__cmpsf2>:
    1378:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <__fp_cmp>
    137c:	08 f4       	brcc	.+2      	; 0x1380 <__cmpsf2+0x8>
    137e:	81 e0       	ldi	r24, 0x01	; 1
    1380:	08 95       	ret

00001382 <__divsf3>:
    1382:	0e 94 d5 09 	call	0x13aa	; 0x13aa <__divsf3x>
    1386:	0c 94 ab 0a 	jmp	0x1556	; 0x1556 <__fp_round>
    138a:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__fp_pscB>
    138e:	58 f0       	brcs	.+22     	; 0x13a6 <__divsf3+0x24>
    1390:	0e 94 9d 0a 	call	0x153a	; 0x153a <__fp_pscA>
    1394:	40 f0       	brcs	.+16     	; 0x13a6 <__divsf3+0x24>
    1396:	29 f4       	brne	.+10     	; 0x13a2 <__divsf3+0x20>
    1398:	5f 3f       	cpi	r21, 0xFF	; 255
    139a:	29 f0       	breq	.+10     	; 0x13a6 <__divsf3+0x24>
    139c:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_inf>
    13a0:	51 11       	cpse	r21, r1
    13a2:	0c 94 df 0a 	jmp	0x15be	; 0x15be <__fp_szero>
    13a6:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__fp_nan>

000013aa <__divsf3x>:
    13aa:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__fp_split3>
    13ae:	68 f3       	brcs	.-38     	; 0x138a <__divsf3+0x8>

000013b0 <__divsf3_pse>:
    13b0:	99 23       	and	r25, r25
    13b2:	b1 f3       	breq	.-20     	; 0x13a0 <__divsf3+0x1e>
    13b4:	55 23       	and	r21, r21
    13b6:	91 f3       	breq	.-28     	; 0x139c <__divsf3+0x1a>
    13b8:	95 1b       	sub	r25, r21
    13ba:	55 0b       	sbc	r21, r21
    13bc:	bb 27       	eor	r27, r27
    13be:	aa 27       	eor	r26, r26
    13c0:	62 17       	cp	r22, r18
    13c2:	73 07       	cpc	r23, r19
    13c4:	84 07       	cpc	r24, r20
    13c6:	38 f0       	brcs	.+14     	; 0x13d6 <__divsf3_pse+0x26>
    13c8:	9f 5f       	subi	r25, 0xFF	; 255
    13ca:	5f 4f       	sbci	r21, 0xFF	; 255
    13cc:	22 0f       	add	r18, r18
    13ce:	33 1f       	adc	r19, r19
    13d0:	44 1f       	adc	r20, r20
    13d2:	aa 1f       	adc	r26, r26
    13d4:	a9 f3       	breq	.-22     	; 0x13c0 <__divsf3_pse+0x10>
    13d6:	35 d0       	rcall	.+106    	; 0x1442 <__divsf3_pse+0x92>
    13d8:	0e 2e       	mov	r0, r30
    13da:	3a f0       	brmi	.+14     	; 0x13ea <__divsf3_pse+0x3a>
    13dc:	e0 e8       	ldi	r30, 0x80	; 128
    13de:	32 d0       	rcall	.+100    	; 0x1444 <__divsf3_pse+0x94>
    13e0:	91 50       	subi	r25, 0x01	; 1
    13e2:	50 40       	sbci	r21, 0x00	; 0
    13e4:	e6 95       	lsr	r30
    13e6:	00 1c       	adc	r0, r0
    13e8:	ca f7       	brpl	.-14     	; 0x13dc <__divsf3_pse+0x2c>
    13ea:	2b d0       	rcall	.+86     	; 0x1442 <__divsf3_pse+0x92>
    13ec:	fe 2f       	mov	r31, r30
    13ee:	29 d0       	rcall	.+82     	; 0x1442 <__divsf3_pse+0x92>
    13f0:	66 0f       	add	r22, r22
    13f2:	77 1f       	adc	r23, r23
    13f4:	88 1f       	adc	r24, r24
    13f6:	bb 1f       	adc	r27, r27
    13f8:	26 17       	cp	r18, r22
    13fa:	37 07       	cpc	r19, r23
    13fc:	48 07       	cpc	r20, r24
    13fe:	ab 07       	cpc	r26, r27
    1400:	b0 e8       	ldi	r27, 0x80	; 128
    1402:	09 f0       	breq	.+2      	; 0x1406 <__divsf3_pse+0x56>
    1404:	bb 0b       	sbc	r27, r27
    1406:	80 2d       	mov	r24, r0
    1408:	bf 01       	movw	r22, r30
    140a:	ff 27       	eor	r31, r31
    140c:	93 58       	subi	r25, 0x83	; 131
    140e:	5f 4f       	sbci	r21, 0xFF	; 255
    1410:	3a f0       	brmi	.+14     	; 0x1420 <__divsf3_pse+0x70>
    1412:	9e 3f       	cpi	r25, 0xFE	; 254
    1414:	51 05       	cpc	r21, r1
    1416:	78 f0       	brcs	.+30     	; 0x1436 <__divsf3_pse+0x86>
    1418:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_inf>
    141c:	0c 94 df 0a 	jmp	0x15be	; 0x15be <__fp_szero>
    1420:	5f 3f       	cpi	r21, 0xFF	; 255
    1422:	e4 f3       	brlt	.-8      	; 0x141c <__divsf3_pse+0x6c>
    1424:	98 3e       	cpi	r25, 0xE8	; 232
    1426:	d4 f3       	brlt	.-12     	; 0x141c <__divsf3_pse+0x6c>
    1428:	86 95       	lsr	r24
    142a:	77 95       	ror	r23
    142c:	67 95       	ror	r22
    142e:	b7 95       	ror	r27
    1430:	f7 95       	ror	r31
    1432:	9f 5f       	subi	r25, 0xFF	; 255
    1434:	c9 f7       	brne	.-14     	; 0x1428 <__divsf3_pse+0x78>
    1436:	88 0f       	add	r24, r24
    1438:	91 1d       	adc	r25, r1
    143a:	96 95       	lsr	r25
    143c:	87 95       	ror	r24
    143e:	97 f9       	bld	r25, 7
    1440:	08 95       	ret
    1442:	e1 e0       	ldi	r30, 0x01	; 1
    1444:	66 0f       	add	r22, r22
    1446:	77 1f       	adc	r23, r23
    1448:	88 1f       	adc	r24, r24
    144a:	bb 1f       	adc	r27, r27
    144c:	62 17       	cp	r22, r18
    144e:	73 07       	cpc	r23, r19
    1450:	84 07       	cpc	r24, r20
    1452:	ba 07       	cpc	r27, r26
    1454:	20 f0       	brcs	.+8      	; 0x145e <__divsf3_pse+0xae>
    1456:	62 1b       	sub	r22, r18
    1458:	73 0b       	sbc	r23, r19
    145a:	84 0b       	sbc	r24, r20
    145c:	ba 0b       	sbc	r27, r26
    145e:	ee 1f       	adc	r30, r30
    1460:	88 f7       	brcc	.-30     	; 0x1444 <__divsf3_pse+0x94>
    1462:	e0 95       	com	r30
    1464:	08 95       	ret

00001466 <__floatunsisf>:
    1466:	e8 94       	clt
    1468:	09 c0       	rjmp	.+18     	; 0x147c <__floatsisf+0x12>

0000146a <__floatsisf>:
    146a:	97 fb       	bst	r25, 7
    146c:	3e f4       	brtc	.+14     	; 0x147c <__floatsisf+0x12>
    146e:	90 95       	com	r25
    1470:	80 95       	com	r24
    1472:	70 95       	com	r23
    1474:	61 95       	neg	r22
    1476:	7f 4f       	sbci	r23, 0xFF	; 255
    1478:	8f 4f       	sbci	r24, 0xFF	; 255
    147a:	9f 4f       	sbci	r25, 0xFF	; 255
    147c:	99 23       	and	r25, r25
    147e:	a9 f0       	breq	.+42     	; 0x14aa <__floatsisf+0x40>
    1480:	f9 2f       	mov	r31, r25
    1482:	96 e9       	ldi	r25, 0x96	; 150
    1484:	bb 27       	eor	r27, r27
    1486:	93 95       	inc	r25
    1488:	f6 95       	lsr	r31
    148a:	87 95       	ror	r24
    148c:	77 95       	ror	r23
    148e:	67 95       	ror	r22
    1490:	b7 95       	ror	r27
    1492:	f1 11       	cpse	r31, r1
    1494:	f8 cf       	rjmp	.-16     	; 0x1486 <__floatsisf+0x1c>
    1496:	fa f4       	brpl	.+62     	; 0x14d6 <__floatsisf+0x6c>
    1498:	bb 0f       	add	r27, r27
    149a:	11 f4       	brne	.+4      	; 0x14a0 <__floatsisf+0x36>
    149c:	60 ff       	sbrs	r22, 0
    149e:	1b c0       	rjmp	.+54     	; 0x14d6 <__floatsisf+0x6c>
    14a0:	6f 5f       	subi	r22, 0xFF	; 255
    14a2:	7f 4f       	sbci	r23, 0xFF	; 255
    14a4:	8f 4f       	sbci	r24, 0xFF	; 255
    14a6:	9f 4f       	sbci	r25, 0xFF	; 255
    14a8:	16 c0       	rjmp	.+44     	; 0x14d6 <__floatsisf+0x6c>
    14aa:	88 23       	and	r24, r24
    14ac:	11 f0       	breq	.+4      	; 0x14b2 <__floatsisf+0x48>
    14ae:	96 e9       	ldi	r25, 0x96	; 150
    14b0:	11 c0       	rjmp	.+34     	; 0x14d4 <__floatsisf+0x6a>
    14b2:	77 23       	and	r23, r23
    14b4:	21 f0       	breq	.+8      	; 0x14be <__floatsisf+0x54>
    14b6:	9e e8       	ldi	r25, 0x8E	; 142
    14b8:	87 2f       	mov	r24, r23
    14ba:	76 2f       	mov	r23, r22
    14bc:	05 c0       	rjmp	.+10     	; 0x14c8 <__floatsisf+0x5e>
    14be:	66 23       	and	r22, r22
    14c0:	71 f0       	breq	.+28     	; 0x14de <__floatsisf+0x74>
    14c2:	96 e8       	ldi	r25, 0x86	; 134
    14c4:	86 2f       	mov	r24, r22
    14c6:	70 e0       	ldi	r23, 0x00	; 0
    14c8:	60 e0       	ldi	r22, 0x00	; 0
    14ca:	2a f0       	brmi	.+10     	; 0x14d6 <__floatsisf+0x6c>
    14cc:	9a 95       	dec	r25
    14ce:	66 0f       	add	r22, r22
    14d0:	77 1f       	adc	r23, r23
    14d2:	88 1f       	adc	r24, r24
    14d4:	da f7       	brpl	.-10     	; 0x14cc <__floatsisf+0x62>
    14d6:	88 0f       	add	r24, r24
    14d8:	96 95       	lsr	r25
    14da:	87 95       	ror	r24
    14dc:	97 f9       	bld	r25, 7
    14de:	08 95       	ret

000014e0 <__fp_cmp>:
    14e0:	99 0f       	add	r25, r25
    14e2:	00 08       	sbc	r0, r0
    14e4:	55 0f       	add	r21, r21
    14e6:	aa 0b       	sbc	r26, r26
    14e8:	e0 e8       	ldi	r30, 0x80	; 128
    14ea:	fe ef       	ldi	r31, 0xFE	; 254
    14ec:	16 16       	cp	r1, r22
    14ee:	17 06       	cpc	r1, r23
    14f0:	e8 07       	cpc	r30, r24
    14f2:	f9 07       	cpc	r31, r25
    14f4:	c0 f0       	brcs	.+48     	; 0x1526 <__fp_cmp+0x46>
    14f6:	12 16       	cp	r1, r18
    14f8:	13 06       	cpc	r1, r19
    14fa:	e4 07       	cpc	r30, r20
    14fc:	f5 07       	cpc	r31, r21
    14fe:	98 f0       	brcs	.+38     	; 0x1526 <__fp_cmp+0x46>
    1500:	62 1b       	sub	r22, r18
    1502:	73 0b       	sbc	r23, r19
    1504:	84 0b       	sbc	r24, r20
    1506:	95 0b       	sbc	r25, r21
    1508:	39 f4       	brne	.+14     	; 0x1518 <__fp_cmp+0x38>
    150a:	0a 26       	eor	r0, r26
    150c:	61 f0       	breq	.+24     	; 0x1526 <__fp_cmp+0x46>
    150e:	23 2b       	or	r18, r19
    1510:	24 2b       	or	r18, r20
    1512:	25 2b       	or	r18, r21
    1514:	21 f4       	brne	.+8      	; 0x151e <__fp_cmp+0x3e>
    1516:	08 95       	ret
    1518:	0a 26       	eor	r0, r26
    151a:	09 f4       	brne	.+2      	; 0x151e <__fp_cmp+0x3e>
    151c:	a1 40       	sbci	r26, 0x01	; 1
    151e:	a6 95       	lsr	r26
    1520:	8f ef       	ldi	r24, 0xFF	; 255
    1522:	81 1d       	adc	r24, r1
    1524:	81 1d       	adc	r24, r1
    1526:	08 95       	ret

00001528 <__fp_inf>:
    1528:	97 f9       	bld	r25, 7
    152a:	9f 67       	ori	r25, 0x7F	; 127
    152c:	80 e8       	ldi	r24, 0x80	; 128
    152e:	70 e0       	ldi	r23, 0x00	; 0
    1530:	60 e0       	ldi	r22, 0x00	; 0
    1532:	08 95       	ret

00001534 <__fp_nan>:
    1534:	9f ef       	ldi	r25, 0xFF	; 255
    1536:	80 ec       	ldi	r24, 0xC0	; 192
    1538:	08 95       	ret

0000153a <__fp_pscA>:
    153a:	00 24       	eor	r0, r0
    153c:	0a 94       	dec	r0
    153e:	16 16       	cp	r1, r22
    1540:	17 06       	cpc	r1, r23
    1542:	18 06       	cpc	r1, r24
    1544:	09 06       	cpc	r0, r25
    1546:	08 95       	ret

00001548 <__fp_pscB>:
    1548:	00 24       	eor	r0, r0
    154a:	0a 94       	dec	r0
    154c:	12 16       	cp	r1, r18
    154e:	13 06       	cpc	r1, r19
    1550:	14 06       	cpc	r1, r20
    1552:	05 06       	cpc	r0, r21
    1554:	08 95       	ret

00001556 <__fp_round>:
    1556:	09 2e       	mov	r0, r25
    1558:	03 94       	inc	r0
    155a:	00 0c       	add	r0, r0
    155c:	11 f4       	brne	.+4      	; 0x1562 <__fp_round+0xc>
    155e:	88 23       	and	r24, r24
    1560:	52 f0       	brmi	.+20     	; 0x1576 <__fp_round+0x20>
    1562:	bb 0f       	add	r27, r27
    1564:	40 f4       	brcc	.+16     	; 0x1576 <__fp_round+0x20>
    1566:	bf 2b       	or	r27, r31
    1568:	11 f4       	brne	.+4      	; 0x156e <__fp_round+0x18>
    156a:	60 ff       	sbrs	r22, 0
    156c:	04 c0       	rjmp	.+8      	; 0x1576 <__fp_round+0x20>
    156e:	6f 5f       	subi	r22, 0xFF	; 255
    1570:	7f 4f       	sbci	r23, 0xFF	; 255
    1572:	8f 4f       	sbci	r24, 0xFF	; 255
    1574:	9f 4f       	sbci	r25, 0xFF	; 255
    1576:	08 95       	ret

00001578 <__fp_split3>:
    1578:	57 fd       	sbrc	r21, 7
    157a:	90 58       	subi	r25, 0x80	; 128
    157c:	44 0f       	add	r20, r20
    157e:	55 1f       	adc	r21, r21
    1580:	59 f0       	breq	.+22     	; 0x1598 <__fp_splitA+0x10>
    1582:	5f 3f       	cpi	r21, 0xFF	; 255
    1584:	71 f0       	breq	.+28     	; 0x15a2 <__fp_splitA+0x1a>
    1586:	47 95       	ror	r20

00001588 <__fp_splitA>:
    1588:	88 0f       	add	r24, r24
    158a:	97 fb       	bst	r25, 7
    158c:	99 1f       	adc	r25, r25
    158e:	61 f0       	breq	.+24     	; 0x15a8 <__fp_splitA+0x20>
    1590:	9f 3f       	cpi	r25, 0xFF	; 255
    1592:	79 f0       	breq	.+30     	; 0x15b2 <__fp_splitA+0x2a>
    1594:	87 95       	ror	r24
    1596:	08 95       	ret
    1598:	12 16       	cp	r1, r18
    159a:	13 06       	cpc	r1, r19
    159c:	14 06       	cpc	r1, r20
    159e:	55 1f       	adc	r21, r21
    15a0:	f2 cf       	rjmp	.-28     	; 0x1586 <__fp_split3+0xe>
    15a2:	46 95       	lsr	r20
    15a4:	f1 df       	rcall	.-30     	; 0x1588 <__fp_splitA>
    15a6:	08 c0       	rjmp	.+16     	; 0x15b8 <__fp_splitA+0x30>
    15a8:	16 16       	cp	r1, r22
    15aa:	17 06       	cpc	r1, r23
    15ac:	18 06       	cpc	r1, r24
    15ae:	99 1f       	adc	r25, r25
    15b0:	f1 cf       	rjmp	.-30     	; 0x1594 <__fp_splitA+0xc>
    15b2:	86 95       	lsr	r24
    15b4:	71 05       	cpc	r23, r1
    15b6:	61 05       	cpc	r22, r1
    15b8:	08 94       	sec
    15ba:	08 95       	ret

000015bc <__fp_zero>:
    15bc:	e8 94       	clt

000015be <__fp_szero>:
    15be:	bb 27       	eor	r27, r27
    15c0:	66 27       	eor	r22, r22
    15c2:	77 27       	eor	r23, r23
    15c4:	cb 01       	movw	r24, r22
    15c6:	97 f9       	bld	r25, 7
    15c8:	08 95       	ret

000015ca <__gesf2>:
    15ca:	0e 94 70 0a 	call	0x14e0	; 0x14e0 <__fp_cmp>
    15ce:	08 f4       	brcc	.+2      	; 0x15d2 <__gesf2+0x8>
    15d0:	8f ef       	ldi	r24, 0xFF	; 255
    15d2:	08 95       	ret

000015d4 <__mulsf3>:
    15d4:	0e 94 fd 0a 	call	0x15fa	; 0x15fa <__mulsf3x>
    15d8:	0c 94 ab 0a 	jmp	0x1556	; 0x1556 <__fp_round>
    15dc:	0e 94 9d 0a 	call	0x153a	; 0x153a <__fp_pscA>
    15e0:	38 f0       	brcs	.+14     	; 0x15f0 <__mulsf3+0x1c>
    15e2:	0e 94 a4 0a 	call	0x1548	; 0x1548 <__fp_pscB>
    15e6:	20 f0       	brcs	.+8      	; 0x15f0 <__mulsf3+0x1c>
    15e8:	95 23       	and	r25, r21
    15ea:	11 f0       	breq	.+4      	; 0x15f0 <__mulsf3+0x1c>
    15ec:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_inf>
    15f0:	0c 94 9a 0a 	jmp	0x1534	; 0x1534 <__fp_nan>
    15f4:	11 24       	eor	r1, r1
    15f6:	0c 94 df 0a 	jmp	0x15be	; 0x15be <__fp_szero>

000015fa <__mulsf3x>:
    15fa:	0e 94 bc 0a 	call	0x1578	; 0x1578 <__fp_split3>
    15fe:	70 f3       	brcs	.-36     	; 0x15dc <__mulsf3+0x8>

00001600 <__mulsf3_pse>:
    1600:	95 9f       	mul	r25, r21
    1602:	c1 f3       	breq	.-16     	; 0x15f4 <__mulsf3+0x20>
    1604:	95 0f       	add	r25, r21
    1606:	50 e0       	ldi	r21, 0x00	; 0
    1608:	55 1f       	adc	r21, r21
    160a:	62 9f       	mul	r22, r18
    160c:	f0 01       	movw	r30, r0
    160e:	72 9f       	mul	r23, r18
    1610:	bb 27       	eor	r27, r27
    1612:	f0 0d       	add	r31, r0
    1614:	b1 1d       	adc	r27, r1
    1616:	63 9f       	mul	r22, r19
    1618:	aa 27       	eor	r26, r26
    161a:	f0 0d       	add	r31, r0
    161c:	b1 1d       	adc	r27, r1
    161e:	aa 1f       	adc	r26, r26
    1620:	64 9f       	mul	r22, r20
    1622:	66 27       	eor	r22, r22
    1624:	b0 0d       	add	r27, r0
    1626:	a1 1d       	adc	r26, r1
    1628:	66 1f       	adc	r22, r22
    162a:	82 9f       	mul	r24, r18
    162c:	22 27       	eor	r18, r18
    162e:	b0 0d       	add	r27, r0
    1630:	a1 1d       	adc	r26, r1
    1632:	62 1f       	adc	r22, r18
    1634:	73 9f       	mul	r23, r19
    1636:	b0 0d       	add	r27, r0
    1638:	a1 1d       	adc	r26, r1
    163a:	62 1f       	adc	r22, r18
    163c:	83 9f       	mul	r24, r19
    163e:	a0 0d       	add	r26, r0
    1640:	61 1d       	adc	r22, r1
    1642:	22 1f       	adc	r18, r18
    1644:	74 9f       	mul	r23, r20
    1646:	33 27       	eor	r19, r19
    1648:	a0 0d       	add	r26, r0
    164a:	61 1d       	adc	r22, r1
    164c:	23 1f       	adc	r18, r19
    164e:	84 9f       	mul	r24, r20
    1650:	60 0d       	add	r22, r0
    1652:	21 1d       	adc	r18, r1
    1654:	82 2f       	mov	r24, r18
    1656:	76 2f       	mov	r23, r22
    1658:	6a 2f       	mov	r22, r26
    165a:	11 24       	eor	r1, r1
    165c:	9f 57       	subi	r25, 0x7F	; 127
    165e:	50 40       	sbci	r21, 0x00	; 0
    1660:	9a f0       	brmi	.+38     	; 0x1688 <__mulsf3_pse+0x88>
    1662:	f1 f0       	breq	.+60     	; 0x16a0 <__mulsf3_pse+0xa0>
    1664:	88 23       	and	r24, r24
    1666:	4a f0       	brmi	.+18     	; 0x167a <__mulsf3_pse+0x7a>
    1668:	ee 0f       	add	r30, r30
    166a:	ff 1f       	adc	r31, r31
    166c:	bb 1f       	adc	r27, r27
    166e:	66 1f       	adc	r22, r22
    1670:	77 1f       	adc	r23, r23
    1672:	88 1f       	adc	r24, r24
    1674:	91 50       	subi	r25, 0x01	; 1
    1676:	50 40       	sbci	r21, 0x00	; 0
    1678:	a9 f7       	brne	.-22     	; 0x1664 <__mulsf3_pse+0x64>
    167a:	9e 3f       	cpi	r25, 0xFE	; 254
    167c:	51 05       	cpc	r21, r1
    167e:	80 f0       	brcs	.+32     	; 0x16a0 <__mulsf3_pse+0xa0>
    1680:	0c 94 94 0a 	jmp	0x1528	; 0x1528 <__fp_inf>
    1684:	0c 94 df 0a 	jmp	0x15be	; 0x15be <__fp_szero>
    1688:	5f 3f       	cpi	r21, 0xFF	; 255
    168a:	e4 f3       	brlt	.-8      	; 0x1684 <__mulsf3_pse+0x84>
    168c:	98 3e       	cpi	r25, 0xE8	; 232
    168e:	d4 f3       	brlt	.-12     	; 0x1684 <__mulsf3_pse+0x84>
    1690:	86 95       	lsr	r24
    1692:	77 95       	ror	r23
    1694:	67 95       	ror	r22
    1696:	b7 95       	ror	r27
    1698:	f7 95       	ror	r31
    169a:	e7 95       	ror	r30
    169c:	9f 5f       	subi	r25, 0xFF	; 255
    169e:	c1 f7       	brne	.-16     	; 0x1690 <__mulsf3_pse+0x90>
    16a0:	fe 2b       	or	r31, r30
    16a2:	88 0f       	add	r24, r24
    16a4:	91 1d       	adc	r25, r1
    16a6:	96 95       	lsr	r25
    16a8:	87 95       	ror	r24
    16aa:	97 f9       	bld	r25, 7
    16ac:	08 95       	ret

000016ae <vfprintf>:
    16ae:	a0 e1       	ldi	r26, 0x10	; 16
    16b0:	b0 e0       	ldi	r27, 0x00	; 0
    16b2:	ed e5       	ldi	r30, 0x5D	; 93
    16b4:	fb e0       	ldi	r31, 0x0B	; 11
    16b6:	0c 94 d4 0e 	jmp	0x1da8	; 0x1da8 <__prologue_saves__>
    16ba:	7c 01       	movw	r14, r24
    16bc:	1b 01       	movw	r2, r22
    16be:	6a 01       	movw	r12, r20
    16c0:	fc 01       	movw	r30, r24
    16c2:	17 82       	std	Z+7, r1	; 0x07
    16c4:	16 82       	std	Z+6, r1	; 0x06
    16c6:	83 81       	ldd	r24, Z+3	; 0x03
    16c8:	81 ff       	sbrs	r24, 1
    16ca:	44 c3       	rjmp	.+1672   	; 0x1d54 <vfprintf+0x6a6>
    16cc:	9e 01       	movw	r18, r28
    16ce:	2f 5f       	subi	r18, 0xFF	; 255
    16d0:	3f 4f       	sbci	r19, 0xFF	; 255
    16d2:	39 01       	movw	r6, r18
    16d4:	f7 01       	movw	r30, r14
    16d6:	93 81       	ldd	r25, Z+3	; 0x03
    16d8:	f1 01       	movw	r30, r2
    16da:	93 fd       	sbrc	r25, 3
    16dc:	85 91       	lpm	r24, Z+
    16de:	93 ff       	sbrs	r25, 3
    16e0:	81 91       	ld	r24, Z+
    16e2:	1f 01       	movw	r2, r30
    16e4:	88 23       	and	r24, r24
    16e6:	09 f4       	brne	.+2      	; 0x16ea <vfprintf+0x3c>
    16e8:	31 c3       	rjmp	.+1634   	; 0x1d4c <vfprintf+0x69e>
    16ea:	85 32       	cpi	r24, 0x25	; 37
    16ec:	39 f4       	brne	.+14     	; 0x16fc <vfprintf+0x4e>
    16ee:	93 fd       	sbrc	r25, 3
    16f0:	85 91       	lpm	r24, Z+
    16f2:	93 ff       	sbrs	r25, 3
    16f4:	81 91       	ld	r24, Z+
    16f6:	1f 01       	movw	r2, r30
    16f8:	85 32       	cpi	r24, 0x25	; 37
    16fa:	39 f4       	brne	.+14     	; 0x170a <vfprintf+0x5c>
    16fc:	b7 01       	movw	r22, r14
    16fe:	90 e0       	ldi	r25, 0x00	; 0
    1700:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1704:	56 01       	movw	r10, r12
    1706:	65 01       	movw	r12, r10
    1708:	e5 cf       	rjmp	.-54     	; 0x16d4 <vfprintf+0x26>
    170a:	10 e0       	ldi	r17, 0x00	; 0
    170c:	51 2c       	mov	r5, r1
    170e:	91 2c       	mov	r9, r1
    1710:	ff e1       	ldi	r31, 0x1F	; 31
    1712:	f9 15       	cp	r31, r9
    1714:	d8 f0       	brcs	.+54     	; 0x174c <vfprintf+0x9e>
    1716:	8b 32       	cpi	r24, 0x2B	; 43
    1718:	79 f0       	breq	.+30     	; 0x1738 <vfprintf+0x8a>
    171a:	38 f4       	brcc	.+14     	; 0x172a <vfprintf+0x7c>
    171c:	80 32       	cpi	r24, 0x20	; 32
    171e:	79 f0       	breq	.+30     	; 0x173e <vfprintf+0x90>
    1720:	83 32       	cpi	r24, 0x23	; 35
    1722:	a1 f4       	brne	.+40     	; 0x174c <vfprintf+0x9e>
    1724:	f9 2d       	mov	r31, r9
    1726:	f0 61       	ori	r31, 0x10	; 16
    1728:	2e c0       	rjmp	.+92     	; 0x1786 <vfprintf+0xd8>
    172a:	8d 32       	cpi	r24, 0x2D	; 45
    172c:	61 f0       	breq	.+24     	; 0x1746 <vfprintf+0x98>
    172e:	80 33       	cpi	r24, 0x30	; 48
    1730:	69 f4       	brne	.+26     	; 0x174c <vfprintf+0x9e>
    1732:	29 2d       	mov	r18, r9
    1734:	21 60       	ori	r18, 0x01	; 1
    1736:	2d c0       	rjmp	.+90     	; 0x1792 <vfprintf+0xe4>
    1738:	39 2d       	mov	r19, r9
    173a:	32 60       	ori	r19, 0x02	; 2
    173c:	93 2e       	mov	r9, r19
    173e:	89 2d       	mov	r24, r9
    1740:	84 60       	ori	r24, 0x04	; 4
    1742:	98 2e       	mov	r9, r24
    1744:	2a c0       	rjmp	.+84     	; 0x179a <vfprintf+0xec>
    1746:	e9 2d       	mov	r30, r9
    1748:	e8 60       	ori	r30, 0x08	; 8
    174a:	15 c0       	rjmp	.+42     	; 0x1776 <vfprintf+0xc8>
    174c:	97 fc       	sbrc	r9, 7
    174e:	2d c0       	rjmp	.+90     	; 0x17aa <vfprintf+0xfc>
    1750:	20 ed       	ldi	r18, 0xD0	; 208
    1752:	28 0f       	add	r18, r24
    1754:	2a 30       	cpi	r18, 0x0A	; 10
    1756:	88 f4       	brcc	.+34     	; 0x177a <vfprintf+0xcc>
    1758:	96 fe       	sbrs	r9, 6
    175a:	06 c0       	rjmp	.+12     	; 0x1768 <vfprintf+0xba>
    175c:	3a e0       	ldi	r19, 0x0A	; 10
    175e:	13 9f       	mul	r17, r19
    1760:	20 0d       	add	r18, r0
    1762:	11 24       	eor	r1, r1
    1764:	12 2f       	mov	r17, r18
    1766:	19 c0       	rjmp	.+50     	; 0x179a <vfprintf+0xec>
    1768:	8a e0       	ldi	r24, 0x0A	; 10
    176a:	58 9e       	mul	r5, r24
    176c:	20 0d       	add	r18, r0
    176e:	11 24       	eor	r1, r1
    1770:	52 2e       	mov	r5, r18
    1772:	e9 2d       	mov	r30, r9
    1774:	e0 62       	ori	r30, 0x20	; 32
    1776:	9e 2e       	mov	r9, r30
    1778:	10 c0       	rjmp	.+32     	; 0x179a <vfprintf+0xec>
    177a:	8e 32       	cpi	r24, 0x2E	; 46
    177c:	31 f4       	brne	.+12     	; 0x178a <vfprintf+0xdc>
    177e:	96 fc       	sbrc	r9, 6
    1780:	e5 c2       	rjmp	.+1482   	; 0x1d4c <vfprintf+0x69e>
    1782:	f9 2d       	mov	r31, r9
    1784:	f0 64       	ori	r31, 0x40	; 64
    1786:	9f 2e       	mov	r9, r31
    1788:	08 c0       	rjmp	.+16     	; 0x179a <vfprintf+0xec>
    178a:	8c 36       	cpi	r24, 0x6C	; 108
    178c:	21 f4       	brne	.+8      	; 0x1796 <vfprintf+0xe8>
    178e:	29 2d       	mov	r18, r9
    1790:	20 68       	ori	r18, 0x80	; 128
    1792:	92 2e       	mov	r9, r18
    1794:	02 c0       	rjmp	.+4      	; 0x179a <vfprintf+0xec>
    1796:	88 36       	cpi	r24, 0x68	; 104
    1798:	41 f4       	brne	.+16     	; 0x17aa <vfprintf+0xfc>
    179a:	f1 01       	movw	r30, r2
    179c:	93 fd       	sbrc	r25, 3
    179e:	85 91       	lpm	r24, Z+
    17a0:	93 ff       	sbrs	r25, 3
    17a2:	81 91       	ld	r24, Z+
    17a4:	1f 01       	movw	r2, r30
    17a6:	81 11       	cpse	r24, r1
    17a8:	b3 cf       	rjmp	.-154    	; 0x1710 <vfprintf+0x62>
    17aa:	9b eb       	ldi	r25, 0xBB	; 187
    17ac:	98 0f       	add	r25, r24
    17ae:	93 30       	cpi	r25, 0x03	; 3
    17b0:	20 f4       	brcc	.+8      	; 0x17ba <vfprintf+0x10c>
    17b2:	99 2d       	mov	r25, r9
    17b4:	90 61       	ori	r25, 0x10	; 16
    17b6:	80 5e       	subi	r24, 0xE0	; 224
    17b8:	07 c0       	rjmp	.+14     	; 0x17c8 <vfprintf+0x11a>
    17ba:	9b e9       	ldi	r25, 0x9B	; 155
    17bc:	98 0f       	add	r25, r24
    17be:	93 30       	cpi	r25, 0x03	; 3
    17c0:	08 f0       	brcs	.+2      	; 0x17c4 <vfprintf+0x116>
    17c2:	66 c1       	rjmp	.+716    	; 0x1a90 <vfprintf+0x3e2>
    17c4:	99 2d       	mov	r25, r9
    17c6:	9f 7e       	andi	r25, 0xEF	; 239
    17c8:	96 ff       	sbrs	r25, 6
    17ca:	16 e0       	ldi	r17, 0x06	; 6
    17cc:	9f 73       	andi	r25, 0x3F	; 63
    17ce:	99 2e       	mov	r9, r25
    17d0:	85 36       	cpi	r24, 0x65	; 101
    17d2:	19 f4       	brne	.+6      	; 0x17da <vfprintf+0x12c>
    17d4:	90 64       	ori	r25, 0x40	; 64
    17d6:	99 2e       	mov	r9, r25
    17d8:	08 c0       	rjmp	.+16     	; 0x17ea <vfprintf+0x13c>
    17da:	86 36       	cpi	r24, 0x66	; 102
    17dc:	21 f4       	brne	.+8      	; 0x17e6 <vfprintf+0x138>
    17de:	39 2f       	mov	r19, r25
    17e0:	30 68       	ori	r19, 0x80	; 128
    17e2:	93 2e       	mov	r9, r19
    17e4:	02 c0       	rjmp	.+4      	; 0x17ea <vfprintf+0x13c>
    17e6:	11 11       	cpse	r17, r1
    17e8:	11 50       	subi	r17, 0x01	; 1
    17ea:	97 fe       	sbrs	r9, 7
    17ec:	07 c0       	rjmp	.+14     	; 0x17fc <vfprintf+0x14e>
    17ee:	1c 33       	cpi	r17, 0x3C	; 60
    17f0:	50 f4       	brcc	.+20     	; 0x1806 <vfprintf+0x158>
    17f2:	44 24       	eor	r4, r4
    17f4:	43 94       	inc	r4
    17f6:	41 0e       	add	r4, r17
    17f8:	27 e0       	ldi	r18, 0x07	; 7
    17fa:	0b c0       	rjmp	.+22     	; 0x1812 <vfprintf+0x164>
    17fc:	18 30       	cpi	r17, 0x08	; 8
    17fe:	38 f0       	brcs	.+14     	; 0x180e <vfprintf+0x160>
    1800:	27 e0       	ldi	r18, 0x07	; 7
    1802:	17 e0       	ldi	r17, 0x07	; 7
    1804:	05 c0       	rjmp	.+10     	; 0x1810 <vfprintf+0x162>
    1806:	27 e0       	ldi	r18, 0x07	; 7
    1808:	9c e3       	ldi	r25, 0x3C	; 60
    180a:	49 2e       	mov	r4, r25
    180c:	02 c0       	rjmp	.+4      	; 0x1812 <vfprintf+0x164>
    180e:	21 2f       	mov	r18, r17
    1810:	41 2c       	mov	r4, r1
    1812:	56 01       	movw	r10, r12
    1814:	84 e0       	ldi	r24, 0x04	; 4
    1816:	a8 0e       	add	r10, r24
    1818:	b1 1c       	adc	r11, r1
    181a:	f6 01       	movw	r30, r12
    181c:	60 81       	ld	r22, Z
    181e:	71 81       	ldd	r23, Z+1	; 0x01
    1820:	82 81       	ldd	r24, Z+2	; 0x02
    1822:	93 81       	ldd	r25, Z+3	; 0x03
    1824:	04 2d       	mov	r16, r4
    1826:	a3 01       	movw	r20, r6
    1828:	0e 94 0b 0f 	call	0x1e16	; 0x1e16 <__ftoa_engine>
    182c:	6c 01       	movw	r12, r24
    182e:	f9 81       	ldd	r31, Y+1	; 0x01
    1830:	fc 87       	std	Y+12, r31	; 0x0c
    1832:	f0 ff       	sbrs	r31, 0
    1834:	02 c0       	rjmp	.+4      	; 0x183a <vfprintf+0x18c>
    1836:	f3 ff       	sbrs	r31, 3
    1838:	06 c0       	rjmp	.+12     	; 0x1846 <vfprintf+0x198>
    183a:	91 fc       	sbrc	r9, 1
    183c:	06 c0       	rjmp	.+12     	; 0x184a <vfprintf+0x19c>
    183e:	92 fe       	sbrs	r9, 2
    1840:	06 c0       	rjmp	.+12     	; 0x184e <vfprintf+0x1a0>
    1842:	00 e2       	ldi	r16, 0x20	; 32
    1844:	05 c0       	rjmp	.+10     	; 0x1850 <vfprintf+0x1a2>
    1846:	0d e2       	ldi	r16, 0x2D	; 45
    1848:	03 c0       	rjmp	.+6      	; 0x1850 <vfprintf+0x1a2>
    184a:	0b e2       	ldi	r16, 0x2B	; 43
    184c:	01 c0       	rjmp	.+2      	; 0x1850 <vfprintf+0x1a2>
    184e:	00 e0       	ldi	r16, 0x00	; 0
    1850:	8c 85       	ldd	r24, Y+12	; 0x0c
    1852:	8c 70       	andi	r24, 0x0C	; 12
    1854:	19 f0       	breq	.+6      	; 0x185c <vfprintf+0x1ae>
    1856:	01 11       	cpse	r16, r1
    1858:	5a c2       	rjmp	.+1204   	; 0x1d0e <vfprintf+0x660>
    185a:	9b c2       	rjmp	.+1334   	; 0x1d92 <vfprintf+0x6e4>
    185c:	97 fe       	sbrs	r9, 7
    185e:	10 c0       	rjmp	.+32     	; 0x1880 <vfprintf+0x1d2>
    1860:	4c 0c       	add	r4, r12
    1862:	fc 85       	ldd	r31, Y+12	; 0x0c
    1864:	f4 ff       	sbrs	r31, 4
    1866:	04 c0       	rjmp	.+8      	; 0x1870 <vfprintf+0x1c2>
    1868:	8a 81       	ldd	r24, Y+2	; 0x02
    186a:	81 33       	cpi	r24, 0x31	; 49
    186c:	09 f4       	brne	.+2      	; 0x1870 <vfprintf+0x1c2>
    186e:	4a 94       	dec	r4
    1870:	14 14       	cp	r1, r4
    1872:	74 f5       	brge	.+92     	; 0x18d0 <vfprintf+0x222>
    1874:	28 e0       	ldi	r18, 0x08	; 8
    1876:	24 15       	cp	r18, r4
    1878:	78 f5       	brcc	.+94     	; 0x18d8 <vfprintf+0x22a>
    187a:	88 e0       	ldi	r24, 0x08	; 8
    187c:	48 2e       	mov	r4, r24
    187e:	2c c0       	rjmp	.+88     	; 0x18d8 <vfprintf+0x22a>
    1880:	96 fc       	sbrc	r9, 6
    1882:	2a c0       	rjmp	.+84     	; 0x18d8 <vfprintf+0x22a>
    1884:	81 2f       	mov	r24, r17
    1886:	90 e0       	ldi	r25, 0x00	; 0
    1888:	8c 15       	cp	r24, r12
    188a:	9d 05       	cpc	r25, r13
    188c:	9c f0       	brlt	.+38     	; 0x18b4 <vfprintf+0x206>
    188e:	3c ef       	ldi	r19, 0xFC	; 252
    1890:	c3 16       	cp	r12, r19
    1892:	3f ef       	ldi	r19, 0xFF	; 255
    1894:	d3 06       	cpc	r13, r19
    1896:	74 f0       	brlt	.+28     	; 0x18b4 <vfprintf+0x206>
    1898:	89 2d       	mov	r24, r9
    189a:	80 68       	ori	r24, 0x80	; 128
    189c:	98 2e       	mov	r9, r24
    189e:	0a c0       	rjmp	.+20     	; 0x18b4 <vfprintf+0x206>
    18a0:	e2 e0       	ldi	r30, 0x02	; 2
    18a2:	f0 e0       	ldi	r31, 0x00	; 0
    18a4:	ec 0f       	add	r30, r28
    18a6:	fd 1f       	adc	r31, r29
    18a8:	e1 0f       	add	r30, r17
    18aa:	f1 1d       	adc	r31, r1
    18ac:	80 81       	ld	r24, Z
    18ae:	80 33       	cpi	r24, 0x30	; 48
    18b0:	19 f4       	brne	.+6      	; 0x18b8 <vfprintf+0x20a>
    18b2:	11 50       	subi	r17, 0x01	; 1
    18b4:	11 11       	cpse	r17, r1
    18b6:	f4 cf       	rjmp	.-24     	; 0x18a0 <vfprintf+0x1f2>
    18b8:	97 fe       	sbrs	r9, 7
    18ba:	0e c0       	rjmp	.+28     	; 0x18d8 <vfprintf+0x22a>
    18bc:	44 24       	eor	r4, r4
    18be:	43 94       	inc	r4
    18c0:	41 0e       	add	r4, r17
    18c2:	81 2f       	mov	r24, r17
    18c4:	90 e0       	ldi	r25, 0x00	; 0
    18c6:	c8 16       	cp	r12, r24
    18c8:	d9 06       	cpc	r13, r25
    18ca:	2c f4       	brge	.+10     	; 0x18d6 <vfprintf+0x228>
    18cc:	1c 19       	sub	r17, r12
    18ce:	04 c0       	rjmp	.+8      	; 0x18d8 <vfprintf+0x22a>
    18d0:	44 24       	eor	r4, r4
    18d2:	43 94       	inc	r4
    18d4:	01 c0       	rjmp	.+2      	; 0x18d8 <vfprintf+0x22a>
    18d6:	10 e0       	ldi	r17, 0x00	; 0
    18d8:	97 fe       	sbrs	r9, 7
    18da:	06 c0       	rjmp	.+12     	; 0x18e8 <vfprintf+0x23a>
    18dc:	1c 14       	cp	r1, r12
    18de:	1d 04       	cpc	r1, r13
    18e0:	34 f4       	brge	.+12     	; 0x18ee <vfprintf+0x240>
    18e2:	c6 01       	movw	r24, r12
    18e4:	01 96       	adiw	r24, 0x01	; 1
    18e6:	05 c0       	rjmp	.+10     	; 0x18f2 <vfprintf+0x244>
    18e8:	85 e0       	ldi	r24, 0x05	; 5
    18ea:	90 e0       	ldi	r25, 0x00	; 0
    18ec:	02 c0       	rjmp	.+4      	; 0x18f2 <vfprintf+0x244>
    18ee:	81 e0       	ldi	r24, 0x01	; 1
    18f0:	90 e0       	ldi	r25, 0x00	; 0
    18f2:	01 11       	cpse	r16, r1
    18f4:	01 96       	adiw	r24, 0x01	; 1
    18f6:	11 23       	and	r17, r17
    18f8:	31 f0       	breq	.+12     	; 0x1906 <vfprintf+0x258>
    18fa:	21 2f       	mov	r18, r17
    18fc:	30 e0       	ldi	r19, 0x00	; 0
    18fe:	2f 5f       	subi	r18, 0xFF	; 255
    1900:	3f 4f       	sbci	r19, 0xFF	; 255
    1902:	82 0f       	add	r24, r18
    1904:	93 1f       	adc	r25, r19
    1906:	25 2d       	mov	r18, r5
    1908:	30 e0       	ldi	r19, 0x00	; 0
    190a:	82 17       	cp	r24, r18
    190c:	93 07       	cpc	r25, r19
    190e:	14 f4       	brge	.+4      	; 0x1914 <vfprintf+0x266>
    1910:	58 1a       	sub	r5, r24
    1912:	01 c0       	rjmp	.+2      	; 0x1916 <vfprintf+0x268>
    1914:	51 2c       	mov	r5, r1
    1916:	89 2d       	mov	r24, r9
    1918:	89 70       	andi	r24, 0x09	; 9
    191a:	49 f4       	brne	.+18     	; 0x192e <vfprintf+0x280>
    191c:	55 20       	and	r5, r5
    191e:	39 f0       	breq	.+14     	; 0x192e <vfprintf+0x280>
    1920:	b7 01       	movw	r22, r14
    1922:	80 e2       	ldi	r24, 0x20	; 32
    1924:	90 e0       	ldi	r25, 0x00	; 0
    1926:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    192a:	5a 94       	dec	r5
    192c:	f7 cf       	rjmp	.-18     	; 0x191c <vfprintf+0x26e>
    192e:	00 23       	and	r16, r16
    1930:	29 f0       	breq	.+10     	; 0x193c <vfprintf+0x28e>
    1932:	b7 01       	movw	r22, r14
    1934:	80 2f       	mov	r24, r16
    1936:	90 e0       	ldi	r25, 0x00	; 0
    1938:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    193c:	93 fc       	sbrc	r9, 3
    193e:	09 c0       	rjmp	.+18     	; 0x1952 <vfprintf+0x2a4>
    1940:	55 20       	and	r5, r5
    1942:	39 f0       	breq	.+14     	; 0x1952 <vfprintf+0x2a4>
    1944:	b7 01       	movw	r22, r14
    1946:	80 e3       	ldi	r24, 0x30	; 48
    1948:	90 e0       	ldi	r25, 0x00	; 0
    194a:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    194e:	5a 94       	dec	r5
    1950:	f7 cf       	rjmp	.-18     	; 0x1940 <vfprintf+0x292>
    1952:	97 fe       	sbrs	r9, 7
    1954:	4c c0       	rjmp	.+152    	; 0x19ee <vfprintf+0x340>
    1956:	46 01       	movw	r8, r12
    1958:	d7 fe       	sbrs	r13, 7
    195a:	02 c0       	rjmp	.+4      	; 0x1960 <vfprintf+0x2b2>
    195c:	81 2c       	mov	r8, r1
    195e:	91 2c       	mov	r9, r1
    1960:	c6 01       	movw	r24, r12
    1962:	88 19       	sub	r24, r8
    1964:	99 09       	sbc	r25, r9
    1966:	f3 01       	movw	r30, r6
    1968:	e8 0f       	add	r30, r24
    196a:	f9 1f       	adc	r31, r25
    196c:	fe 87       	std	Y+14, r31	; 0x0e
    196e:	ed 87       	std	Y+13, r30	; 0x0d
    1970:	96 01       	movw	r18, r12
    1972:	24 19       	sub	r18, r4
    1974:	31 09       	sbc	r19, r1
    1976:	38 8b       	std	Y+16, r19	; 0x10
    1978:	2f 87       	std	Y+15, r18	; 0x0f
    197a:	01 2f       	mov	r16, r17
    197c:	10 e0       	ldi	r17, 0x00	; 0
    197e:	11 95       	neg	r17
    1980:	01 95       	neg	r16
    1982:	11 09       	sbc	r17, r1
    1984:	3f ef       	ldi	r19, 0xFF	; 255
    1986:	83 16       	cp	r8, r19
    1988:	93 06       	cpc	r9, r19
    198a:	29 f4       	brne	.+10     	; 0x1996 <vfprintf+0x2e8>
    198c:	b7 01       	movw	r22, r14
    198e:	8e e2       	ldi	r24, 0x2E	; 46
    1990:	90 e0       	ldi	r25, 0x00	; 0
    1992:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1996:	c8 14       	cp	r12, r8
    1998:	d9 04       	cpc	r13, r9
    199a:	4c f0       	brlt	.+18     	; 0x19ae <vfprintf+0x300>
    199c:	8f 85       	ldd	r24, Y+15	; 0x0f
    199e:	98 89       	ldd	r25, Y+16	; 0x10
    19a0:	88 15       	cp	r24, r8
    19a2:	99 05       	cpc	r25, r9
    19a4:	24 f4       	brge	.+8      	; 0x19ae <vfprintf+0x300>
    19a6:	ed 85       	ldd	r30, Y+13	; 0x0d
    19a8:	fe 85       	ldd	r31, Y+14	; 0x0e
    19aa:	81 81       	ldd	r24, Z+1	; 0x01
    19ac:	01 c0       	rjmp	.+2      	; 0x19b0 <vfprintf+0x302>
    19ae:	80 e3       	ldi	r24, 0x30	; 48
    19b0:	f1 e0       	ldi	r31, 0x01	; 1
    19b2:	8f 1a       	sub	r8, r31
    19b4:	91 08       	sbc	r9, r1
    19b6:	2d 85       	ldd	r18, Y+13	; 0x0d
    19b8:	3e 85       	ldd	r19, Y+14	; 0x0e
    19ba:	2f 5f       	subi	r18, 0xFF	; 255
    19bc:	3f 4f       	sbci	r19, 0xFF	; 255
    19be:	3e 87       	std	Y+14, r19	; 0x0e
    19c0:	2d 87       	std	Y+13, r18	; 0x0d
    19c2:	80 16       	cp	r8, r16
    19c4:	91 06       	cpc	r9, r17
    19c6:	2c f0       	brlt	.+10     	; 0x19d2 <vfprintf+0x324>
    19c8:	b7 01       	movw	r22, r14
    19ca:	90 e0       	ldi	r25, 0x00	; 0
    19cc:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    19d0:	d9 cf       	rjmp	.-78     	; 0x1984 <vfprintf+0x2d6>
    19d2:	c8 14       	cp	r12, r8
    19d4:	d9 04       	cpc	r13, r9
    19d6:	41 f4       	brne	.+16     	; 0x19e8 <vfprintf+0x33a>
    19d8:	9a 81       	ldd	r25, Y+2	; 0x02
    19da:	96 33       	cpi	r25, 0x36	; 54
    19dc:	20 f4       	brcc	.+8      	; 0x19e6 <vfprintf+0x338>
    19de:	95 33       	cpi	r25, 0x35	; 53
    19e0:	19 f4       	brne	.+6      	; 0x19e8 <vfprintf+0x33a>
    19e2:	3c 85       	ldd	r19, Y+12	; 0x0c
    19e4:	34 ff       	sbrs	r19, 4
    19e6:	81 e3       	ldi	r24, 0x31	; 49
    19e8:	b7 01       	movw	r22, r14
    19ea:	90 e0       	ldi	r25, 0x00	; 0
    19ec:	4e c0       	rjmp	.+156    	; 0x1a8a <vfprintf+0x3dc>
    19ee:	8a 81       	ldd	r24, Y+2	; 0x02
    19f0:	81 33       	cpi	r24, 0x31	; 49
    19f2:	19 f0       	breq	.+6      	; 0x19fa <vfprintf+0x34c>
    19f4:	9c 85       	ldd	r25, Y+12	; 0x0c
    19f6:	9f 7e       	andi	r25, 0xEF	; 239
    19f8:	9c 87       	std	Y+12, r25	; 0x0c
    19fa:	b7 01       	movw	r22, r14
    19fc:	90 e0       	ldi	r25, 0x00	; 0
    19fe:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1a02:	11 11       	cpse	r17, r1
    1a04:	05 c0       	rjmp	.+10     	; 0x1a10 <vfprintf+0x362>
    1a06:	94 fc       	sbrc	r9, 4
    1a08:	18 c0       	rjmp	.+48     	; 0x1a3a <vfprintf+0x38c>
    1a0a:	85 e6       	ldi	r24, 0x65	; 101
    1a0c:	90 e0       	ldi	r25, 0x00	; 0
    1a0e:	17 c0       	rjmp	.+46     	; 0x1a3e <vfprintf+0x390>
    1a10:	b7 01       	movw	r22, r14
    1a12:	8e e2       	ldi	r24, 0x2E	; 46
    1a14:	90 e0       	ldi	r25, 0x00	; 0
    1a16:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1a1a:	1e 5f       	subi	r17, 0xFE	; 254
    1a1c:	82 e0       	ldi	r24, 0x02	; 2
    1a1e:	01 e0       	ldi	r16, 0x01	; 1
    1a20:	08 0f       	add	r16, r24
    1a22:	f3 01       	movw	r30, r6
    1a24:	e8 0f       	add	r30, r24
    1a26:	f1 1d       	adc	r31, r1
    1a28:	80 81       	ld	r24, Z
    1a2a:	b7 01       	movw	r22, r14
    1a2c:	90 e0       	ldi	r25, 0x00	; 0
    1a2e:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1a32:	80 2f       	mov	r24, r16
    1a34:	01 13       	cpse	r16, r17
    1a36:	f3 cf       	rjmp	.-26     	; 0x1a1e <vfprintf+0x370>
    1a38:	e6 cf       	rjmp	.-52     	; 0x1a06 <vfprintf+0x358>
    1a3a:	85 e4       	ldi	r24, 0x45	; 69
    1a3c:	90 e0       	ldi	r25, 0x00	; 0
    1a3e:	b7 01       	movw	r22, r14
    1a40:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1a44:	d7 fc       	sbrc	r13, 7
    1a46:	06 c0       	rjmp	.+12     	; 0x1a54 <vfprintf+0x3a6>
    1a48:	c1 14       	cp	r12, r1
    1a4a:	d1 04       	cpc	r13, r1
    1a4c:	41 f4       	brne	.+16     	; 0x1a5e <vfprintf+0x3b0>
    1a4e:	ec 85       	ldd	r30, Y+12	; 0x0c
    1a50:	e4 ff       	sbrs	r30, 4
    1a52:	05 c0       	rjmp	.+10     	; 0x1a5e <vfprintf+0x3b0>
    1a54:	d1 94       	neg	r13
    1a56:	c1 94       	neg	r12
    1a58:	d1 08       	sbc	r13, r1
    1a5a:	8d e2       	ldi	r24, 0x2D	; 45
    1a5c:	01 c0       	rjmp	.+2      	; 0x1a60 <vfprintf+0x3b2>
    1a5e:	8b e2       	ldi	r24, 0x2B	; 43
    1a60:	b7 01       	movw	r22, r14
    1a62:	90 e0       	ldi	r25, 0x00	; 0
    1a64:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1a68:	80 e3       	ldi	r24, 0x30	; 48
    1a6a:	2a e0       	ldi	r18, 0x0A	; 10
    1a6c:	c2 16       	cp	r12, r18
    1a6e:	d1 04       	cpc	r13, r1
    1a70:	2c f0       	brlt	.+10     	; 0x1a7c <vfprintf+0x3ce>
    1a72:	8f 5f       	subi	r24, 0xFF	; 255
    1a74:	fa e0       	ldi	r31, 0x0A	; 10
    1a76:	cf 1a       	sub	r12, r31
    1a78:	d1 08       	sbc	r13, r1
    1a7a:	f7 cf       	rjmp	.-18     	; 0x1a6a <vfprintf+0x3bc>
    1a7c:	b7 01       	movw	r22, r14
    1a7e:	90 e0       	ldi	r25, 0x00	; 0
    1a80:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1a84:	b7 01       	movw	r22, r14
    1a86:	c6 01       	movw	r24, r12
    1a88:	c0 96       	adiw	r24, 0x30	; 48
    1a8a:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1a8e:	54 c1       	rjmp	.+680    	; 0x1d38 <vfprintf+0x68a>
    1a90:	83 36       	cpi	r24, 0x63	; 99
    1a92:	31 f0       	breq	.+12     	; 0x1aa0 <vfprintf+0x3f2>
    1a94:	83 37       	cpi	r24, 0x73	; 115
    1a96:	79 f0       	breq	.+30     	; 0x1ab6 <vfprintf+0x408>
    1a98:	83 35       	cpi	r24, 0x53	; 83
    1a9a:	09 f0       	breq	.+2      	; 0x1a9e <vfprintf+0x3f0>
    1a9c:	56 c0       	rjmp	.+172    	; 0x1b4a <vfprintf+0x49c>
    1a9e:	20 c0       	rjmp	.+64     	; 0x1ae0 <vfprintf+0x432>
    1aa0:	56 01       	movw	r10, r12
    1aa2:	32 e0       	ldi	r19, 0x02	; 2
    1aa4:	a3 0e       	add	r10, r19
    1aa6:	b1 1c       	adc	r11, r1
    1aa8:	f6 01       	movw	r30, r12
    1aaa:	80 81       	ld	r24, Z
    1aac:	89 83       	std	Y+1, r24	; 0x01
    1aae:	01 e0       	ldi	r16, 0x01	; 1
    1ab0:	10 e0       	ldi	r17, 0x00	; 0
    1ab2:	63 01       	movw	r12, r6
    1ab4:	12 c0       	rjmp	.+36     	; 0x1ada <vfprintf+0x42c>
    1ab6:	56 01       	movw	r10, r12
    1ab8:	f2 e0       	ldi	r31, 0x02	; 2
    1aba:	af 0e       	add	r10, r31
    1abc:	b1 1c       	adc	r11, r1
    1abe:	f6 01       	movw	r30, r12
    1ac0:	c0 80       	ld	r12, Z
    1ac2:	d1 80       	ldd	r13, Z+1	; 0x01
    1ac4:	96 fe       	sbrs	r9, 6
    1ac6:	03 c0       	rjmp	.+6      	; 0x1ace <vfprintf+0x420>
    1ac8:	61 2f       	mov	r22, r17
    1aca:	70 e0       	ldi	r23, 0x00	; 0
    1acc:	02 c0       	rjmp	.+4      	; 0x1ad2 <vfprintf+0x424>
    1ace:	6f ef       	ldi	r22, 0xFF	; 255
    1ad0:	7f ef       	ldi	r23, 0xFF	; 255
    1ad2:	c6 01       	movw	r24, r12
    1ad4:	0e 94 ee 0f 	call	0x1fdc	; 0x1fdc <strnlen>
    1ad8:	8c 01       	movw	r16, r24
    1ada:	f9 2d       	mov	r31, r9
    1adc:	ff 77       	andi	r31, 0x7F	; 127
    1ade:	14 c0       	rjmp	.+40     	; 0x1b08 <vfprintf+0x45a>
    1ae0:	56 01       	movw	r10, r12
    1ae2:	22 e0       	ldi	r18, 0x02	; 2
    1ae4:	a2 0e       	add	r10, r18
    1ae6:	b1 1c       	adc	r11, r1
    1ae8:	f6 01       	movw	r30, r12
    1aea:	c0 80       	ld	r12, Z
    1aec:	d1 80       	ldd	r13, Z+1	; 0x01
    1aee:	96 fe       	sbrs	r9, 6
    1af0:	03 c0       	rjmp	.+6      	; 0x1af8 <vfprintf+0x44a>
    1af2:	61 2f       	mov	r22, r17
    1af4:	70 e0       	ldi	r23, 0x00	; 0
    1af6:	02 c0       	rjmp	.+4      	; 0x1afc <vfprintf+0x44e>
    1af8:	6f ef       	ldi	r22, 0xFF	; 255
    1afa:	7f ef       	ldi	r23, 0xFF	; 255
    1afc:	c6 01       	movw	r24, r12
    1afe:	0e 94 e3 0f 	call	0x1fc6	; 0x1fc6 <strnlen_P>
    1b02:	8c 01       	movw	r16, r24
    1b04:	f9 2d       	mov	r31, r9
    1b06:	f0 68       	ori	r31, 0x80	; 128
    1b08:	9f 2e       	mov	r9, r31
    1b0a:	f3 fd       	sbrc	r31, 3
    1b0c:	1a c0       	rjmp	.+52     	; 0x1b42 <vfprintf+0x494>
    1b0e:	85 2d       	mov	r24, r5
    1b10:	90 e0       	ldi	r25, 0x00	; 0
    1b12:	08 17       	cp	r16, r24
    1b14:	19 07       	cpc	r17, r25
    1b16:	a8 f4       	brcc	.+42     	; 0x1b42 <vfprintf+0x494>
    1b18:	b7 01       	movw	r22, r14
    1b1a:	80 e2       	ldi	r24, 0x20	; 32
    1b1c:	90 e0       	ldi	r25, 0x00	; 0
    1b1e:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1b22:	5a 94       	dec	r5
    1b24:	f4 cf       	rjmp	.-24     	; 0x1b0e <vfprintf+0x460>
    1b26:	f6 01       	movw	r30, r12
    1b28:	97 fc       	sbrc	r9, 7
    1b2a:	85 91       	lpm	r24, Z+
    1b2c:	97 fe       	sbrs	r9, 7
    1b2e:	81 91       	ld	r24, Z+
    1b30:	6f 01       	movw	r12, r30
    1b32:	b7 01       	movw	r22, r14
    1b34:	90 e0       	ldi	r25, 0x00	; 0
    1b36:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1b3a:	51 10       	cpse	r5, r1
    1b3c:	5a 94       	dec	r5
    1b3e:	01 50       	subi	r16, 0x01	; 1
    1b40:	11 09       	sbc	r17, r1
    1b42:	01 15       	cp	r16, r1
    1b44:	11 05       	cpc	r17, r1
    1b46:	79 f7       	brne	.-34     	; 0x1b26 <vfprintf+0x478>
    1b48:	f7 c0       	rjmp	.+494    	; 0x1d38 <vfprintf+0x68a>
    1b4a:	84 36       	cpi	r24, 0x64	; 100
    1b4c:	11 f0       	breq	.+4      	; 0x1b52 <vfprintf+0x4a4>
    1b4e:	89 36       	cpi	r24, 0x69	; 105
    1b50:	61 f5       	brne	.+88     	; 0x1baa <vfprintf+0x4fc>
    1b52:	56 01       	movw	r10, r12
    1b54:	97 fe       	sbrs	r9, 7
    1b56:	09 c0       	rjmp	.+18     	; 0x1b6a <vfprintf+0x4bc>
    1b58:	24 e0       	ldi	r18, 0x04	; 4
    1b5a:	a2 0e       	add	r10, r18
    1b5c:	b1 1c       	adc	r11, r1
    1b5e:	f6 01       	movw	r30, r12
    1b60:	60 81       	ld	r22, Z
    1b62:	71 81       	ldd	r23, Z+1	; 0x01
    1b64:	82 81       	ldd	r24, Z+2	; 0x02
    1b66:	93 81       	ldd	r25, Z+3	; 0x03
    1b68:	0a c0       	rjmp	.+20     	; 0x1b7e <vfprintf+0x4d0>
    1b6a:	f2 e0       	ldi	r31, 0x02	; 2
    1b6c:	af 0e       	add	r10, r31
    1b6e:	b1 1c       	adc	r11, r1
    1b70:	f6 01       	movw	r30, r12
    1b72:	60 81       	ld	r22, Z
    1b74:	71 81       	ldd	r23, Z+1	; 0x01
    1b76:	07 2e       	mov	r0, r23
    1b78:	00 0c       	add	r0, r0
    1b7a:	88 0b       	sbc	r24, r24
    1b7c:	99 0b       	sbc	r25, r25
    1b7e:	f9 2d       	mov	r31, r9
    1b80:	ff 76       	andi	r31, 0x6F	; 111
    1b82:	9f 2e       	mov	r9, r31
    1b84:	97 ff       	sbrs	r25, 7
    1b86:	09 c0       	rjmp	.+18     	; 0x1b9a <vfprintf+0x4ec>
    1b88:	90 95       	com	r25
    1b8a:	80 95       	com	r24
    1b8c:	70 95       	com	r23
    1b8e:	61 95       	neg	r22
    1b90:	7f 4f       	sbci	r23, 0xFF	; 255
    1b92:	8f 4f       	sbci	r24, 0xFF	; 255
    1b94:	9f 4f       	sbci	r25, 0xFF	; 255
    1b96:	f0 68       	ori	r31, 0x80	; 128
    1b98:	9f 2e       	mov	r9, r31
    1b9a:	2a e0       	ldi	r18, 0x0A	; 10
    1b9c:	30 e0       	ldi	r19, 0x00	; 0
    1b9e:	a3 01       	movw	r20, r6
    1ba0:	0e 94 57 10 	call	0x20ae	; 0x20ae <__ultoa_invert>
    1ba4:	c8 2e       	mov	r12, r24
    1ba6:	c6 18       	sub	r12, r6
    1ba8:	3f c0       	rjmp	.+126    	; 0x1c28 <vfprintf+0x57a>
    1baa:	09 2d       	mov	r16, r9
    1bac:	85 37       	cpi	r24, 0x75	; 117
    1bae:	21 f4       	brne	.+8      	; 0x1bb8 <vfprintf+0x50a>
    1bb0:	0f 7e       	andi	r16, 0xEF	; 239
    1bb2:	2a e0       	ldi	r18, 0x0A	; 10
    1bb4:	30 e0       	ldi	r19, 0x00	; 0
    1bb6:	1d c0       	rjmp	.+58     	; 0x1bf2 <vfprintf+0x544>
    1bb8:	09 7f       	andi	r16, 0xF9	; 249
    1bba:	8f 36       	cpi	r24, 0x6F	; 111
    1bbc:	91 f0       	breq	.+36     	; 0x1be2 <vfprintf+0x534>
    1bbe:	18 f4       	brcc	.+6      	; 0x1bc6 <vfprintf+0x518>
    1bc0:	88 35       	cpi	r24, 0x58	; 88
    1bc2:	59 f0       	breq	.+22     	; 0x1bda <vfprintf+0x52c>
    1bc4:	c3 c0       	rjmp	.+390    	; 0x1d4c <vfprintf+0x69e>
    1bc6:	80 37       	cpi	r24, 0x70	; 112
    1bc8:	19 f0       	breq	.+6      	; 0x1bd0 <vfprintf+0x522>
    1bca:	88 37       	cpi	r24, 0x78	; 120
    1bcc:	11 f0       	breq	.+4      	; 0x1bd2 <vfprintf+0x524>
    1bce:	be c0       	rjmp	.+380    	; 0x1d4c <vfprintf+0x69e>
    1bd0:	00 61       	ori	r16, 0x10	; 16
    1bd2:	04 ff       	sbrs	r16, 4
    1bd4:	09 c0       	rjmp	.+18     	; 0x1be8 <vfprintf+0x53a>
    1bd6:	04 60       	ori	r16, 0x04	; 4
    1bd8:	07 c0       	rjmp	.+14     	; 0x1be8 <vfprintf+0x53a>
    1bda:	94 fe       	sbrs	r9, 4
    1bdc:	08 c0       	rjmp	.+16     	; 0x1bee <vfprintf+0x540>
    1bde:	06 60       	ori	r16, 0x06	; 6
    1be0:	06 c0       	rjmp	.+12     	; 0x1bee <vfprintf+0x540>
    1be2:	28 e0       	ldi	r18, 0x08	; 8
    1be4:	30 e0       	ldi	r19, 0x00	; 0
    1be6:	05 c0       	rjmp	.+10     	; 0x1bf2 <vfprintf+0x544>
    1be8:	20 e1       	ldi	r18, 0x10	; 16
    1bea:	30 e0       	ldi	r19, 0x00	; 0
    1bec:	02 c0       	rjmp	.+4      	; 0x1bf2 <vfprintf+0x544>
    1bee:	20 e1       	ldi	r18, 0x10	; 16
    1bf0:	32 e0       	ldi	r19, 0x02	; 2
    1bf2:	56 01       	movw	r10, r12
    1bf4:	07 ff       	sbrs	r16, 7
    1bf6:	09 c0       	rjmp	.+18     	; 0x1c0a <vfprintf+0x55c>
    1bf8:	84 e0       	ldi	r24, 0x04	; 4
    1bfa:	a8 0e       	add	r10, r24
    1bfc:	b1 1c       	adc	r11, r1
    1bfe:	f6 01       	movw	r30, r12
    1c00:	60 81       	ld	r22, Z
    1c02:	71 81       	ldd	r23, Z+1	; 0x01
    1c04:	82 81       	ldd	r24, Z+2	; 0x02
    1c06:	93 81       	ldd	r25, Z+3	; 0x03
    1c08:	08 c0       	rjmp	.+16     	; 0x1c1a <vfprintf+0x56c>
    1c0a:	f2 e0       	ldi	r31, 0x02	; 2
    1c0c:	af 0e       	add	r10, r31
    1c0e:	b1 1c       	adc	r11, r1
    1c10:	f6 01       	movw	r30, r12
    1c12:	60 81       	ld	r22, Z
    1c14:	71 81       	ldd	r23, Z+1	; 0x01
    1c16:	80 e0       	ldi	r24, 0x00	; 0
    1c18:	90 e0       	ldi	r25, 0x00	; 0
    1c1a:	a3 01       	movw	r20, r6
    1c1c:	0e 94 57 10 	call	0x20ae	; 0x20ae <__ultoa_invert>
    1c20:	c8 2e       	mov	r12, r24
    1c22:	c6 18       	sub	r12, r6
    1c24:	0f 77       	andi	r16, 0x7F	; 127
    1c26:	90 2e       	mov	r9, r16
    1c28:	96 fe       	sbrs	r9, 6
    1c2a:	0b c0       	rjmp	.+22     	; 0x1c42 <vfprintf+0x594>
    1c2c:	09 2d       	mov	r16, r9
    1c2e:	0e 7f       	andi	r16, 0xFE	; 254
    1c30:	c1 16       	cp	r12, r17
    1c32:	50 f4       	brcc	.+20     	; 0x1c48 <vfprintf+0x59a>
    1c34:	94 fe       	sbrs	r9, 4
    1c36:	0a c0       	rjmp	.+20     	; 0x1c4c <vfprintf+0x59e>
    1c38:	92 fc       	sbrc	r9, 2
    1c3a:	08 c0       	rjmp	.+16     	; 0x1c4c <vfprintf+0x59e>
    1c3c:	09 2d       	mov	r16, r9
    1c3e:	0e 7e       	andi	r16, 0xEE	; 238
    1c40:	05 c0       	rjmp	.+10     	; 0x1c4c <vfprintf+0x59e>
    1c42:	dc 2c       	mov	r13, r12
    1c44:	09 2d       	mov	r16, r9
    1c46:	03 c0       	rjmp	.+6      	; 0x1c4e <vfprintf+0x5a0>
    1c48:	dc 2c       	mov	r13, r12
    1c4a:	01 c0       	rjmp	.+2      	; 0x1c4e <vfprintf+0x5a0>
    1c4c:	d1 2e       	mov	r13, r17
    1c4e:	04 ff       	sbrs	r16, 4
    1c50:	0d c0       	rjmp	.+26     	; 0x1c6c <vfprintf+0x5be>
    1c52:	fe 01       	movw	r30, r28
    1c54:	ec 0d       	add	r30, r12
    1c56:	f1 1d       	adc	r31, r1
    1c58:	80 81       	ld	r24, Z
    1c5a:	80 33       	cpi	r24, 0x30	; 48
    1c5c:	11 f4       	brne	.+4      	; 0x1c62 <vfprintf+0x5b4>
    1c5e:	09 7e       	andi	r16, 0xE9	; 233
    1c60:	09 c0       	rjmp	.+18     	; 0x1c74 <vfprintf+0x5c6>
    1c62:	02 ff       	sbrs	r16, 2
    1c64:	06 c0       	rjmp	.+12     	; 0x1c72 <vfprintf+0x5c4>
    1c66:	d3 94       	inc	r13
    1c68:	d3 94       	inc	r13
    1c6a:	04 c0       	rjmp	.+8      	; 0x1c74 <vfprintf+0x5c6>
    1c6c:	80 2f       	mov	r24, r16
    1c6e:	86 78       	andi	r24, 0x86	; 134
    1c70:	09 f0       	breq	.+2      	; 0x1c74 <vfprintf+0x5c6>
    1c72:	d3 94       	inc	r13
    1c74:	03 fd       	sbrc	r16, 3
    1c76:	11 c0       	rjmp	.+34     	; 0x1c9a <vfprintf+0x5ec>
    1c78:	00 ff       	sbrs	r16, 0
    1c7a:	06 c0       	rjmp	.+12     	; 0x1c88 <vfprintf+0x5da>
    1c7c:	1c 2d       	mov	r17, r12
    1c7e:	d5 14       	cp	r13, r5
    1c80:	80 f4       	brcc	.+32     	; 0x1ca2 <vfprintf+0x5f4>
    1c82:	15 0d       	add	r17, r5
    1c84:	1d 19       	sub	r17, r13
    1c86:	0d c0       	rjmp	.+26     	; 0x1ca2 <vfprintf+0x5f4>
    1c88:	d5 14       	cp	r13, r5
    1c8a:	58 f4       	brcc	.+22     	; 0x1ca2 <vfprintf+0x5f4>
    1c8c:	b7 01       	movw	r22, r14
    1c8e:	80 e2       	ldi	r24, 0x20	; 32
    1c90:	90 e0       	ldi	r25, 0x00	; 0
    1c92:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1c96:	d3 94       	inc	r13
    1c98:	f7 cf       	rjmp	.-18     	; 0x1c88 <vfprintf+0x5da>
    1c9a:	d5 14       	cp	r13, r5
    1c9c:	10 f4       	brcc	.+4      	; 0x1ca2 <vfprintf+0x5f4>
    1c9e:	5d 18       	sub	r5, r13
    1ca0:	01 c0       	rjmp	.+2      	; 0x1ca4 <vfprintf+0x5f6>
    1ca2:	51 2c       	mov	r5, r1
    1ca4:	04 ff       	sbrs	r16, 4
    1ca6:	10 c0       	rjmp	.+32     	; 0x1cc8 <vfprintf+0x61a>
    1ca8:	b7 01       	movw	r22, r14
    1caa:	80 e3       	ldi	r24, 0x30	; 48
    1cac:	90 e0       	ldi	r25, 0x00	; 0
    1cae:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1cb2:	02 ff       	sbrs	r16, 2
    1cb4:	17 c0       	rjmp	.+46     	; 0x1ce4 <vfprintf+0x636>
    1cb6:	01 fd       	sbrc	r16, 1
    1cb8:	03 c0       	rjmp	.+6      	; 0x1cc0 <vfprintf+0x612>
    1cba:	88 e7       	ldi	r24, 0x78	; 120
    1cbc:	90 e0       	ldi	r25, 0x00	; 0
    1cbe:	02 c0       	rjmp	.+4      	; 0x1cc4 <vfprintf+0x616>
    1cc0:	88 e5       	ldi	r24, 0x58	; 88
    1cc2:	90 e0       	ldi	r25, 0x00	; 0
    1cc4:	b7 01       	movw	r22, r14
    1cc6:	0c c0       	rjmp	.+24     	; 0x1ce0 <vfprintf+0x632>
    1cc8:	80 2f       	mov	r24, r16
    1cca:	86 78       	andi	r24, 0x86	; 134
    1ccc:	59 f0       	breq	.+22     	; 0x1ce4 <vfprintf+0x636>
    1cce:	01 ff       	sbrs	r16, 1
    1cd0:	02 c0       	rjmp	.+4      	; 0x1cd6 <vfprintf+0x628>
    1cd2:	8b e2       	ldi	r24, 0x2B	; 43
    1cd4:	01 c0       	rjmp	.+2      	; 0x1cd8 <vfprintf+0x62a>
    1cd6:	80 e2       	ldi	r24, 0x20	; 32
    1cd8:	07 fd       	sbrc	r16, 7
    1cda:	8d e2       	ldi	r24, 0x2D	; 45
    1cdc:	b7 01       	movw	r22, r14
    1cde:	90 e0       	ldi	r25, 0x00	; 0
    1ce0:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1ce4:	c1 16       	cp	r12, r17
    1ce6:	38 f4       	brcc	.+14     	; 0x1cf6 <vfprintf+0x648>
    1ce8:	b7 01       	movw	r22, r14
    1cea:	80 e3       	ldi	r24, 0x30	; 48
    1cec:	90 e0       	ldi	r25, 0x00	; 0
    1cee:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1cf2:	11 50       	subi	r17, 0x01	; 1
    1cf4:	f7 cf       	rjmp	.-18     	; 0x1ce4 <vfprintf+0x636>
    1cf6:	ca 94       	dec	r12
    1cf8:	f3 01       	movw	r30, r6
    1cfa:	ec 0d       	add	r30, r12
    1cfc:	f1 1d       	adc	r31, r1
    1cfe:	80 81       	ld	r24, Z
    1d00:	b7 01       	movw	r22, r14
    1d02:	90 e0       	ldi	r25, 0x00	; 0
    1d04:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1d08:	c1 10       	cpse	r12, r1
    1d0a:	f5 cf       	rjmp	.-22     	; 0x1cf6 <vfprintf+0x648>
    1d0c:	15 c0       	rjmp	.+42     	; 0x1d38 <vfprintf+0x68a>
    1d0e:	f4 e0       	ldi	r31, 0x04	; 4
    1d10:	f5 15       	cp	r31, r5
    1d12:	60 f5       	brcc	.+88     	; 0x1d6c <vfprintf+0x6be>
    1d14:	84 e0       	ldi	r24, 0x04	; 4
    1d16:	58 1a       	sub	r5, r24
    1d18:	93 fe       	sbrs	r9, 3
    1d1a:	1f c0       	rjmp	.+62     	; 0x1d5a <vfprintf+0x6ac>
    1d1c:	01 11       	cpse	r16, r1
    1d1e:	27 c0       	rjmp	.+78     	; 0x1d6e <vfprintf+0x6c0>
    1d20:	2c 85       	ldd	r18, Y+12	; 0x0c
    1d22:	23 ff       	sbrs	r18, 3
    1d24:	2a c0       	rjmp	.+84     	; 0x1d7a <vfprintf+0x6cc>
    1d26:	08 e6       	ldi	r16, 0x68	; 104
    1d28:	10 e0       	ldi	r17, 0x00	; 0
    1d2a:	39 2d       	mov	r19, r9
    1d2c:	30 71       	andi	r19, 0x10	; 16
    1d2e:	93 2e       	mov	r9, r19
    1d30:	f8 01       	movw	r30, r16
    1d32:	84 91       	lpm	r24, Z
    1d34:	81 11       	cpse	r24, r1
    1d36:	24 c0       	rjmp	.+72     	; 0x1d80 <vfprintf+0x6d2>
    1d38:	55 20       	and	r5, r5
    1d3a:	09 f4       	brne	.+2      	; 0x1d3e <vfprintf+0x690>
    1d3c:	e4 cc       	rjmp	.-1592   	; 0x1706 <vfprintf+0x58>
    1d3e:	b7 01       	movw	r22, r14
    1d40:	80 e2       	ldi	r24, 0x20	; 32
    1d42:	90 e0       	ldi	r25, 0x00	; 0
    1d44:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1d48:	5a 94       	dec	r5
    1d4a:	f6 cf       	rjmp	.-20     	; 0x1d38 <vfprintf+0x68a>
    1d4c:	f7 01       	movw	r30, r14
    1d4e:	86 81       	ldd	r24, Z+6	; 0x06
    1d50:	97 81       	ldd	r25, Z+7	; 0x07
    1d52:	26 c0       	rjmp	.+76     	; 0x1da0 <vfprintf+0x6f2>
    1d54:	8f ef       	ldi	r24, 0xFF	; 255
    1d56:	9f ef       	ldi	r25, 0xFF	; 255
    1d58:	23 c0       	rjmp	.+70     	; 0x1da0 <vfprintf+0x6f2>
    1d5a:	b7 01       	movw	r22, r14
    1d5c:	80 e2       	ldi	r24, 0x20	; 32
    1d5e:	90 e0       	ldi	r25, 0x00	; 0
    1d60:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1d64:	5a 94       	dec	r5
    1d66:	51 10       	cpse	r5, r1
    1d68:	f8 cf       	rjmp	.-16     	; 0x1d5a <vfprintf+0x6ac>
    1d6a:	d8 cf       	rjmp	.-80     	; 0x1d1c <vfprintf+0x66e>
    1d6c:	51 2c       	mov	r5, r1
    1d6e:	b7 01       	movw	r22, r14
    1d70:	80 2f       	mov	r24, r16
    1d72:	90 e0       	ldi	r25, 0x00	; 0
    1d74:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1d78:	d3 cf       	rjmp	.-90     	; 0x1d20 <vfprintf+0x672>
    1d7a:	0c e6       	ldi	r16, 0x6C	; 108
    1d7c:	10 e0       	ldi	r17, 0x00	; 0
    1d7e:	d5 cf       	rjmp	.-86     	; 0x1d2a <vfprintf+0x67c>
    1d80:	91 10       	cpse	r9, r1
    1d82:	80 52       	subi	r24, 0x20	; 32
    1d84:	b7 01       	movw	r22, r14
    1d86:	90 e0       	ldi	r25, 0x00	; 0
    1d88:	0e 94 f9 0f 	call	0x1ff2	; 0x1ff2 <fputc>
    1d8c:	0f 5f       	subi	r16, 0xFF	; 255
    1d8e:	1f 4f       	sbci	r17, 0xFF	; 255
    1d90:	cf cf       	rjmp	.-98     	; 0x1d30 <vfprintf+0x682>
    1d92:	23 e0       	ldi	r18, 0x03	; 3
    1d94:	25 15       	cp	r18, r5
    1d96:	10 f4       	brcc	.+4      	; 0x1d9c <vfprintf+0x6ee>
    1d98:	83 e0       	ldi	r24, 0x03	; 3
    1d9a:	bd cf       	rjmp	.-134    	; 0x1d16 <vfprintf+0x668>
    1d9c:	51 2c       	mov	r5, r1
    1d9e:	c0 cf       	rjmp	.-128    	; 0x1d20 <vfprintf+0x672>
    1da0:	60 96       	adiw	r28, 0x10	; 16
    1da2:	e2 e1       	ldi	r30, 0x12	; 18
    1da4:	0c 94 f0 0e 	jmp	0x1de0	; 0x1de0 <__epilogue_restores__>

00001da8 <__prologue_saves__>:
    1da8:	2f 92       	push	r2
    1daa:	3f 92       	push	r3
    1dac:	4f 92       	push	r4
    1dae:	5f 92       	push	r5
    1db0:	6f 92       	push	r6
    1db2:	7f 92       	push	r7
    1db4:	8f 92       	push	r8
    1db6:	9f 92       	push	r9
    1db8:	af 92       	push	r10
    1dba:	bf 92       	push	r11
    1dbc:	cf 92       	push	r12
    1dbe:	df 92       	push	r13
    1dc0:	ef 92       	push	r14
    1dc2:	ff 92       	push	r15
    1dc4:	0f 93       	push	r16
    1dc6:	1f 93       	push	r17
    1dc8:	cf 93       	push	r28
    1dca:	df 93       	push	r29
    1dcc:	cd b7       	in	r28, 0x3d	; 61
    1dce:	de b7       	in	r29, 0x3e	; 62
    1dd0:	ca 1b       	sub	r28, r26
    1dd2:	db 0b       	sbc	r29, r27
    1dd4:	0f b6       	in	r0, 0x3f	; 63
    1dd6:	f8 94       	cli
    1dd8:	de bf       	out	0x3e, r29	; 62
    1dda:	0f be       	out	0x3f, r0	; 63
    1ddc:	cd bf       	out	0x3d, r28	; 61
    1dde:	09 94       	ijmp

00001de0 <__epilogue_restores__>:
    1de0:	2a 88       	ldd	r2, Y+18	; 0x12
    1de2:	39 88       	ldd	r3, Y+17	; 0x11
    1de4:	48 88       	ldd	r4, Y+16	; 0x10
    1de6:	5f 84       	ldd	r5, Y+15	; 0x0f
    1de8:	6e 84       	ldd	r6, Y+14	; 0x0e
    1dea:	7d 84       	ldd	r7, Y+13	; 0x0d
    1dec:	8c 84       	ldd	r8, Y+12	; 0x0c
    1dee:	9b 84       	ldd	r9, Y+11	; 0x0b
    1df0:	aa 84       	ldd	r10, Y+10	; 0x0a
    1df2:	b9 84       	ldd	r11, Y+9	; 0x09
    1df4:	c8 84       	ldd	r12, Y+8	; 0x08
    1df6:	df 80       	ldd	r13, Y+7	; 0x07
    1df8:	ee 80       	ldd	r14, Y+6	; 0x06
    1dfa:	fd 80       	ldd	r15, Y+5	; 0x05
    1dfc:	0c 81       	ldd	r16, Y+4	; 0x04
    1dfe:	1b 81       	ldd	r17, Y+3	; 0x03
    1e00:	aa 81       	ldd	r26, Y+2	; 0x02
    1e02:	b9 81       	ldd	r27, Y+1	; 0x01
    1e04:	ce 0f       	add	r28, r30
    1e06:	d1 1d       	adc	r29, r1
    1e08:	0f b6       	in	r0, 0x3f	; 63
    1e0a:	f8 94       	cli
    1e0c:	de bf       	out	0x3e, r29	; 62
    1e0e:	0f be       	out	0x3f, r0	; 63
    1e10:	cd bf       	out	0x3d, r28	; 61
    1e12:	ed 01       	movw	r28, r26
    1e14:	08 95       	ret

00001e16 <__ftoa_engine>:
    1e16:	28 30       	cpi	r18, 0x08	; 8
    1e18:	08 f0       	brcs	.+2      	; 0x1e1c <__ftoa_engine+0x6>
    1e1a:	27 e0       	ldi	r18, 0x07	; 7
    1e1c:	33 27       	eor	r19, r19
    1e1e:	da 01       	movw	r26, r20
    1e20:	99 0f       	add	r25, r25
    1e22:	31 1d       	adc	r19, r1
    1e24:	87 fd       	sbrc	r24, 7
    1e26:	91 60       	ori	r25, 0x01	; 1
    1e28:	00 96       	adiw	r24, 0x00	; 0
    1e2a:	61 05       	cpc	r22, r1
    1e2c:	71 05       	cpc	r23, r1
    1e2e:	39 f4       	brne	.+14     	; 0x1e3e <__ftoa_engine+0x28>
    1e30:	32 60       	ori	r19, 0x02	; 2
    1e32:	2e 5f       	subi	r18, 0xFE	; 254
    1e34:	3d 93       	st	X+, r19
    1e36:	30 e3       	ldi	r19, 0x30	; 48
    1e38:	2a 95       	dec	r18
    1e3a:	e1 f7       	brne	.-8      	; 0x1e34 <__ftoa_engine+0x1e>
    1e3c:	08 95       	ret
    1e3e:	9f 3f       	cpi	r25, 0xFF	; 255
    1e40:	30 f0       	brcs	.+12     	; 0x1e4e <__ftoa_engine+0x38>
    1e42:	80 38       	cpi	r24, 0x80	; 128
    1e44:	71 05       	cpc	r23, r1
    1e46:	61 05       	cpc	r22, r1
    1e48:	09 f0       	breq	.+2      	; 0x1e4c <__ftoa_engine+0x36>
    1e4a:	3c 5f       	subi	r19, 0xFC	; 252
    1e4c:	3c 5f       	subi	r19, 0xFC	; 252
    1e4e:	3d 93       	st	X+, r19
    1e50:	91 30       	cpi	r25, 0x01	; 1
    1e52:	08 f0       	brcs	.+2      	; 0x1e56 <__ftoa_engine+0x40>
    1e54:	80 68       	ori	r24, 0x80	; 128
    1e56:	91 1d       	adc	r25, r1
    1e58:	df 93       	push	r29
    1e5a:	cf 93       	push	r28
    1e5c:	1f 93       	push	r17
    1e5e:	0f 93       	push	r16
    1e60:	ff 92       	push	r15
    1e62:	ef 92       	push	r14
    1e64:	19 2f       	mov	r17, r25
    1e66:	98 7f       	andi	r25, 0xF8	; 248
    1e68:	96 95       	lsr	r25
    1e6a:	e9 2f       	mov	r30, r25
    1e6c:	96 95       	lsr	r25
    1e6e:	96 95       	lsr	r25
    1e70:	e9 0f       	add	r30, r25
    1e72:	ff 27       	eor	r31, r31
    1e74:	e6 53       	subi	r30, 0x36	; 54
    1e76:	ff 4f       	sbci	r31, 0xFF	; 255
    1e78:	99 27       	eor	r25, r25
    1e7a:	33 27       	eor	r19, r19
    1e7c:	ee 24       	eor	r14, r14
    1e7e:	ff 24       	eor	r15, r15
    1e80:	a7 01       	movw	r20, r14
    1e82:	e7 01       	movw	r28, r14
    1e84:	05 90       	lpm	r0, Z+
    1e86:	08 94       	sec
    1e88:	07 94       	ror	r0
    1e8a:	28 f4       	brcc	.+10     	; 0x1e96 <__ftoa_engine+0x80>
    1e8c:	36 0f       	add	r19, r22
    1e8e:	e7 1e       	adc	r14, r23
    1e90:	f8 1e       	adc	r15, r24
    1e92:	49 1f       	adc	r20, r25
    1e94:	51 1d       	adc	r21, r1
    1e96:	66 0f       	add	r22, r22
    1e98:	77 1f       	adc	r23, r23
    1e9a:	88 1f       	adc	r24, r24
    1e9c:	99 1f       	adc	r25, r25
    1e9e:	06 94       	lsr	r0
    1ea0:	a1 f7       	brne	.-24     	; 0x1e8a <__ftoa_engine+0x74>
    1ea2:	05 90       	lpm	r0, Z+
    1ea4:	07 94       	ror	r0
    1ea6:	28 f4       	brcc	.+10     	; 0x1eb2 <__ftoa_engine+0x9c>
    1ea8:	e7 0e       	add	r14, r23
    1eaa:	f8 1e       	adc	r15, r24
    1eac:	49 1f       	adc	r20, r25
    1eae:	56 1f       	adc	r21, r22
    1eb0:	c1 1d       	adc	r28, r1
    1eb2:	77 0f       	add	r23, r23
    1eb4:	88 1f       	adc	r24, r24
    1eb6:	99 1f       	adc	r25, r25
    1eb8:	66 1f       	adc	r22, r22
    1eba:	06 94       	lsr	r0
    1ebc:	a1 f7       	brne	.-24     	; 0x1ea6 <__ftoa_engine+0x90>
    1ebe:	05 90       	lpm	r0, Z+
    1ec0:	07 94       	ror	r0
    1ec2:	28 f4       	brcc	.+10     	; 0x1ece <__ftoa_engine+0xb8>
    1ec4:	f8 0e       	add	r15, r24
    1ec6:	49 1f       	adc	r20, r25
    1ec8:	56 1f       	adc	r21, r22
    1eca:	c7 1f       	adc	r28, r23
    1ecc:	d1 1d       	adc	r29, r1
    1ece:	88 0f       	add	r24, r24
    1ed0:	99 1f       	adc	r25, r25
    1ed2:	66 1f       	adc	r22, r22
    1ed4:	77 1f       	adc	r23, r23
    1ed6:	06 94       	lsr	r0
    1ed8:	a1 f7       	brne	.-24     	; 0x1ec2 <__ftoa_engine+0xac>
    1eda:	05 90       	lpm	r0, Z+
    1edc:	07 94       	ror	r0
    1ede:	20 f4       	brcc	.+8      	; 0x1ee8 <__ftoa_engine+0xd2>
    1ee0:	49 0f       	add	r20, r25
    1ee2:	56 1f       	adc	r21, r22
    1ee4:	c7 1f       	adc	r28, r23
    1ee6:	d8 1f       	adc	r29, r24
    1ee8:	99 0f       	add	r25, r25
    1eea:	66 1f       	adc	r22, r22
    1eec:	77 1f       	adc	r23, r23
    1eee:	88 1f       	adc	r24, r24
    1ef0:	06 94       	lsr	r0
    1ef2:	a9 f7       	brne	.-22     	; 0x1ede <__ftoa_engine+0xc8>
    1ef4:	84 91       	lpm	r24, Z
    1ef6:	10 95       	com	r17
    1ef8:	17 70       	andi	r17, 0x07	; 7
    1efa:	41 f0       	breq	.+16     	; 0x1f0c <__ftoa_engine+0xf6>
    1efc:	d6 95       	lsr	r29
    1efe:	c7 95       	ror	r28
    1f00:	57 95       	ror	r21
    1f02:	47 95       	ror	r20
    1f04:	f7 94       	ror	r15
    1f06:	e7 94       	ror	r14
    1f08:	1a 95       	dec	r17
    1f0a:	c1 f7       	brne	.-16     	; 0x1efc <__ftoa_engine+0xe6>
    1f0c:	e0 e7       	ldi	r30, 0x70	; 112
    1f0e:	f0 e0       	ldi	r31, 0x00	; 0
    1f10:	68 94       	set
    1f12:	15 90       	lpm	r1, Z+
    1f14:	15 91       	lpm	r17, Z+
    1f16:	35 91       	lpm	r19, Z+
    1f18:	65 91       	lpm	r22, Z+
    1f1a:	95 91       	lpm	r25, Z+
    1f1c:	05 90       	lpm	r0, Z+
    1f1e:	7f e2       	ldi	r23, 0x2F	; 47
    1f20:	73 95       	inc	r23
    1f22:	e1 18       	sub	r14, r1
    1f24:	f1 0a       	sbc	r15, r17
    1f26:	43 0b       	sbc	r20, r19
    1f28:	56 0b       	sbc	r21, r22
    1f2a:	c9 0b       	sbc	r28, r25
    1f2c:	d0 09       	sbc	r29, r0
    1f2e:	c0 f7       	brcc	.-16     	; 0x1f20 <__ftoa_engine+0x10a>
    1f30:	e1 0c       	add	r14, r1
    1f32:	f1 1e       	adc	r15, r17
    1f34:	43 1f       	adc	r20, r19
    1f36:	56 1f       	adc	r21, r22
    1f38:	c9 1f       	adc	r28, r25
    1f3a:	d0 1d       	adc	r29, r0
    1f3c:	7e f4       	brtc	.+30     	; 0x1f5c <__ftoa_engine+0x146>
    1f3e:	70 33       	cpi	r23, 0x30	; 48
    1f40:	11 f4       	brne	.+4      	; 0x1f46 <__ftoa_engine+0x130>
    1f42:	8a 95       	dec	r24
    1f44:	e6 cf       	rjmp	.-52     	; 0x1f12 <__ftoa_engine+0xfc>
    1f46:	e8 94       	clt
    1f48:	01 50       	subi	r16, 0x01	; 1
    1f4a:	30 f0       	brcs	.+12     	; 0x1f58 <__ftoa_engine+0x142>
    1f4c:	08 0f       	add	r16, r24
    1f4e:	0a f4       	brpl	.+2      	; 0x1f52 <__ftoa_engine+0x13c>
    1f50:	00 27       	eor	r16, r16
    1f52:	02 17       	cp	r16, r18
    1f54:	08 f4       	brcc	.+2      	; 0x1f58 <__ftoa_engine+0x142>
    1f56:	20 2f       	mov	r18, r16
    1f58:	23 95       	inc	r18
    1f5a:	02 2f       	mov	r16, r18
    1f5c:	7a 33       	cpi	r23, 0x3A	; 58
    1f5e:	28 f0       	brcs	.+10     	; 0x1f6a <__ftoa_engine+0x154>
    1f60:	79 e3       	ldi	r23, 0x39	; 57
    1f62:	7d 93       	st	X+, r23
    1f64:	2a 95       	dec	r18
    1f66:	e9 f7       	brne	.-6      	; 0x1f62 <__ftoa_engine+0x14c>
    1f68:	10 c0       	rjmp	.+32     	; 0x1f8a <__ftoa_engine+0x174>
    1f6a:	7d 93       	st	X+, r23
    1f6c:	2a 95       	dec	r18
    1f6e:	89 f6       	brne	.-94     	; 0x1f12 <__ftoa_engine+0xfc>
    1f70:	06 94       	lsr	r0
    1f72:	97 95       	ror	r25
    1f74:	67 95       	ror	r22
    1f76:	37 95       	ror	r19
    1f78:	17 95       	ror	r17
    1f7a:	17 94       	ror	r1
    1f7c:	e1 18       	sub	r14, r1
    1f7e:	f1 0a       	sbc	r15, r17
    1f80:	43 0b       	sbc	r20, r19
    1f82:	56 0b       	sbc	r21, r22
    1f84:	c9 0b       	sbc	r28, r25
    1f86:	d0 09       	sbc	r29, r0
    1f88:	98 f0       	brcs	.+38     	; 0x1fb0 <__ftoa_engine+0x19a>
    1f8a:	23 95       	inc	r18
    1f8c:	7e 91       	ld	r23, -X
    1f8e:	73 95       	inc	r23
    1f90:	7a 33       	cpi	r23, 0x3A	; 58
    1f92:	08 f0       	brcs	.+2      	; 0x1f96 <__ftoa_engine+0x180>
    1f94:	70 e3       	ldi	r23, 0x30	; 48
    1f96:	7c 93       	st	X, r23
    1f98:	20 13       	cpse	r18, r16
    1f9a:	b8 f7       	brcc	.-18     	; 0x1f8a <__ftoa_engine+0x174>
    1f9c:	7e 91       	ld	r23, -X
    1f9e:	70 61       	ori	r23, 0x10	; 16
    1fa0:	7d 93       	st	X+, r23
    1fa2:	30 f0       	brcs	.+12     	; 0x1fb0 <__ftoa_engine+0x19a>
    1fa4:	83 95       	inc	r24
    1fa6:	71 e3       	ldi	r23, 0x31	; 49
    1fa8:	7d 93       	st	X+, r23
    1faa:	70 e3       	ldi	r23, 0x30	; 48
    1fac:	2a 95       	dec	r18
    1fae:	e1 f7       	brne	.-8      	; 0x1fa8 <__ftoa_engine+0x192>
    1fb0:	11 24       	eor	r1, r1
    1fb2:	ef 90       	pop	r14
    1fb4:	ff 90       	pop	r15
    1fb6:	0f 91       	pop	r16
    1fb8:	1f 91       	pop	r17
    1fba:	cf 91       	pop	r28
    1fbc:	df 91       	pop	r29
    1fbe:	99 27       	eor	r25, r25
    1fc0:	87 fd       	sbrc	r24, 7
    1fc2:	90 95       	com	r25
    1fc4:	08 95       	ret

00001fc6 <strnlen_P>:
    1fc6:	fc 01       	movw	r30, r24
    1fc8:	05 90       	lpm	r0, Z+
    1fca:	61 50       	subi	r22, 0x01	; 1
    1fcc:	70 40       	sbci	r23, 0x00	; 0
    1fce:	01 10       	cpse	r0, r1
    1fd0:	d8 f7       	brcc	.-10     	; 0x1fc8 <strnlen_P+0x2>
    1fd2:	80 95       	com	r24
    1fd4:	90 95       	com	r25
    1fd6:	8e 0f       	add	r24, r30
    1fd8:	9f 1f       	adc	r25, r31
    1fda:	08 95       	ret

00001fdc <strnlen>:
    1fdc:	fc 01       	movw	r30, r24
    1fde:	61 50       	subi	r22, 0x01	; 1
    1fe0:	70 40       	sbci	r23, 0x00	; 0
    1fe2:	01 90       	ld	r0, Z+
    1fe4:	01 10       	cpse	r0, r1
    1fe6:	d8 f7       	brcc	.-10     	; 0x1fde <strnlen+0x2>
    1fe8:	80 95       	com	r24
    1fea:	90 95       	com	r25
    1fec:	8e 0f       	add	r24, r30
    1fee:	9f 1f       	adc	r25, r31
    1ff0:	08 95       	ret

00001ff2 <fputc>:
    1ff2:	0f 93       	push	r16
    1ff4:	1f 93       	push	r17
    1ff6:	cf 93       	push	r28
    1ff8:	df 93       	push	r29
    1ffa:	fb 01       	movw	r30, r22
    1ffc:	23 81       	ldd	r18, Z+3	; 0x03
    1ffe:	21 fd       	sbrc	r18, 1
    2000:	03 c0       	rjmp	.+6      	; 0x2008 <fputc+0x16>
    2002:	8f ef       	ldi	r24, 0xFF	; 255
    2004:	9f ef       	ldi	r25, 0xFF	; 255
    2006:	2c c0       	rjmp	.+88     	; 0x2060 <fputc+0x6e>
    2008:	22 ff       	sbrs	r18, 2
    200a:	16 c0       	rjmp	.+44     	; 0x2038 <fputc+0x46>
    200c:	46 81       	ldd	r20, Z+6	; 0x06
    200e:	57 81       	ldd	r21, Z+7	; 0x07
    2010:	24 81       	ldd	r18, Z+4	; 0x04
    2012:	35 81       	ldd	r19, Z+5	; 0x05
    2014:	42 17       	cp	r20, r18
    2016:	53 07       	cpc	r21, r19
    2018:	44 f4       	brge	.+16     	; 0x202a <fputc+0x38>
    201a:	a0 81       	ld	r26, Z
    201c:	b1 81       	ldd	r27, Z+1	; 0x01
    201e:	9d 01       	movw	r18, r26
    2020:	2f 5f       	subi	r18, 0xFF	; 255
    2022:	3f 4f       	sbci	r19, 0xFF	; 255
    2024:	31 83       	std	Z+1, r19	; 0x01
    2026:	20 83       	st	Z, r18
    2028:	8c 93       	st	X, r24
    202a:	26 81       	ldd	r18, Z+6	; 0x06
    202c:	37 81       	ldd	r19, Z+7	; 0x07
    202e:	2f 5f       	subi	r18, 0xFF	; 255
    2030:	3f 4f       	sbci	r19, 0xFF	; 255
    2032:	37 83       	std	Z+7, r19	; 0x07
    2034:	26 83       	std	Z+6, r18	; 0x06
    2036:	14 c0       	rjmp	.+40     	; 0x2060 <fputc+0x6e>
    2038:	8b 01       	movw	r16, r22
    203a:	ec 01       	movw	r28, r24
    203c:	fb 01       	movw	r30, r22
    203e:	00 84       	ldd	r0, Z+8	; 0x08
    2040:	f1 85       	ldd	r31, Z+9	; 0x09
    2042:	e0 2d       	mov	r30, r0
    2044:	09 95       	icall
    2046:	89 2b       	or	r24, r25
    2048:	e1 f6       	brne	.-72     	; 0x2002 <fputc+0x10>
    204a:	d8 01       	movw	r26, r16
    204c:	16 96       	adiw	r26, 0x06	; 6
    204e:	8d 91       	ld	r24, X+
    2050:	9c 91       	ld	r25, X
    2052:	17 97       	sbiw	r26, 0x07	; 7
    2054:	01 96       	adiw	r24, 0x01	; 1
    2056:	17 96       	adiw	r26, 0x07	; 7
    2058:	9c 93       	st	X, r25
    205a:	8e 93       	st	-X, r24
    205c:	16 97       	sbiw	r26, 0x06	; 6
    205e:	ce 01       	movw	r24, r28
    2060:	df 91       	pop	r29
    2062:	cf 91       	pop	r28
    2064:	1f 91       	pop	r17
    2066:	0f 91       	pop	r16
    2068:	08 95       	ret

0000206a <sprintf>:
    206a:	ae e0       	ldi	r26, 0x0E	; 14
    206c:	b0 e0       	ldi	r27, 0x00	; 0
    206e:	eb e3       	ldi	r30, 0x3B	; 59
    2070:	f0 e1       	ldi	r31, 0x10	; 16
    2072:	0c 94 e2 0e 	jmp	0x1dc4	; 0x1dc4 <__prologue_saves__+0x1c>
    2076:	0d 89       	ldd	r16, Y+21	; 0x15
    2078:	1e 89       	ldd	r17, Y+22	; 0x16
    207a:	86 e0       	ldi	r24, 0x06	; 6
    207c:	8c 83       	std	Y+4, r24	; 0x04
    207e:	1a 83       	std	Y+2, r17	; 0x02
    2080:	09 83       	std	Y+1, r16	; 0x01
    2082:	8f ef       	ldi	r24, 0xFF	; 255
    2084:	9f e7       	ldi	r25, 0x7F	; 127
    2086:	9e 83       	std	Y+6, r25	; 0x06
    2088:	8d 83       	std	Y+5, r24	; 0x05
    208a:	ae 01       	movw	r20, r28
    208c:	47 5e       	subi	r20, 0xE7	; 231
    208e:	5f 4f       	sbci	r21, 0xFF	; 255
    2090:	6f 89       	ldd	r22, Y+23	; 0x17
    2092:	78 8d       	ldd	r23, Y+24	; 0x18
    2094:	ce 01       	movw	r24, r28
    2096:	01 96       	adiw	r24, 0x01	; 1
    2098:	0e 94 57 0b 	call	0x16ae	; 0x16ae <vfprintf>
    209c:	ef 81       	ldd	r30, Y+7	; 0x07
    209e:	f8 85       	ldd	r31, Y+8	; 0x08
    20a0:	e0 0f       	add	r30, r16
    20a2:	f1 1f       	adc	r31, r17
    20a4:	10 82       	st	Z, r1
    20a6:	2e 96       	adiw	r28, 0x0e	; 14
    20a8:	e4 e0       	ldi	r30, 0x04	; 4
    20aa:	0c 94 fe 0e 	jmp	0x1dfc	; 0x1dfc <__epilogue_restores__+0x1c>

000020ae <__ultoa_invert>:
    20ae:	fa 01       	movw	r30, r20
    20b0:	aa 27       	eor	r26, r26
    20b2:	28 30       	cpi	r18, 0x08	; 8
    20b4:	51 f1       	breq	.+84     	; 0x210a <__ultoa_invert+0x5c>
    20b6:	20 31       	cpi	r18, 0x10	; 16
    20b8:	81 f1       	breq	.+96     	; 0x211a <__ultoa_invert+0x6c>
    20ba:	e8 94       	clt
    20bc:	6f 93       	push	r22
    20be:	6e 7f       	andi	r22, 0xFE	; 254
    20c0:	6e 5f       	subi	r22, 0xFE	; 254
    20c2:	7f 4f       	sbci	r23, 0xFF	; 255
    20c4:	8f 4f       	sbci	r24, 0xFF	; 255
    20c6:	9f 4f       	sbci	r25, 0xFF	; 255
    20c8:	af 4f       	sbci	r26, 0xFF	; 255
    20ca:	b1 e0       	ldi	r27, 0x01	; 1
    20cc:	3e d0       	rcall	.+124    	; 0x214a <__ultoa_invert+0x9c>
    20ce:	b4 e0       	ldi	r27, 0x04	; 4
    20d0:	3c d0       	rcall	.+120    	; 0x214a <__ultoa_invert+0x9c>
    20d2:	67 0f       	add	r22, r23
    20d4:	78 1f       	adc	r23, r24
    20d6:	89 1f       	adc	r24, r25
    20d8:	9a 1f       	adc	r25, r26
    20da:	a1 1d       	adc	r26, r1
    20dc:	68 0f       	add	r22, r24
    20de:	79 1f       	adc	r23, r25
    20e0:	8a 1f       	adc	r24, r26
    20e2:	91 1d       	adc	r25, r1
    20e4:	a1 1d       	adc	r26, r1
    20e6:	6a 0f       	add	r22, r26
    20e8:	71 1d       	adc	r23, r1
    20ea:	81 1d       	adc	r24, r1
    20ec:	91 1d       	adc	r25, r1
    20ee:	a1 1d       	adc	r26, r1
    20f0:	20 d0       	rcall	.+64     	; 0x2132 <__ultoa_invert+0x84>
    20f2:	09 f4       	brne	.+2      	; 0x20f6 <__ultoa_invert+0x48>
    20f4:	68 94       	set
    20f6:	3f 91       	pop	r19
    20f8:	2a e0       	ldi	r18, 0x0A	; 10
    20fa:	26 9f       	mul	r18, r22
    20fc:	11 24       	eor	r1, r1
    20fe:	30 19       	sub	r19, r0
    2100:	30 5d       	subi	r19, 0xD0	; 208
    2102:	31 93       	st	Z+, r19
    2104:	de f6       	brtc	.-74     	; 0x20bc <__ultoa_invert+0xe>
    2106:	cf 01       	movw	r24, r30
    2108:	08 95       	ret
    210a:	46 2f       	mov	r20, r22
    210c:	47 70       	andi	r20, 0x07	; 7
    210e:	40 5d       	subi	r20, 0xD0	; 208
    2110:	41 93       	st	Z+, r20
    2112:	b3 e0       	ldi	r27, 0x03	; 3
    2114:	0f d0       	rcall	.+30     	; 0x2134 <__ultoa_invert+0x86>
    2116:	c9 f7       	brne	.-14     	; 0x210a <__ultoa_invert+0x5c>
    2118:	f6 cf       	rjmp	.-20     	; 0x2106 <__ultoa_invert+0x58>
    211a:	46 2f       	mov	r20, r22
    211c:	4f 70       	andi	r20, 0x0F	; 15
    211e:	40 5d       	subi	r20, 0xD0	; 208
    2120:	4a 33       	cpi	r20, 0x3A	; 58
    2122:	18 f0       	brcs	.+6      	; 0x212a <__ultoa_invert+0x7c>
    2124:	49 5d       	subi	r20, 0xD9	; 217
    2126:	31 fd       	sbrc	r19, 1
    2128:	40 52       	subi	r20, 0x20	; 32
    212a:	41 93       	st	Z+, r20
    212c:	02 d0       	rcall	.+4      	; 0x2132 <__ultoa_invert+0x84>
    212e:	a9 f7       	brne	.-22     	; 0x211a <__ultoa_invert+0x6c>
    2130:	ea cf       	rjmp	.-44     	; 0x2106 <__ultoa_invert+0x58>
    2132:	b4 e0       	ldi	r27, 0x04	; 4
    2134:	a6 95       	lsr	r26
    2136:	97 95       	ror	r25
    2138:	87 95       	ror	r24
    213a:	77 95       	ror	r23
    213c:	67 95       	ror	r22
    213e:	ba 95       	dec	r27
    2140:	c9 f7       	brne	.-14     	; 0x2134 <__ultoa_invert+0x86>
    2142:	00 97       	sbiw	r24, 0x00	; 0
    2144:	61 05       	cpc	r22, r1
    2146:	71 05       	cpc	r23, r1
    2148:	08 95       	ret
    214a:	9b 01       	movw	r18, r22
    214c:	ac 01       	movw	r20, r24
    214e:	0a 2e       	mov	r0, r26
    2150:	06 94       	lsr	r0
    2152:	57 95       	ror	r21
    2154:	47 95       	ror	r20
    2156:	37 95       	ror	r19
    2158:	27 95       	ror	r18
    215a:	ba 95       	dec	r27
    215c:	c9 f7       	brne	.-14     	; 0x2150 <__ultoa_invert+0xa2>
    215e:	62 0f       	add	r22, r18
    2160:	73 1f       	adc	r23, r19
    2162:	84 1f       	adc	r24, r20
    2164:	95 1f       	adc	r25, r21
    2166:	a0 1d       	adc	r26, r0
    2168:	08 95       	ret

0000216a <_exit>:
    216a:	f8 94       	cli

0000216c <__stop_program>:
    216c:	ff cf       	rjmp	.-2      	; 0x216c <__stop_program>
